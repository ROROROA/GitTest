{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "““recall_kdd_v4.ipynb”的副本”的副本",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "TPU",
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "809b0aca137141128efc10ed1ef2faeb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_9a9d01811e344e758adb561c28a1866e",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d63dc21d620846c491d1a72560e602b7",
              "IPY_MODEL_5807547551e94bd9b86656edc725a701"
            ]
          }
        },
        "9a9d01811e344e758adb561c28a1866e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d63dc21d620846c491d1a72560e602b7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_77afb896031344398301b22fdc416932",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 18505,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 18505,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_dc6efbd9fa6c4a839a771da1736a5d24"
          }
        },
        "5807547551e94bd9b86656edc725a701": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_181c71656f6d4ff4bf3f15d4d2260a02",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 18505/18505 [00:21&lt;00:00, 852.74it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9d9f21dc17294a25b9f18ae2a444c94e"
          }
        },
        "77afb896031344398301b22fdc416932": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "dc6efbd9fa6c4a839a771da1736a5d24": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "181c71656f6d4ff4bf3f15d4d2260a02": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9d9f21dc17294a25b9f18ae2a444c94e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "58a2d3d73d87484db8f9a99958825fde": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_524ae7f2d8ca43b683c3bd2236991a37",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_bf7eeb4ba3b24b7bba8a8d09065ae1d0",
              "IPY_MODEL_6058dce096454fe499f4ba44d8583d38"
            ]
          }
        },
        "524ae7f2d8ca43b683c3bd2236991a37": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bf7eeb4ba3b24b7bba8a8d09065ae1d0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_bfa3c628f71f46ef8784134aac17f66c",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 40775,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 40775,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4ac48c136fdf43c0aa811292876082e5"
          }
        },
        "6058dce096454fe499f4ba44d8583d38": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_717a32df96494f0d94c0f762508d3141",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 40775/40775 [00:14&lt;00:00, 2756.86it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_773284653de444aabeaf2074162da8eb"
          }
        },
        "bfa3c628f71f46ef8784134aac17f66c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4ac48c136fdf43c0aa811292876082e5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "717a32df96494f0d94c0f762508d3141": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "773284653de444aabeaf2074162da8eb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ffcf34330f9147a7be7f99fd59d91832": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7da92a7186a24cfc9824099f97b09e4f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f7bcb8bde1ac4ee49cb5bc58caad107b",
              "IPY_MODEL_d720c55a74a7463ba3a2aefd639068dc"
            ]
          }
        },
        "7da92a7186a24cfc9824099f97b09e4f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f7bcb8bde1ac4ee49cb5bc58caad107b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_ffed53ce858d4f2ab4582dfbd584d8da",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1663,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1663,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f8bed7b5c1fc445db3a40b9f721cfab9"
          }
        },
        "d720c55a74a7463ba3a2aefd639068dc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_4b09a7db100045a99533a858237baca0",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1663/1663 [00:29&lt;00:00, 56.55it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_18208e14bf4845428a4b5f68ebaae8e2"
          }
        },
        "ffed53ce858d4f2ab4582dfbd584d8da": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f8bed7b5c1fc445db3a40b9f721cfab9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4b09a7db100045a99533a858237baca0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "18208e14bf4845428a4b5f68ebaae8e2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "03cd63a3af884df78a5a57d6bbd9e347": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d8afd22cdf6e423aae28a3878eea92fe",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_916d2afd7cc741c19cf8dbc6e8bb157d",
              "IPY_MODEL_115a8793bd424cc98cb2696d4969708f"
            ]
          }
        },
        "d8afd22cdf6e423aae28a3878eea92fe": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "916d2afd7cc741c19cf8dbc6e8bb157d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_b77318fd30fd470f8436bc356bfbd95b",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 18672,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 18672,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b82fc86d72c442119c038947771be5b9"
          }
        },
        "115a8793bd424cc98cb2696d4969708f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_e98d6edf08eb4ed682da65e9e47ea67c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 18672/18672 [00:32&lt;00:00, 570.58it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2a806c678c0c40cdb5fd0c1be2af2229"
          }
        },
        "b77318fd30fd470f8436bc356bfbd95b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b82fc86d72c442119c038947771be5b9": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e98d6edf08eb4ed682da65e9e47ea67c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2a806c678c0c40cdb5fd0c1be2af2229": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "930543ac2019439aa4185752be4f65d9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3e0ddf5b5fc944bf8b9379d4b11846ba",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_9ab38c8984624e28ad0f186bb20a5e65",
              "IPY_MODEL_dfb8bc3b2b474b7aa807e417f9b35867"
            ]
          }
        },
        "3e0ddf5b5fc944bf8b9379d4b11846ba": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9ab38c8984624e28ad0f186bb20a5e65": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d58e1dbb8f82414d8be7d44ef1a302d3",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 41409,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 41409,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_9c3a167c4eda47cd818eacb02477cc95"
          }
        },
        "dfb8bc3b2b474b7aa807e417f9b35867": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_9b4a63947f6e40c3995fc74882066204",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 41409/41409 [00:05&lt;00:00, 7055.11it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e590d5a7193843c2b29b678a786fa78b"
          }
        },
        "d58e1dbb8f82414d8be7d44ef1a302d3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "9c3a167c4eda47cd818eacb02477cc95": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9b4a63947f6e40c3995fc74882066204": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e590d5a7193843c2b29b678a786fa78b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "22efcdcef74a4fce90b5d2e97033030b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_e13d22932bdc496cb977c0c7c7308794",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_bd0011de4de64e6e9428c8a0f215f87e",
              "IPY_MODEL_2b773eef42be4355a94a582c95a0a236"
            ]
          }
        },
        "e13d22932bdc496cb977c0c7c7308794": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bd0011de4de64e6e9428c8a0f215f87e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0e3808f1f4874846af651763a39ee270",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1726,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1726,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d097cf864d6e4c40871b9c3059faf40f"
          }
        },
        "2b773eef42be4355a94a582c95a0a236": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_474351cf7a7342acaa44ad17a6cc3817",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1726/1726 [00:52&lt;00:00, 33.00it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_f3716390107442e29faff9b4b60c5d6a"
          }
        },
        "0e3808f1f4874846af651763a39ee270": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d097cf864d6e4c40871b9c3059faf40f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "474351cf7a7342acaa44ad17a6cc3817": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "f3716390107442e29faff9b4b60c5d6a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ee6a1c462e8841fa8d62621e05cff5b4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_adc386373c7f44d2ac628822f8beeb30",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_261968c7d78849acb7096dbbf5adcbd9",
              "IPY_MODEL_c930ce737a7744da9ebc9bf8b9187ab5"
            ]
          }
        },
        "adc386373c7f44d2ac628822f8beeb30": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "261968c7d78849acb7096dbbf5adcbd9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_5be0ac91af614fa0b562e71c6bb2268b",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 18398,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 18398,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_defc4c939481408bb49f0a047d45b754"
          }
        },
        "c930ce737a7744da9ebc9bf8b9187ab5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_b8bd394e708a4b01a2d03ce5d332c577",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 18398/18398 [00:46&lt;00:00, 391.65it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_aee5293446c5499b8ee37866795ff185"
          }
        },
        "5be0ac91af614fa0b562e71c6bb2268b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "defc4c939481408bb49f0a047d45b754": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b8bd394e708a4b01a2d03ce5d332c577": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "aee5293446c5499b8ee37866795ff185": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9db7ebf119724101aa6b83cc46393a7f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0a330de8575345568a6ea6e2af49c070",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_41477fd435ce47409f15a4875ecd04b5",
              "IPY_MODEL_12978f03dc764a6ca137d22dc15ba054"
            ]
          }
        },
        "0a330de8575345568a6ea6e2af49c070": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "41477fd435ce47409f15a4875ecd04b5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_05ab56ba18c14cfd92344e3f4d259623",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 41031,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 41031,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_268f8784243340cab8ecd7f8ffbe22ce"
          }
        },
        "12978f03dc764a6ca137d22dc15ba054": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_fce8e4fdc2394384982169307a70eadb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 41031/41031 [00:05&lt;00:00, 7114.48it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0ab4b1c85e3a43c99cadffdc26d88c4b"
          }
        },
        "05ab56ba18c14cfd92344e3f4d259623": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "268f8784243340cab8ecd7f8ffbe22ce": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fce8e4fdc2394384982169307a70eadb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0ab4b1c85e3a43c99cadffdc26d88c4b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4939ef795fee4009a773840310c5a9ae": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3bf41811e1c64e6f83916114099c1215",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_3cca00dd596e45459517b0e86c8e0059",
              "IPY_MODEL_026fe13db0c449068304923f77562c5a"
            ]
          }
        },
        "3bf41811e1c64e6f83916114099c1215": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3cca00dd596e45459517b0e86c8e0059": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_7d7c3d444aaf42b7a82dc5a927291e9d",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1690,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1690,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_2ba29718fb924dfe8428a117fd581879"
          }
        },
        "026fe13db0c449068304923f77562c5a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_a1e0a16661494bd9a8ffa125f6688167",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1690/1690 [00:34&lt;00:00, 49.17it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ddc77f6961b24822b02c088f563b7abf"
          }
        },
        "7d7c3d444aaf42b7a82dc5a927291e9d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2ba29718fb924dfe8428a117fd581879": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a1e0a16661494bd9a8ffa125f6688167": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ddc77f6961b24822b02c088f563b7abf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e2e5859868204ca08621b108a0bc4564": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_38a93060415e4e7b92488bde827c526f",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_084034b75fb04632a6e6d6426b85bf8c",
              "IPY_MODEL_acb6793b0103400f97eb9e5ecbe64466"
            ]
          }
        },
        "38a93060415e4e7b92488bde827c526f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "084034b75fb04632a6e6d6426b85bf8c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_438666142a4a4261b1b1b27b63e287f8",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 18821,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 18821,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3f6eaa48314c415a9fa275fa1dccafee"
          }
        },
        "acb6793b0103400f97eb9e5ecbe64466": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_0fdc15a0a9864f6aad6e52c60536c734",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 18821/18821 [00:56&lt;00:00, 335.52it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c0e6f2852ea64d9c9b7ccbf796d7b91d"
          }
        },
        "438666142a4a4261b1b1b27b63e287f8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3f6eaa48314c415a9fa275fa1dccafee": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0fdc15a0a9864f6aad6e52c60536c734": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c0e6f2852ea64d9c9b7ccbf796d7b91d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3daa60fbb1c84de79b4b4a4cb2c41ece": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_48086170d70e4520befedf6d4bbd2a49",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_23106058b8bd4b1583e7d477ad178666",
              "IPY_MODEL_749d5730bc3b4d3e842bb36378aec6fe"
            ]
          }
        },
        "48086170d70e4520befedf6d4bbd2a49": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "23106058b8bd4b1583e7d477ad178666": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_e08402dcba6e4e15bf71beb3a8f39087",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 42815,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 42815,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_28c2fbcf8f0245319b79a9d3fd4e903b"
          }
        },
        "749d5730bc3b4d3e842bb36378aec6fe": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_515c77e831d2465ebcb211d6ec69162a",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 42815/42815 [00:47&lt;00:00, 900.64it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_97233ff171d24a91983475f9ceb411e4"
          }
        },
        "e08402dcba6e4e15bf71beb3a8f39087": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "28c2fbcf8f0245319b79a9d3fd4e903b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "515c77e831d2465ebcb211d6ec69162a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "97233ff171d24a91983475f9ceb411e4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "56f916e9d93b4095aa52be70a60eafce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_a47ac5d34f8441d5a54aa2c23d145155",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d4386134300841d59e58a5d0347d4605",
              "IPY_MODEL_27b37d01fa8241edb623e90c622a7b0c"
            ]
          }
        },
        "a47ac5d34f8441d5a54aa2c23d145155": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d4386134300841d59e58a5d0347d4605": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d0f864811f054da98a8391a3ff18ee8e",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1675,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1675,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0b999e0b2e6b4ddbb29239b3ccb47feb"
          }
        },
        "27b37d01fa8241edb623e90c622a7b0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_5e76a15a48314ad2a0a1a5fbc441fb0c",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1675/1675 [00:40&lt;00:00, 41.11it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b1e6e16249044c2c9751a1b826c95e97"
          }
        },
        "d0f864811f054da98a8391a3ff18ee8e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0b999e0b2e6b4ddbb29239b3ccb47feb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5e76a15a48314ad2a0a1a5fbc441fb0c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b1e6e16249044c2c9751a1b826c95e97": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ce76988732fd4b56b2e340cbbd1e69e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_5dec5642ac9b47d8bce08c5f3061ad1b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_043041e1bd2f4e58be86e4ad6670ad7e",
              "IPY_MODEL_5ab3a9588f98424c8efe3e2f944fce5a"
            ]
          }
        },
        "5dec5642ac9b47d8bce08c5f3061ad1b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "043041e1bd2f4e58be86e4ad6670ad7e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_f02c9e90fe024a2598dfaef13ab4da10",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 18618,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 18618,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_3a5d0c7147bc4ca19de8bd6774c4a9fa"
          }
        },
        "5ab3a9588f98424c8efe3e2f944fce5a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_5b6dbe10a71043e094d0524c84581d2d",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 18618/18618 [01:04&lt;00:00, 290.61it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d211658c94ae47398aa4b8e9e816b0dc"
          }
        },
        "f02c9e90fe024a2598dfaef13ab4da10": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "3a5d0c7147bc4ca19de8bd6774c4a9fa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5b6dbe10a71043e094d0524c84581d2d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d211658c94ae47398aa4b8e9e816b0dc": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "69ef87a3234b4296a61d0d1c35422361": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_736525f135f74489bd64c856941c7541",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_758420cb6baa45028950d1b826cff28b",
              "IPY_MODEL_1a3e3e7f10f14dbeb242ba6857b8439a"
            ]
          }
        },
        "736525f135f74489bd64c856941c7541": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "758420cb6baa45028950d1b826cff28b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_0308960e089142c9836cc308de71895f",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 42840,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 42840,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ce7c86700f19452c8e03c1a16a64e205"
          }
        },
        "1a3e3e7f10f14dbeb242ba6857b8439a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_a6700eaf38b048f08443b624179426ef",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 42840/42840 [00:06&lt;00:00, 6321.99it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0d8c2180f9ec44eb9315794268bfe5cf"
          }
        },
        "0308960e089142c9836cc308de71895f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ce7c86700f19452c8e03c1a16a64e205": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a6700eaf38b048f08443b624179426ef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0d8c2180f9ec44eb9315794268bfe5cf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c3ce05db74b241018a6b8a9a4b6f1084": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_226ece4b2afa4309aae06f9c82db1a06",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d0ba92ec49344eeb88f481b1fa818bd7",
              "IPY_MODEL_224d4b670da94f0db31c8dc209dfa5b7"
            ]
          }
        },
        "226ece4b2afa4309aae06f9c82db1a06": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d0ba92ec49344eeb88f481b1fa818bd7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_a901887ae9ed415485538befda5d0c90",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1708,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1708,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_bb4503aa734645a48aab60345ff6f752"
          }
        },
        "224d4b670da94f0db31c8dc209dfa5b7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_671ec9ea0c5649c6abd71ebf3d753eca",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1708/1708 [02:00&lt;00:00, 14.21it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_68d1974fc1c4475b96223d69ff188c6f"
          }
        },
        "a901887ae9ed415485538befda5d0c90": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "bb4503aa734645a48aab60345ff6f752": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "671ec9ea0c5649c6abd71ebf3d753eca": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "68d1974fc1c4475b96223d69ff188c6f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ba9563cea7204913b8832bbceea5fb2c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_31777a24d14b4bad9b6b7ff33db0e647",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_085123fcf66441c287fca68568b02ae9",
              "IPY_MODEL_d11a9315700849c4afbe99e5d387894e"
            ]
          }
        },
        "31777a24d14b4bad9b6b7ff33db0e647": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "085123fcf66441c287fca68568b02ae9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_d2e91e415bf04d5ca8925af0af8a4ba0",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 19459,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 19459,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_85a27a84525946e1a8a7ab9f1450210a"
          }
        },
        "d11a9315700849c4afbe99e5d387894e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_90eea0cf768e466f932576cd60a55042",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 19459/19459 [01:09&lt;00:00, 280.90it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_53f8811d52314612820fb83f4a37f44e"
          }
        },
        "d2e91e415bf04d5ca8925af0af8a4ba0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "85a27a84525946e1a8a7ab9f1450210a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "90eea0cf768e466f932576cd60a55042": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "53f8811d52314612820fb83f4a37f44e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "69d3cd4481814b109993aa5ca8ab1064": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_baff81a6987e4fdfb352d0deed8fac86",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_d76ea5dac2df4e55b9ed7248c15f5230",
              "IPY_MODEL_96229023c6fc45b29c58669b269ab2ce"
            ]
          }
        },
        "baff81a6987e4fdfb352d0deed8fac86": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d76ea5dac2df4e55b9ed7248c15f5230": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_837f6faa07fa44a8a1841db1fb7968e5",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 45630,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 45630,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8d5ea9bd9cea4aef9a690149d40206c0"
          }
        },
        "96229023c6fc45b29c58669b269ab2ce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_5594f07565084d47bab63ff863c25fbb",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 45630/45630 [00:59&lt;00:00, 762.12it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4696512cefe04eba89de0944e6065967"
          }
        },
        "837f6faa07fa44a8a1841db1fb7968e5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8d5ea9bd9cea4aef9a690149d40206c0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5594f07565084d47bab63ff863c25fbb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4696512cefe04eba89de0944e6065967": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a02ef8a9a4464e1cac37da9d2573ed13": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_be0c0d651913452e8310bfbf2bcb87d3",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e7db0ea45217433b83a272739b6b47ef",
              "IPY_MODEL_123ebc95c4fb44aa9f96a937f83cebfb"
            ]
          }
        },
        "be0c0d651913452e8310bfbf2bcb87d3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e7db0ea45217433b83a272739b6b47ef": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_1efb7cb4330f4f2c9f36d6dfeed48d58",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1798,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1798,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a00f9653c0fe434d979a6ea73f4dc5a7"
          }
        },
        "123ebc95c4fb44aa9f96a937f83cebfb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_5fd55f88642b422aa0230eb538dccb83",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1798/1798 [02:13&lt;00:00, 13.49it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d7019a5011f54e448c526e80007f5099"
          }
        },
        "1efb7cb4330f4f2c9f36d6dfeed48d58": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a00f9653c0fe434d979a6ea73f4dc5a7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5fd55f88642b422aa0230eb538dccb83": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d7019a5011f54e448c526e80007f5099": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "46d7311eb8a64d568b4fb64a18e69dd4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_100b6ff5b7e34f0b910d754dcded2317",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f546cc41b9e749488e9b2adf56dde795",
              "IPY_MODEL_30f42aff129c46fea91903eec4e365ad"
            ]
          }
        },
        "100b6ff5b7e34f0b910d754dcded2317": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f546cc41b9e749488e9b2adf56dde795": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_93532b0545dd4661b3782bc04e2bab32",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 20396,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 20396,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_171f1c22c7c443ec8394d63c635bb9d7"
          }
        },
        "30f42aff129c46fea91903eec4e365ad": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_2ddaed1774cd4ca88c5bf84a55fbf1de",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 20396/20396 [01:20&lt;00:00, 252.05it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_893de12c8f9443718fd919ae4f0a634e"
          }
        },
        "93532b0545dd4661b3782bc04e2bab32": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "171f1c22c7c443ec8394d63c635bb9d7": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ddaed1774cd4ca88c5bf84a55fbf1de": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "893de12c8f9443718fd919ae4f0a634e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4c1b17514f8d43e78584ec460a5542b8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_7b0a819d8bd047d6ab2f406740e76a2a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_24024af749984ccfb9072af7e08c297d",
              "IPY_MODEL_89eaf4c570d64ae9a3fadbb519d9131f"
            ]
          }
        },
        "7b0a819d8bd047d6ab2f406740e76a2a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "24024af749984ccfb9072af7e08c297d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_fbb69efc9b624d98858bed7bf51820a7",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 48664,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 48664,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_ecd0c9246915411ab53d2d9382b28a2f"
          }
        },
        "89eaf4c570d64ae9a3fadbb519d9131f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_abf29a920b424513a921df8c34043467",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 48664/48664 [01:10&lt;00:00, 687.78it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_1c3e24ded5c64a509e1838a495e862e8"
          }
        },
        "fbb69efc9b624d98858bed7bf51820a7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ecd0c9246915411ab53d2d9382b28a2f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "abf29a920b424513a921df8c34043467": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1c3e24ded5c64a509e1838a495e862e8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c623080f863e480f81027b640b35363e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_51d00a34aa1e483cbd8e31188d1582db",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_e6c8344eebff4ab2961bf76107139f65",
              "IPY_MODEL_1b16ff6546ac46de95ea58ddb1fc39ba"
            ]
          }
        },
        "51d00a34aa1e483cbd8e31188d1582db": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e6c8344eebff4ab2961bf76107139f65": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_7737f9233d44429a880966fb7602763a",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 1821,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1821,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_0048faace94a453fac7a23e1d8b5e6c8"
          }
        },
        "1b16ff6546ac46de95ea58ddb1fc39ba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_ebd825d733614e1fae33173432bbe378",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 1821/1821 [01:02&lt;00:00, 29.08it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4536fbbac37c414893d51c36c7f6d9e0"
          }
        },
        "7737f9233d44429a880966fb7602763a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "0048faace94a453fac7a23e1d8b5e6c8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ebd825d733614e1fae33173432bbe378": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4536fbbac37c414893d51c36c7f6d9e0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b468d0107a964a4a85d06d234e8c546f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HBoxModel",
          "state": {
            "_view_name": "HBoxView",
            "_dom_classes": [],
            "_model_name": "HBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_99c3b52d0ad0413eb3c8443d378e510d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_68ad10aa6e6148d28ab36099a9ad7354",
              "IPY_MODEL_f5539be5deca4689ad56007158d0fe9e"
            ]
          }
        },
        "99c3b52d0ad0413eb3c8443d378e510d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "68ad10aa6e6148d28ab36099a9ad7354": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatProgressModel",
          "state": {
            "_view_name": "ProgressView",
            "style": "IPY_MODEL_054de505ae0d4c7e89cd917f088546ad",
            "_dom_classes": [],
            "description": "100%",
            "_model_name": "FloatProgressModel",
            "bar_style": "success",
            "max": 31095,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 31095,
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "orientation": "horizontal",
            "min": 0,
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d31012934f094504b8c86e00cbc4f58f"
          }
        },
        "f5539be5deca4689ad56007158d0fe9e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "HTMLModel",
          "state": {
            "_view_name": "HTMLView",
            "style": "IPY_MODEL_450864240d3d4d8a80d6e81f0a919458",
            "_dom_classes": [],
            "description": "",
            "_model_name": "HTMLModel",
            "placeholder": "​",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": " 31095/31095 [19:28&lt;00:00, 26.62it/s]",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_517c4844cecc4d5c81eef6c8f3180abb"
          }
        },
        "054de505ae0d4c7e89cd917f088546ad": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ProgressStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ProgressStyleModel",
            "description_width": "initial",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "bar_color": null,
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d31012934f094504b8c86e00cbc4f58f": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "450864240d3d4d8a80d6e81f0a919458": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "517c4844cecc4d5c81eef6c8f3180abb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "OU8eRXLJbRPN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!wget http://tianchi-competition.oss-cn-hangzhou.aliyuncs.com/231785/underexpose_train.zip\n",
        "!wget http://tianchi-competition.oss-cn-hangzhou.aliyuncs.com/231785/underexpose_test.zip"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tzhc76TLgBzP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import os\n",
        "pre_dir = '/content/drive/My Drive/Colab/KDD'\n",
        "# data_dir = pre_dir + '/datasets'\n",
        "# if not os.path.exists(data_dir):\n",
        "#   os.makedirs(data_dir)\n",
        "os.chdir(pre_dir)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7BELclaRgENw",
        "colab_type": "code",
        "outputId": "ec50a526-e889-477d-be12-9a18823f51d2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 121
        }
      },
      "source": [
        "!ls"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "datasets\t\t      sub_offline\n",
            "offline_underexpose_answer    sub_online\n",
            "offline_underexpose_answer_2  underexpose_test\n",
            "offline_underexpose_test      underexpose_test.zip\n",
            "offline_underexpose_test_2    underexpose_train\n",
            "offline_underexpose_train_2   underexpose_train.zip\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nmfZP_lUg2o9",
        "colab_type": "code",
        "outputId": "7cf81f25-bb50-48ee-fc3b-52031a5fca68",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 124
        }
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n",
            "\n",
            "Enter your authorization code:\n",
            "··········\n",
            "Mounted at /content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WFgP77IGLqlQ",
        "colab_type": "code",
        "outputId": "01df2efe-761e-43b9-fc16-28e597eab428",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 211
        }
      },
      "source": [
        "!pip3 install annoy"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting annoy\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/00/15/5a9db225ebda93a235aebd5e42bbf83ab7035e7e4783c6cb528c635c9afb/annoy-1.16.3.tar.gz (644kB)\n",
            "\r\u001b[K     |▌                               | 10kB 18.8MB/s eta 0:00:01\r\u001b[K     |█                               | 20kB 2.2MB/s eta 0:00:01\r\u001b[K     |█▌                              | 30kB 2.9MB/s eta 0:00:01\r\u001b[K     |██                              | 40kB 3.8MB/s eta 0:00:01\r\u001b[K     |██▌                             | 51kB 2.6MB/s eta 0:00:01\r\u001b[K     |███                             | 61kB 3.1MB/s eta 0:00:01\r\u001b[K     |███▋                            | 71kB 3.6MB/s eta 0:00:01\r\u001b[K     |████                            | 81kB 3.9MB/s eta 0:00:01\r\u001b[K     |████▋                           | 92kB 4.4MB/s eta 0:00:01\r\u001b[K     |█████                           | 102kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 112kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████                          | 122kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████▋                         | 133kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████▏                        | 143kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 153kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 163kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 174kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 184kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████▋                      | 194kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 204kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████▊                     | 215kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████▏                    | 225kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 235kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████▏                   | 245kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 256kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████▎                  | 266kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████▊                  | 276kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████▎                 | 286kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████▊                 | 296kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████▎                | 307kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████▊                | 317kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 327kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████▉               | 337kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▎              | 348kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████▉              | 358kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▎             | 368kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 378kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 389kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 399kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▍           | 409kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████▉           | 419kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▍          | 430kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████▉          | 440kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 450kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 460kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 471kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 481kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████▍       | 491kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 501kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 512kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 522kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 532kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 542kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▌    | 552kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 563kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▌   | 573kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 583kB 3.5MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 593kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 604kB 3.5MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▌ | 614kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 624kB 3.5MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▌| 634kB 3.5MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 645kB 3.5MB/s \n",
            "\u001b[?25hBuilding wheels for collected packages: annoy\n",
            "  Building wheel for annoy (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for annoy: filename=annoy-1.16.3-cp36-cp36m-linux_x86_64.whl size=297346 sha256=cf71503f6cf022d80035017c3654607124ad2ef513064159cb601a2ccdbe4105\n",
            "  Stored in directory: /root/.cache/pip/wheels/f3/01/54/6ef760fe9f9fc6ba8c19cebbe6358212b5f3b5b0195c0b813f\n",
            "Successfully built annoy\n",
            "Installing collected packages: annoy\n",
            "Successfully installed annoy-1.16.3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MI827pZZr4vc",
        "colab_type": "code",
        "outputId": "d0d87ace-4d48-482d-ac11-d30d311c7361",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 141
        }
      },
      "source": [
        "!pip install faiss-cpu"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting faiss-cpu\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/1d/84/9de38703486d9f00b1a63590887a318d08c52f10f768968bd7626aee75da/faiss_cpu-1.6.3-cp36-cp36m-manylinux2010_x86_64.whl (7.2MB)\n",
            "\u001b[K     |████████████████████████████████| 7.2MB 3.2MB/s \n",
            "\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from faiss-cpu) (1.18.4)\n",
            "Installing collected packages: faiss-cpu\n",
            "Successfully installed faiss-cpu-1.6.3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SKgphN42COAs",
        "colab_type": "code",
        "outputId": "611c9cbd-7314-4a57-8f0d-72fb251c4734",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "!unzip underexpose_train.zip\n",
        "!unzip underexpose_test.zip\n",
        "# phase 0\n",
        "!mv underexpose_test/underexpose_test_click-0/underexpose_test_click-0.csv underexpose_test/underexpose_test_click-0.csv\n",
        "!mv underexpose_test/underexpose_test_click-0/underexpose_test_qtime-0.csv underexpose_test/underexpose_test_qtime-0.csv\n",
        "\n",
        "# phase 1\n",
        "!unzip -P 7c2d2b8a636cbd790ff12a007907b2ba underexpose_train/underexpose_train_click-1.zip \n",
        "!unzip -P 96d071a532e801423be614e9e8414992 underexpose_test/underexpose_test_click-1.zip \n",
        "!mv underexpose_train_click-1.csv underexpose_train/underexpose_train_click-1.csv\n",
        "!mv underexpose_test_click-1.csv underexpose_test/underexpose_test_click-1.csv\n",
        "!mv underexpose_test_qtime-1.csv underexpose_test/underexpose_test_qtime-1.csv\n",
        "\n",
        "# phase 2\n",
        "!unzip -P ea0ec486b76ae41ed836a8059726aa85 underexpose_train/underexpose_train_click-2.zip \n",
        "!unzip -P 503bf7a5882d3fac5ca9884d9010078c underexpose_test/underexpose_test_click-2.zip \n",
        "!mv underexpose_train_click-2.csv underexpose_train/underexpose_train_click-2.csv\n",
        "!mv underexpose_test_click-2.csv underexpose_test/underexpose_test_click-2.csv\n",
        "!mv underexpose_test_qtime-2.csv underexpose_test/underexpose_test_qtime-2.csv\n",
        "\n",
        "# phase 3\n",
        "!unzip -P 65255c3677a40bf4d341b0c739ad6dff underexpose_train/underexpose_train_click-3.zip \n",
        "!unzip -P dd3de82d0b3a7fe9c55e0b260027f50f underexpose_test/underexpose_test_click-3.zip \n",
        "!mv underexpose_train_click-3.csv underexpose_train/underexpose_train_click-3.csv\n",
        "!mv underexpose_test_click-3.csv underexpose_test/underexpose_test_click-3.csv\n",
        "!mv underexpose_test_qtime-3.csv underexpose_test/underexpose_test_qtime-3.csv\n",
        "\n",
        "\n",
        "# phase 4\n",
        "!unzip -P c8376f1c4ed07b901f7fe5c60362ad7b underexpose_train/underexpose_train_click-4.zip \n",
        "!unzip -P 04e966e4f6c7b48f1272a53d8f9ade5d underexpose_test/underexpose_test_click-4.zip \n",
        "!mv underexpose_train_click-4.csv underexpose_train/underexpose_train_click-4.csv\n",
        "!mv underexpose_test_click-4.csv underexpose_test/underexpose_test_click-4.csv\n",
        "!mv underexpose_test_qtime-4.csv underexpose_test/underexpose_test_qtime-4.csv\n",
        "\n",
        "\n",
        "# phase 5\n",
        "!unzip -P 63b326dc07d39c9afc65ed81002ff2ab underexpose_train/underexpose_train_click-5.zip \n",
        "!unzip -P 13a14563bf5528121b8aaccfa7a0dd73 underexpose_test/underexpose_test_click-5.zip \n",
        "!mv underexpose_train_click-5.csv underexpose_train/underexpose_train_click-5.csv\n",
        "!mv underexpose_test_click-5.csv underexpose_test/underexpose_test_click-5.csv\n",
        "!mv underexpose_test_qtime-5.csv underexpose_test/underexpose_test_qtime-5.csv\n",
        "\n",
        "# phase 6\n",
        "!unzip -P f611f3e477b458b718223248fd0d1b55 underexpose_train/underexpose_train_click-6.zip \n",
        "!unzip -P dee22d5e4a7b1e3c409ea0719aa0a715 underexpose_test/underexpose_test_click-6.zip \n",
        "!mv underexpose_train_click-6.csv underexpose_train/underexpose_train_click-6.csv\n",
        "!mv underexpose_test_click-6.csv underexpose_test/underexpose_test_click-6.csv\n",
        "!mv underexpose_test_qtime-6.csv underexpose_test/underexpose_test_qtime-6.csv"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Archive:  underexpose_train.zip\n",
            "   creating: underexpose_train/\n",
            "  inflating: underexpose_train/.DS_Store  \n",
            " extracting: underexpose_train/underexpose_train_click-2.zip  \n",
            " extracting: underexpose_train/underexpose_train_click-3.zip  \n",
            " extracting: underexpose_train/underexpose_train_click-1.zip  \n",
            "  inflating: underexpose_train/underexpose_item_feat.csv  \n",
            " extracting: underexpose_train/underexpose_train_click-4.zip  \n",
            "  inflating: underexpose_train/underexpose_user_feat.csv  \n",
            " extracting: underexpose_train/underexpose_train_click-5.zip  \n",
            "  inflating: underexpose_train/underexpose_train_click-0.csv  \n",
            " extracting: underexpose_train/underexpose_train_click-7.zip  \n",
            " extracting: underexpose_train/underexpose_train_click-6.zip  \n",
            " extracting: underexpose_train/underexpose_train_click-8.zip  \n",
            " extracting: underexpose_train/underexpose_train_click-9.zip  \n",
            "Archive:  underexpose_test.zip\n",
            "   creating: underexpose_test/\n",
            "  inflating: underexpose_test/.DS_Store  \n",
            " extracting: underexpose_test/underexpose_test_click-9.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-8.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-5.zip  \n",
            "   creating: underexpose_test/underexpose_test_click-0/\n",
            "  inflating: underexpose_test/underexpose_test_click-0/underexpose_test_qtime-0.csv  \n",
            "  inflating: underexpose_test/underexpose_test_click-0/underexpose_test_click-0.csv  \n",
            " extracting: underexpose_test/underexpose_test_click-4.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-6.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-7.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-3.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-2.zip  \n",
            " extracting: underexpose_test/underexpose_test_click-1.zip  \n",
            "Archive:  underexpose_train/underexpose_train_click-1.zip\n",
            "  inflating: underexpose_train_click-1.csv  \n",
            "Archive:  underexpose_test/underexpose_test_click-1.zip\n",
            "  inflating: underexpose_test_click-1.csv  \n",
            "  inflating: underexpose_test_qtime-1.csv  \n",
            "Archive:  underexpose_train/underexpose_train_click-2.zip\n",
            "  inflating: underexpose_train_click-2.csv  \n",
            "Archive:  underexpose_test/underexpose_test_click-2.zip\n",
            "  inflating: underexpose_test_click-2.csv  \n",
            "  inflating: underexpose_test_qtime-2.csv  \n",
            "Archive:  underexpose_train/underexpose_train_click-3.zip\n",
            "  inflating: underexpose_train_click-3.csv  \n",
            "Archive:  underexpose_test/underexpose_test_click-3.zip\n",
            "  inflating: underexpose_test_click-3.csv  \n",
            "  inflating: underexpose_test_qtime-3.csv  \n",
            "Archive:  underexpose_train/underexpose_train_click-4.zip\n",
            "  inflating: underexpose_train_click-4.csv  \n",
            "Archive:  underexpose_test/underexpose_test_click-4.zip\n",
            "  inflating: underexpose_test_click-4.csv  \n",
            "  inflating: underexpose_test_qtime-4.csv  \n",
            "Archive:  underexpose_train/underexpose_train_click-5.zip\n",
            "  inflating: underexpose_train_click-5.csv  \n",
            "Archive:  underexpose_test/underexpose_test_click-5.zip\n",
            "  inflating: underexpose_test_click-5.csv  \n",
            "  inflating: underexpose_test_qtime-5.csv  \n",
            "Archive:  underexpose_train/underexpose_train_click-6.zip\n",
            "  inflating: underexpose_train_click-6.csv  \n",
            "Archive:  underexpose_test/underexpose_test_click-6.zip\n",
            "  inflating: underexpose_test_click-6.csv  \n",
            "  inflating: underexpose_test_qtime-6.csv  \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K59QECYm01ol",
        "colab_type": "text"
      },
      "source": [
        "# Methods"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dC-cwKKnalsK",
        "colab_type": "text"
      },
      "source": [
        "### Setting"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fyDvTdShakb7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "import gc\n",
        "import os\n",
        "pre_dir = '/content/drive/My Drive/Colab/KDD'\n",
        "# data_dir = pre_dir + '/datasets'\n",
        "# if not os.path.exists(data_dir):\n",
        "#   os.makedirs(data_dir)\n",
        "os.chdir(pre_dir)\n",
        "mode = 'offline' # offline/online: offline validation or online submission\n",
        "recommend_num = 2000\n",
        "now_phase = 6"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8OqRd7UJTN0v",
        "colab_type": "code",
        "outputId": "dfdcfc51-4f63-4a86-a7d9-78c4ae3e4c8e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 121
        }
      },
      "source": [
        "!ls"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "datasets\t\t      sub_offline\n",
            "offline_underexpose_answer    sub_online\n",
            "offline_underexpose_answer_2  underexpose_test\n",
            "offline_underexpose_test      underexpose_test.zip\n",
            "offline_underexpose_test_2    underexpose_train\n",
            "offline_underexpose_train_2   underexpose_train.zip\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jnplA0i9yG1P",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "offline_answer_path = 'offline_underexpose_answer'\n",
        "offline_test_path = 'offline_underexpose_test' \n",
        "offline_train_path = 'underexpose_train'\n",
        "\n",
        "# offline_answer_path = 'offline_underexpose_answer_2'\n",
        "# offline_test_path = 'offline_underexpose_test_2' \n",
        "# offline_train_path = 'offline_underexpose_train_2'\n",
        "\n",
        "train_path = 'underexpose_train' if mode == 'online' else offline_train_path\n",
        "test_path = 'underexpose_test' if mode == 'online' else offline_test_path\n",
        "\n",
        "output_path = 'sub_{}'.format(mode)\n",
        "if not os.path.exists(output_path): os.mkdir(output_path)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BYGiSFTMzbI7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "drive_output_path = '/content/drive/My Drive/KDD'"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ymuiQRwTpOUc",
        "colab_type": "text"
      },
      "source": [
        "## Common"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KUDivkQ2cDjb",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd  \n",
        "from tqdm import tqdm  \n",
        "from collections import defaultdict  \n",
        "import math  \n",
        "import numpy as np\n",
        "# click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(0), header=None,\n",
        "                                  # names=['user_id', 'item_id', 'time'])\n",
        "# click_train = click_train.sort_values(by=['user_id', 'time'])\n",
        "# 6789\n",
        "user_feat_df = pd.read_csv('underexpose_train/underexpose_user_feat.csv',header=None, names=['user_id','age_level','gender','city_level'])\n",
        "user_feat_df = user_feat_df.drop_duplicates('user_id')\n",
        "user_feat_df['age_level'].fillna(\"-1\", inplace=True) # user_feat_df['age_level'].value_counts().index[0]\n",
        "user_feat_df['gender'].fillna(\"-1\", inplace=True) # user_feat_df['gender'].value_counts().index[0]\n",
        "user_feat_df['city_level'].fillna(\"-1\", inplace=True) # user_feat_df['city_level'].value_counts().index[0]\n",
        "\n",
        "\n",
        "item_feat_cols = ['item_id',] + ['txt_embed_'+ str(i) for i in range(128)] + ['img_embed_'+ str(i) for i in range(128)]\n",
        "item_feat_df = pd.read_csv('underexpose_train/underexpose_item_feat.csv',header=None, names=item_feat_cols)\n",
        "item_feat_df['txt_embed_0'] = item_feat_df['txt_embed_0'].apply(lambda x:float(x[1:]))\n",
        "item_feat_df['txt_embed_127'] = item_feat_df['txt_embed_127'].apply(lambda x:float(x[:-1]))\n",
        "item_feat_df['img_embed_0'] = item_feat_df['img_embed_0'].apply(lambda x:float(x[1:]))\n",
        "item_feat_df['img_embed_127'] = item_feat_df['img_embed_127'].apply(lambda x:float(x[:-1]))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lhsGBQTFpNAE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# fill user to 50 items  \n",
        "def get_predict(df, pred_col, top_fill):\n",
        "    top_fill = [int(float(t)) for t in top_fill.split(',')]\n",
        "    scores = [-1 * i for i in range(1, len(top_fill) + 1)]\n",
        "    ids = list(df['user_id'].unique())\n",
        "    fill_df = pd.DataFrame(ids * len(top_fill), columns=['user_id'])\n",
        "    fill_df.sort_values('user_id', inplace=True)\n",
        "    fill_df['item_id'] = top_fill * len(ids)\n",
        "    fill_df[pred_col] = scores * len(ids)\n",
        "    print(len(fill_df))\n",
        "    df = df.append(fill_df)\n",
        "    df.sort_values(pred_col, ascending=False, inplace=True)\n",
        "    df = df.drop_duplicates(subset=['user_id', 'item_id'], keep='first')\n",
        "    df['rank'] = df.groupby('user_id')[pred_col].rank(method='first', ascending=False)\n",
        "    df = df[df['rank'] <= 50]\n",
        "    df = df.groupby('user_id')['item_id'].apply(lambda x: ','.join([str(i) for i in x])).str.split(',',\n",
        "                                                                                                   expand=True).reset_index()\n",
        "    return df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QKDvQV9jaZJk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nT5D23YmTdgb",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_feat_topk_click_df(whole_click, user_feat_df, feat_cols=['gender','age_level']):\n",
        "   whole_click_user_feat_df = pd.merge(user_feat_df, whole_click, how='inner', on='user_id')\n",
        "   whole_click_feat_topk_df = whole_click_user_feat_df.groupby(feat_cols+ ['item_id']).size().reset_index().rename(columns={0:'click_num'})\n",
        "   whole_click_feat_topk_df['rank'] = whole_click_feat_topk_df.groupby(feat_cols)['click_num'].rank(method='first', ascending=False)\n",
        "   whole_click_feat_topk_df = whole_click_feat_topk_df[whole_click_feat_topk_df['rank'] <= 50]\n",
        "   whole_click_feat_topk_df = whole_click_feat_topk_df.sort_values(by=feat_cols+['rank',])\n",
        "   whole_click_feat_topk_df['sim'] = whole_click_feat_topk_df['rank'].apply(lambda x: -x)\n",
        "   return whole_click_feat_topk_df\n",
        "\n",
        "def get_reco_df_fill_topk(recom_df, user_feat_df, whole_click_user_feat_topk_df, global_top_click_items, feat_cols=['gender','age_level']):\n",
        "   # rec_users in the user_feat_df\n",
        "   existing_users = set(recom_df['user_id']) & set(user_feat_df['user_id'])\n",
        "   recommend_fill_df = pd.merge(user_feat_df[user_feat_df['user_id'].isin(existing_users)], whole_click_user_feat_topk_df, \n",
        "                                on=feat_cols, how='inner')[['user_id', 'item_id', 'sim']]\n",
        "   existing_users = set(recommend_fill_df['user_id'])\n",
        "   print(len(existing_users), len(existing_users)*50, len(recommend_fill_df))\n",
        "\n",
        "   # rec_users not in user_feat_df\n",
        "   all_users = set(recom_df['user_id'])\n",
        "   top_fill = [int(t) for t in global_top_click_items.split(',')]\n",
        "   scores = [-1 * i for i in range(51, len(top_fill) + 51)]\n",
        "   ids = list(all_users)\n",
        "   all_fill_df = pd.DataFrame(ids * len(top_fill), columns=['user_id'])\n",
        "   all_fill_df.sort_values('user_id', inplace=True)\n",
        "   all_fill_df['item_id'] = top_fill * len(ids)\n",
        "   all_fill_df['sim'] = scores * len(ids)\n",
        "   print(len(all_users), len(all_users)*50, len(all_fill_df))\n",
        "\n",
        "   recommend_fill_df = recommend_fill_df.append(all_fill_df)\n",
        "   print(len(recommend_fill_df))\n",
        "   return recommend_fill_df\n",
        "\n",
        "\n",
        "def get_feat_predict(rec_df, whole_click_df, user_feat_df, global_top_click_items, feat_cols=['gender','age_level']):\n",
        "    whole_click_feat_topk_df = get_feat_topk_click_df(whole_click_df, user_feat_df, feat_cols)\n",
        "    recommend_fill_df = get_reco_df_fill_topk(rec_df, user_feat_df, whole_click_feat_topk_df, global_top_click_items, feat_cols)\n",
        "    \n",
        "    df = rec_df.append(recommend_fill_df)\n",
        "    df.sort_values('sim', ascending=False, inplace=True)\n",
        "    df = df.drop_duplicates(subset=['user_id', 'item_id'], keep='first')\n",
        "    df['rank'] = df.groupby('user_id')['sim'].rank(method='first', ascending=False)\n",
        "    df = df[df['rank'] <= 50]\n",
        "    df = df.groupby('user_id')['item_id'].apply(lambda x: ','.join([str(i) for i in x])).str.split(',',\n",
        "                                                                                             expand=True).reset_index()\n",
        "    return df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Mff1xMRk033W",
        "colab_type": "text"
      },
      "source": [
        "## Swing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LBysS3ofiy_t",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from collections import defaultdict\n",
        "\n",
        "def make_user_time_tuple(group_df, user_col, item_col, time_col):\n",
        "    user_time_tuples = list(zip(group_df[user_col], group_df[time_col]))\n",
        "    return user_time_tuples\n",
        "\n",
        "\n",
        "def swing(df, user_col, item_col, time_col='time'):\n",
        "    # 1. item, (u1,t1), (u2, t2).....\n",
        "    item_user_df = df.sort_values(by=[item_col, time_col])\n",
        "    item_user_df = item_user_df.groupby(item_col).apply(\n",
        "        lambda group: make_user_time_tuple(group, user_col, item_col, time_col)).reset_index().rename(\n",
        "        columns={0: 'user_id_time_list'})\n",
        "    item_user_time_dict = dict(zip(item_user_df[item_col], item_user_df['user_id_time_list']))\n",
        "\n",
        "    user_item_time_dict = defaultdict(list)\n",
        "    # 2. ((u1, u2), i1, d12)\n",
        "    u_u_cnt = defaultdict(list)\n",
        "    item_cnt = defaultdict(int)\n",
        "    for item, user_time_list in tqdm(item_user_time_dict.items()):\n",
        "        for u, u_time in user_time_list:\n",
        "            # just record\n",
        "            item_cnt[item] += 1\n",
        "            user_item_time_dict[u].append((item, u_time))\n",
        "\n",
        "            for relate_u, relate_u_time in user_time_list:\n",
        "                if relate_u == u:\n",
        "                    continue\n",
        "               \n",
        "                key = (u, relate_u)  if u <= relate_u else (relate_u, u)\n",
        "                u_u_cnt[key].append((item, np.abs(u_time - relate_u_time)))\n",
        "\n",
        "\n",
        "    # 3. (i1,i2), sim\n",
        "    sim_item = {}\n",
        "    alpha = 5.0\n",
        "    for u_u, co_item_times in u_u_cnt.items():\n",
        "        num_co_items = len(co_item_times)\n",
        "        for i, i_time_diff in co_item_times:\n",
        "            sim_item.setdefault(i, {})\n",
        "            for j, j_time_diff in co_item_times:\n",
        "              if j == i:\n",
        "                continue\n",
        "              weight = 1.0 # np.exp(-15000*(i_time_diff + j_time_diff))\n",
        "              sim_item[i][j] = sim_item[i].setdefault(j, 0.) + weight / (alpha + num_co_items)\n",
        "    # 4. norm by item count\n",
        "    sim_item_corr = sim_item.copy()\n",
        "    for i, related_items in sim_item.items():\n",
        "        for j, cij in related_items.items():\n",
        "            sim_item_corr[i][j] = cij / math.sqrt(item_cnt[i] * item_cnt[j])\n",
        "            # sim_item_corr[i][j] = cij / math.sqrt(item_cnt[i]*item_cnt[j])+cij/min(item_cnt[i], item_cnt[j])+0.5*cij/(item_cnt[i]+item_cnt[j])\n",
        "\n",
        "    return sim_item_corr, user_item_time_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "L_UlOD8w07Mb",
        "colab_type": "text"
      },
      "source": [
        "## Time-aware Item-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H7vGNli0NDJh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def make_item_time_tuple(group_df, user_col, item_col, time_col):\n",
        "  # group_df = group_df.drop_duplicates(subset=[user_col, item_col], keep='last')\n",
        "  item_time_tuples = list(zip(group_df[item_col], group_df[time_col]))\n",
        "  return item_time_tuples\n",
        "\n",
        "def get_user_item_time_dict(df, user_col='user_id', item_col='item_id', time_col='time'):\n",
        "    user_item_ = df.sort_values(by=[user_col, time_col])\n",
        "    user_item_ = user_item_.groupby(user_col).apply(lambda group: make_item_time_tuple(group, user_col, item_col, time_col)).reset_index().rename(columns={0: 'item_id_time_list'})\n",
        "    user_item_time_dict = dict(zip(user_item_[user_col], user_item_['item_id_time_list']))\n",
        "    return user_item_time_dict\n",
        "\n",
        "def get_time_aware_sim_item(df, user_col, item_col, time_col='time', use_iif=False, ret_time=False):\n",
        "    user_item_time_dict = get_user_item_time_dict(df, user_col, item_col, time_col)\n",
        "\n",
        "    sim_item = {}\n",
        "    item_cnt = defaultdict(int)\n",
        "    item_cnt_2 = defaultdict(int)\n",
        "    for user, item_time_list in tqdm(user_item_time_dict.items()):\n",
        "        for i, i_time in item_time_list:\n",
        "            item_cnt[i] += 1\n",
        "            item_cnt_2[i] += 1.0/math.log(1 + len(item_time_list))\n",
        "            sim_item.setdefault(i, {})\n",
        "            for relate_item, related_time in item_time_list:\n",
        "                if i == relate_item:\n",
        "                    continue\n",
        "                sim_item[i].setdefault(relate_item, 0)\n",
        "                if not use_iif:\n",
        "                    sim_item[i][relate_item] += np.exp(-15000*np.abs(i_time-related_time))\n",
        "                else:\n",
        "                    sim_item[i][relate_item] += np.exp(-15000*np.abs(i_time-related_time)) / math.log(1 + len(item_time_list))\n",
        "\n",
        "    sim_item_corr = sim_item.copy()\n",
        "    for i, related_items in tqdm(sim_item.items()):\n",
        "        for j, cij in related_items.items():\n",
        "            sim_item_corr[i][j] = cij / math.sqrt(item_cnt[i] * item_cnt[j])\n",
        "\n",
        "    user_item_history_dict = {}\n",
        "    for user, item_time_list in user_item_time_dict.items():\n",
        "        user_item_history_dict[user] = set([i for i,t in item_time_list])\n",
        "    if ret_time:\n",
        "      user_item_history_dict = user_item_time_dict\n",
        "    return sim_item_corr, user_item_history_dict\n",
        "\n",
        "def time_aware_recommend(sim_item_corr, user_item_time_dict,user_id, top_k, item_num, alpha=15000):\n",
        "    rank = {}\n",
        "    if user_id not in user_item_time_dict:\n",
        "      return []\n",
        "    interacted_item_times = user_item_time_dict[user_id]\n",
        "    min_time = min([time for item, time in interacted_item_times])\n",
        "    interacted_items = set([item for item, time in interacted_item_times])\n",
        "    miss_count=0\n",
        "    for loc, (i, time) in enumerate(interacted_item_times):\n",
        "        if i not in sim_item_corr:\n",
        "          # if miss_count==0:\n",
        "          #   print('item={} not in item-item sim results for user:{}'.format(i,user_id))\n",
        "          # print('miss={}'.format(miss_count))\n",
        "          miss_count+=1\n",
        "          continue\n",
        "        for j, wij in sorted(sim_item_corr[i].items(), key=lambda x: x[1], reverse=True)[0:top_k]:\n",
        "            if j not in interacted_items:\n",
        "                rank.setdefault(j, 0)\n",
        "\n",
        "                content_weight = 1.0\n",
        "                if item_content_sim_dict.get(i, {}).get(j, None) is not None:\n",
        "                  content_weight += item_content_sim_dict[i][j]\n",
        "                if item_content_sim_dict.get(j, {}).get(i, None) is not None:\n",
        "                  content_weight += item_content_sim_dict[j][i]\n",
        "\n",
        "                time_weight = np.exp(alpha*(time - min_time))\n",
        "                loc_weight = (0.9**(len(interacted_item_times)-loc)) \n",
        "                rank[j] += loc_weight * time_weight * content_weight * wij \n",
        "    # print('item miss rate:{} for user:{}'.format(miss_count/len(interacted_item_times),user_id))\n",
        "    sorted_rank_items = sorted(rank.items(), key=lambda d: d[1], reverse=True)[:item_num]\n",
        "    return sorted_rank_items"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uRC6T7oPKhpe",
        "colab_type": "text"
      },
      "source": [
        "## Time-Direction-aware Item-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1vc9E8myKlqK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_time_dir_aware_sim_item(df, user_col, item_col, time_col='time'):\n",
        "    user_item_time_dict = get_user_item_time_dict(df, user_col, item_col, time_col)\n",
        "\n",
        "    sim_item = {}\n",
        "    item_cnt = defaultdict(int)\n",
        "    for user, item_time_list in tqdm(user_item_time_dict.items()):\n",
        "        for loc_1, (i, i_time) in enumerate(item_time_list):\n",
        "            item_cnt[i] += 1\n",
        "            sim_item.setdefault(i, {})\n",
        "            for loc_2, (relate_item, related_time) in enumerate(item_time_list):\n",
        "                if i == relate_item:\n",
        "                    continue\n",
        "                loc_alpha = 1.0 if loc_2 > loc_1 else 0.7\n",
        "                loc_weight = loc_alpha * (0.8**(np.abs(loc_2-loc_1)-1)) \n",
        "                time_weight = np.exp(-15000*np.abs(i_time-related_time))\n",
        "\n",
        "                sim_item[i].setdefault(relate_item, 0)\n",
        "                sim_item[i][relate_item] += loc_weight * time_weight / math.log(1 + len(item_time_list))\n",
        "                \n",
        "    sim_item_corr = sim_item.copy()\n",
        "    for i, related_items in tqdm(sim_item.items()):\n",
        "        for j, cij in related_items.items():\n",
        "            sim_item_corr[i][j] = cij / math.sqrt(item_cnt[i] * item_cnt[j])\n",
        "            # sim_item_corr[i][j] = cij / math.sqrt(item_cnt[i]*item_cnt[j])+cij/min(item_cnt[i], item_cnt[j])+0.5*cij/(item_cnt[i]+item_cnt[j])\n",
        "\n",
        "    return sim_item_corr, user_item_time_dict\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QLqmfvR4xV2f",
        "colab_type": "text"
      },
      "source": [
        "## Content-based"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hWxEGQ5_xY5f",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import collections\n",
        "def get_content_sim_item(item_feat_df, topk=100):\n",
        "   item_idx_2_rawid_dict = dict(zip(item_feat_df.index, item_feat_df['item_id']))\n",
        "   txt_item_feat_df = item_feat_df.filter(regex=\"txt*\")\n",
        "   img_item_feat_df = item_feat_df.filter(regex=\"img*\") \n",
        "\n",
        "   txt_item_feat_np = np.ascontiguousarray(txt_item_feat_df.values, dtype=np.float32)\n",
        "   img_item_feat_np = np.ascontiguousarray(img_item_feat_df.values, dtype=np.float32)\n",
        "   \n",
        "   # norm\n",
        "   txt_item_feat_np = txt_item_feat_np / np.linalg.norm(txt_item_feat_np, axis=1, keepdims=True)\n",
        "   img_item_feat_np = img_item_feat_np / np.linalg.norm(img_item_feat_np, axis=1, keepdims=True)\n",
        "\n",
        "   import faiss    \n",
        "   txt_index = faiss.IndexFlatIP(128)\n",
        "   txt_index.add(txt_item_feat_np)\n",
        "\n",
        "   img_index = faiss.IndexFlatIP(128)\n",
        "   img_index.add(img_item_feat_np)\n",
        "\n",
        "   item_sim_dict = collections.defaultdict(dict)\n",
        "\n",
        "   def search(feat_index, feat_np):\n",
        "      sim, idx = feat_index.search(feat_np, topk)\n",
        "      for target_idx, sim_value_list, rele_idx_list in zip(range(len(feat_np)), sim, idx):\n",
        "          target_raw_id = item_idx_2_rawid_dict[target_idx]\n",
        "          for rele_idx, sim_value in zip(rele_idx_list[1:], sim_value_list[1: ]):\n",
        "            rele_raw_id = item_idx_2_rawid_dict[rele_idx]\n",
        "            item_sim_dict[target_raw_id][rele_raw_id] = item_sim_dict.get(target_raw_id, {}).get(rele_raw_id, 0) + sim_value\n",
        "   \n",
        "   search(txt_index, txt_item_feat_np)\n",
        "   search(img_index, img_item_feat_np)\n",
        "   return item_sim_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R64PUZJx24Pp",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "item_content_sim_dict = get_content_sim_item(item_feat_df, topk=200)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eIG-1uARt2Bv",
        "colab_type": "code",
        "outputId": "20023602-052d-4ec9-8cb9-600d9e52ac55",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "len(item_content_sim_dict)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "108916"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cRJO-Nbb0_1W",
        "colab_type": "text"
      },
      "source": [
        "## User-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ud4YeziTN1FA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_user_min_time_dict(df,  user_col, item_col, time_col):\n",
        "  df = df.sort_values(by=[user_col, time_col])\n",
        "  df = df.groupby(user_col).head(1)\n",
        "  user_min_time_dict = dict(zip(df[user_col], df[time_col]))\n",
        "  return user_min_time_dict\n",
        "\n",
        "def get_item_user_time_dict(df, user_col='user_id', item_col='item_id', time_col='time'):\n",
        "    item_user_df = df.sort_values(by=[item_col, time_col])\n",
        "    item_user_df = item_user_df.groupby(item_col).apply(\n",
        "        lambda group: make_user_time_tuple(group, user_col, item_col, time_col)).reset_index().rename(\n",
        "        columns={0: 'user_id_time_list'})\n",
        "    item_user_time_dict = dict(zip(item_user_df[item_col], item_user_df['user_id_time_list']))\n",
        "    return item_user_time_dict\n",
        "\n",
        "# user-cf\n",
        "def get_sim_user(df, user_col, item_col, time_col='time', item_iif=False):\n",
        "    # user_min_time_dict = get_user_min_time_dict(df, user_col, item_col, time_col) # user first time \n",
        "    # history\n",
        "    user_item_time_dict = get_user_item_time_dict(df)\n",
        "    # item, [u1, u2, ...,]\n",
        "    item_user_time_dict = get_item_user_time_dict(df)\n",
        "\n",
        "    sim_user = {}\n",
        "    user_cnt = defaultdict(int)\n",
        "    for item, user_time_list in tqdm(item_user_time_dict.items()):\n",
        "        num_users = len(user_time_list)\n",
        "        for u, t in user_time_list:\n",
        "            user_cnt[u] += 1\n",
        "            sim_user.setdefault(u, {})\n",
        "            for relate_user, relate_t in user_time_list:\n",
        "                # time_diff_relate_u = 1.0/(1.0+10000*abs(relate_t-t))\n",
        "                if u == relate_user:\n",
        "                    continue\n",
        "                sim_user[u].setdefault(relate_user, 0)\n",
        "                weight = 1.0\n",
        "                sim_user[u][relate_user] += weight / math.log(1 + num_users) # 流行度高的衰减\n",
        "\n",
        "    sim_user_corr = sim_user.copy()\n",
        "    for u, related_users in tqdm(sim_user.items()):\n",
        "        for v, cuv in related_users.items():\n",
        "            sim_user_corr[u][v] = cuv / math.sqrt(user_cnt[u] * user_cnt[v])\n",
        "\n",
        "    return sim_user_corr, user_item_time_dict\n",
        "\n",
        "\n",
        "def user_recommend(sim_user_corr, user_item_time_dict, user_id, top_k, item_num, q_time):\n",
        "    rank = {}\n",
        "    interacted_items = set([i for i, t in user_item_time_dict[user_id]]) \n",
        "    interacted_item_time_list = user_item_time_dict[user_id]\n",
        "    interacted_num = len(interacted_items)\n",
        "\n",
        "    min_time = min([t for i,t in interacted_item_time_list])\n",
        "    time_weight_dict = {i: np.exp(15000*(t-min_time)) for i,t in interacted_item_time_list}\n",
        "    loc_weight_dict = {i: 0.9**(interacted_num-loc) for loc, (i,t) in enumerate(interacted_item_time_list)}\n",
        "\n",
        "    for sim_v, wuv in sorted(sim_user_corr[user_id].items(), key=lambda x:x[1], reverse=True)[0:top_k]:\n",
        "      for j, j_time in user_item_time_dict[sim_v]:\n",
        "        if j not in interacted_items:\n",
        "          rank.setdefault(j, 0)\n",
        "\n",
        "          content_weight = 1.0\n",
        "          for loc, (i, t) in enumerate(interacted_item_time_list):\n",
        "              loc_weight = loc_weight_dict[i]\n",
        "              time_weight = time_weight_dict[i]\n",
        "              if item_content_sim_dict.get(i, {}).get(j, None) is not None:\n",
        "                content_weight += time_weight*loc_weight*item_content_sim_dict[i][j]\n",
        "\n",
        "          # weight = np.exp(-15000*abs(j_time-q_time))\n",
        "          rank[j] += content_weight * wuv \n",
        "\n",
        "    return sorted(rank.items(), key=lambda d: d[1], reverse=True)[:item_num]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "V3xcHOOy1Bsp",
        "colab_type": "text"
      },
      "source": [
        "## Item-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WZnKqRJ06bdh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "#!/usr/bin/env python  \n",
        "# -*- coding:utf-8 -*-  \n",
        "  \n",
        "import pandas as pd  \n",
        "from tqdm import tqdm  \n",
        "from collections import defaultdict  \n",
        "import math  \n",
        "  \n",
        "\n",
        "\n",
        "def get_sim_item(df_, user_col, item_col, use_iif=False): \n",
        "    df = df_.copy()\n",
        "    user_item_ = df.groupby(user_col)[item_col].agg(list).reset_index()\n",
        "    user_item_dict = dict(zip(user_item_[user_col], user_item_[item_col]))\n",
        "    \n",
        "    user_time_ = df.groupby(user_col)['time'].agg(list).reset_index() # 引入时间因素\n",
        "    user_time_dict = dict(zip(user_time_[user_col], user_time_['time']))\n",
        "    \n",
        "    sim_item = {}  \n",
        "    item_cnt = defaultdict(int)  # 商品被点击次数\n",
        "    for user, items in tqdm(user_item_dict.items()):  \n",
        "        for loc1, item in enumerate(items):  \n",
        "            item_cnt[item] += 1  \n",
        "            sim_item.setdefault(item, {})  \n",
        "            for loc2, relate_item in enumerate(items):  \n",
        "                if item == relate_item:  \n",
        "                    continue  \n",
        "                t1 = user_time_dict[user][loc1] # 点击时间提取\n",
        "                t2 = user_time_dict[user][loc2]\n",
        "                sim_item[item].setdefault(relate_item, 0)  \n",
        "                if not use_iif:  \n",
        "                    if loc1-loc2>0:\n",
        "                        sim_item[item][relate_item] += 1 * 0.7 * (0.8**(loc1-loc2-1)) * (1 - (t1 - t2) * 10000) / math.log(1 + len(items)) # 逆向\n",
        "                    else:\n",
        "                        sim_item[item][relate_item] += 1 * 1.0 * (0.8**(loc2-loc1-1)) * (1 - (t2 - t1) * 10000) / math.log(1 + len(items)) # 正向\n",
        "                else:  \n",
        "                    sim_item[item][relate_item] += 1 / math.log(1 + len(items))  \n",
        "\n",
        "    sim_item_corr = sim_item.copy() # 引入AB的各种被点击次数  \n",
        "    for i, related_items in tqdm(sim_item.items()):  \n",
        "        for j, cij in related_items.items():  \n",
        "            sim_item_corr[i][j] = cij / ((item_cnt[i] * item_cnt[j]) ** 0.2)  \n",
        "  \n",
        "    return sim_item_corr, user_item_dict  \n",
        "\n",
        "\n",
        "def recommend(sim_item_corr, user_item_dict, user_id, top_k, item_num):  \n",
        "    '''\n",
        "    input:item_sim_list, user_item, uid, 500, 50\n",
        "    # 用户历史序列中的所有商品均有关联商品,整合这些关联商品,进行相似性排序\n",
        "    '''\n",
        "    rank = {}  \n",
        "    interacted_items = user_item_dict[user_id] \n",
        "    interacted_items = interacted_items[::-1]\n",
        "    for loc, i in enumerate(interacted_items):  \n",
        "        for j, wij in sorted(sim_item_corr[i].items(), reverse=True)[0:top_k]:  #key=lambda ?\n",
        "            if j not in interacted_items:  \n",
        "                rank.setdefault(j, 0)  \n",
        "                rank[j] += wij * (0.7**loc) \n",
        "\n",
        "    return sorted(rank.items(), key=lambda d: d[1], reverse=True)[:item_num]  \n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "G_GzVR9tvxPa",
        "colab_type": "text"
      },
      "source": [
        "## Co-Occurrance"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2OfOwtN2ZIXf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def co_occurrance_sim(df, user_col, item_col, time_col='time'):\n",
        "    user_item_ = df.sort_values(by=[user_col, time_col])\n",
        "    user_item_ = user_item_.groupby(user_col).apply(lambda group: make_item_time_tuple(group, user_col, item_col, time_col)).reset_index().rename(columns={0: 'item_id_time_list'})\n",
        "    user_item_time_dict = dict(zip(user_item_[user_col], user_item_['item_id_time_list']))\n",
        "\n",
        "    '''\n",
        "    针对所有用户，计算历史上某个商品点击之后下一个被点击商品的list\n",
        "    返回数据格式：{'item_id':{'next_item_1':'click_count1','next_item2':'click_count2'}}\n",
        "    '''\n",
        "    sim_item = {}\n",
        "    item_cnt = defaultdict(int)\n",
        "    for user, item_time_list in tqdm(user_item_time_dict.items()):\n",
        "        for idx, (item, item_time) in enumerate(item_time_list):\n",
        "            item_cnt[item] += 1\n",
        "            if idx == len(item_time_list) - 1: break\n",
        "            next_item, next_item_time = item_time_list[idx+1]\n",
        "            sim_item.setdefault(item, {})\n",
        "            \n",
        "            sim_item[item].setdefault(next_item, 0.)\n",
        "            weight = np.exp(-15000*np.abs(next_item_time-item_time))  # np.exp(-15000*np.abs(next_item_time-item_time)) / math.log(1 + len(item_time_list))\n",
        "            sim_item[item][next_item] += weight\n",
        "\n",
        "    # sim_item_corr = sim_item.copy()\n",
        "    # for i, related_items in tqdm(sim_item.items()):\n",
        "    #     for j, cij in related_items.items():\n",
        "    #         sim_item_corr[i][j] = cij / math.sqrt(item_cnt[i] * item_cnt[j])\n",
        "\n",
        "    return sim_item, user_item_time_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-hdDk3ncl2DD",
        "colab_type": "text"
      },
      "source": [
        "## Bi-Graph"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1A0nWQGoyIs6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_item_user_time_dict(df, user_col, item_col, time_col='time'):\n",
        "    item_user_df = df.sort_values(by=[item_col, time_col])\n",
        "    item_user_df = item_user_df.groupby(item_col).apply(\n",
        "        lambda group: make_user_time_tuple(group, user_col, item_col, time_col)).reset_index().rename(\n",
        "        columns={0: 'user_id_time_list'})\n",
        "    item_user_time_dict = dict(zip(item_user_df[item_col], item_user_df['user_id_time_list']))\n",
        "    return item_user_time_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HxnI7_qsl373",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_bi_sim_item(df, user_col, item_col, time_col='time'):\n",
        "    item_user_time_dict = get_item_user_time_dict(df, user_col, item_col, time_col)\n",
        "    user_item_time_dict = get_user_item_time_dict(df, user_col, item_col, time_col)\n",
        "\n",
        "    item_cnt = defaultdict(int)  \n",
        "    for user, item_times in tqdm(user_item_time_dict.items()):  \n",
        "        for i,t in item_times:  \n",
        "            item_cnt[i] += 1  \n",
        "\n",
        "    sim_item = {}\n",
        "    \n",
        "    for item, user_time_lists in tqdm(item_user_time_dict.items()):\n",
        "    \n",
        "        sim_item.setdefault(item, {}) \n",
        "    \n",
        "        for u, item_time in user_time_lists:\n",
        "        \n",
        "            tmp_len = len(user_item_time_dict[u])\n",
        "        \n",
        "            for relate_item, related_time in user_item_time_dict[u]:\n",
        "                sim_item[item].setdefault(relate_item, 0)\n",
        "                weight = np.exp(-15000*np.abs(related_time - item_time))\n",
        "                sim_item[item][relate_item] += weight / (math.log(len(user_time_lists)+1) * math.log(tmp_len+1))\n",
        "       \n",
        "    return sim_item, user_item_time_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CSVdblvV1f-Y",
        "colab_type": "text"
      },
      "source": [
        "## item2vec"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zF78jVre1e7m",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from gensim.models.word2vec import *\n",
        "import pandas as pd\n",
        "from time import *\n",
        "from tqdm import *\n",
        "import numpy as np\n",
        "import os\n",
        "import numpy as np\n",
        "from tqdm import *\n",
        "import re\n",
        "from gensim.similarities.index import AnnoyIndexer\n",
        "pd.set_option('max_columns',200)\n",
        "\n",
        "\n",
        "\n",
        "def get_data(train_dir,test_dir):\n",
        "    \"\"\"get data\"\"\"\n",
        "    TrainItemFeat = pd.read_csv(train_dir + '/underexpose_item_feat.csv',header=None)\n",
        "    TrainItemFeat.iloc[:,1] = TrainItemFeat.iloc[:,1].apply(lambda x:float(x[1:]))\n",
        "    TrainItemFeat.iloc[:,-1] = TrainItemFeat.iloc[:,-1].apply(lambda x:float(x[:-1]))\n",
        "    feat_col = ['eb'+str(i) for i in TrainItemFeat.columns[1:]]\n",
        "    feat_col.insert(0,'items')\n",
        "    TrainItemFeat.columns = feat_col\n",
        "\n",
        "    TrainUserFeat = pd.read_csv(train_dir + '/underexpose_user_feat.csv',header=None)\n",
        "    TrainUserFeat.columns = ['userid','age','gender','city']\n",
        "    TrainClick = pd.read_csv(train_dir + '/underexpose_train_click-0.csv',header=None)\n",
        "    TrainClick.columns = ['userid','items','time']\n",
        "    TrainClick['flag'] = 0\n",
        "    TestQtime = pd.read_csv(test_dir + '/underexpose_test_qtime-0.csv',header=None)\n",
        "    TestQtime.columns = ['userid','time']\n",
        "    TestQtime['flag'] = 1\n",
        "    TestClick = pd.read_csv(test_dir + '/underexpose_test_click-0.csv',header=None)\n",
        "    TestClick.columns = ['userid','items','time']\n",
        "    TestClick['flag'] = 2\n",
        "    click = pd.concat([TrainClick,TestClick,TestQtime],axis=0 ,sort=False)\n",
        "    return click,TrainItemFeat,TrainClick,TrainUserFeat,TestQtime,TestClick\n",
        "\n",
        "\n",
        "\n",
        "#在机器学习中，我们常常需要把训练好的模型存储起来，这样在进行决策时直接将模型读出，而不需要重新训练模型，这样就大大节约了时间,同时也可以结构化以及非结构化的数据也可以按原始格式进行保存。Python提供的pickle模块就很好地解决了这个问题，它可以序列化对象并保存到磁盘中，并在需要的时候读取出来，任何对象都可以执行序列化操作\n",
        "\n",
        "def save_variable(v,filename):\n",
        "    f=open(filename,'wb')\n",
        "    pickle.dump(v,f)\n",
        "    f.close()\n",
        "    return filename\n",
        "\n",
        "def load_variavle(filename):\n",
        "    f=open(filename,'rb')\n",
        "    r=pickle.load(f)\n",
        "    f.close()\n",
        "    return r\n",
        "\n",
        "def get_top_similar(model, items_all, k = 50):\n",
        "    recommendation_items = dict()\n",
        "    print('获取相似item') \n",
        "    for i in tqdm(items_all):\n",
        "        recommendation_items[i] = model.most_similar(positive=[i],topn=k)\n",
        "    \n",
        "    # transform format \n",
        "    item_sim_dict = {}\n",
        "    for item, sim_item_list in recommendation_items.items():\n",
        "      item_sim_dict.setdefault(int(item), {})\n",
        "      for sim_item, sim_value in sim_item_list:\n",
        "        item_sim_dict[int(item)][int(sim_item)] = sim_value\n",
        "    \"\"\"计算item的相似度\"\"\"\n",
        "    return item_sim_dict\n",
        "\n",
        "def get_top_similar_fast(model, item_list, k=50):\n",
        "    from gensim.similarities.index import AnnoyIndexer\n",
        "    indexer = AnnoyIndexer(model, 200)\n",
        "    recommendation_items = dict()\n",
        "    for item in tqdm(item_list):\n",
        "      sim_list = model.most_similar([item], topn=k, indexer=indexer)\n",
        "      recommendation_items[item] = sim_list\n",
        "\n",
        "     # transform format \n",
        "    item_sim_dict = {}\n",
        "    for item, sim_item_list in recommendation_items.items():\n",
        "      item_sim_dict.setdefault(int(item), {})\n",
        "      for sim_item, sim_value in sim_item_list:\n",
        "        item_sim_dict[int(item)][int(sim_item)] = sim_value\n",
        "    return item_sim_dict\n",
        "\n",
        "def recommendation(uid):\n",
        "    \"\"\"每个用户去重的推荐列表\"\"\"\n",
        "    tg_id = data[data['userid']==uid].copy()\n",
        "    have_read_list = tg_id['items_last'].values[0]\n",
        "    re_list = list()\n",
        "    for i in have_read_list:\n",
        "        re_list.extend(get_top_similar(i))\n",
        "        re_list = list(set(re_list)-set(have_read_list))\n",
        "    return re_list\n",
        "\n",
        "def multi_process(func_name,process_num,deal_list):\n",
        "    \"\"\"\n",
        "    多线程\n",
        "    \"\"\"\n",
        "    from multiprocessing import Pool\n",
        "    pool = Pool(process_num)\n",
        "    result_list = pool.map(func_name,deal_list)\n",
        "    pool.close()\n",
        "    pool.join()\n",
        "    return result_list\n",
        "\n",
        "def train_model(seq_list):\n",
        "    \"\"\"训练模型\"\"\"\n",
        "    begin_time = time()\n",
        "    model = Word2Vec(seq_list, size=1000, window=30, min_count=1, workers=40)\n",
        "    end_time = time()\n",
        "    run_time = end_time-begin_time\n",
        "    print ('该循环程序运行时间：',round(run_time,2)) #该循环程序运行时间： 1.4201874732\n",
        "    return model\n",
        "\n",
        "def melt_data():\n",
        "    z = test_df.groupby(['userid'])['items_last_all'].apply(lambda x:np.concatenate(list(x))).reset_index()\n",
        "    i = pd.concat([pd.Series(row['userid'], row['items_last_all']) for _, row in z.iterrows()]).reset_index()\n",
        "    i.columns = ['items_new','userid']\n",
        "    i['items'] = i['items_new'].apply(lambda x:x[0])\n",
        "    i['weights'] = i['items_new'].apply(lambda x:x[1])\n",
        "    return i.iloc[:,1:]\n",
        "\n",
        "\n",
        "'''\n",
        "click,TrainItemFeat,TrainClick,TrainUserFeat,TestQtime,TestClick = get_data(train_path,test_path)\n",
        "\n",
        "#用户的点击物品以及对应的时间，此时，我们更加考虑是否推荐一些与用户曾经点击过的物品类似的东西，这样更有可能点击。试想一下，假如我们最近喜欢新出的iphone，是否很大概率喜欢iphone的一些配件，按照这个道理，我们建立模型。\n",
        "df = click.merge(TrainUserFeat,on = 'userid',how = 'left')\n",
        "df = df.merge(TrainItemFeat,on='items',how = 'left')\n",
        "df = df.sort_values(['userid','time']).reset_index(drop = True)\n",
        "\n",
        "#重新划分训练集和测试集，并按时间排序，反应用户的点击行为。\n",
        "train = df[df['flag']!=1].copy()\n",
        "train = train.sort_values(['userid','time']).reset_index(drop = True)\n",
        "test = df[df['flag']==1].copy()\n",
        "test = test.sort_values(['userid','time']).reset_index(drop = True)\n",
        "\n",
        "#训练模型，因为Word2vec的输入是string格式，需要提前处理，同时，把数据格式处理成uid=['itme1',itme2',...itmen']这种格式，其中items_last为用户点击的最后3个物品，因为跟时间有关系，我们更加会推与用户最近点击的相关物品\n",
        "tr = train.copy()\n",
        "tr['items']  = tr['items'].astype(str)\n",
        "items_all = tr['items'].unique()\n",
        "tr = tr.groupby('userid')['items'].apply(lambda x:list(x)).reset_index()\n",
        "tr['items_last'] = tr['items'].apply(lambda x:x[-3:])\n",
        "model = train_model(tr)\n",
        "\n",
        "#训练完模型后，我们需要计算用户点击过的物品相似度，一般而言，物品相似度是根据用户点击过的物品序列，计算embedding，从而计算相似度\n",
        "recommendation_items = dict()\n",
        "print('获取相似item') \n",
        "for i in tqdm(items_all):\n",
        "    recommendation_items[i] = get_top_similar(i)\n",
        "\n",
        "#计算用户最后点击的2个物品以及他们所对应的物品，每个物品包括物品代号以及相似度['itmes','sim']\n",
        "tr['items_last_1'] = tr['items_last'].apply(lambda x:recommendation_items[x[-1]])\n",
        "tr['items_last_2'] = tr['items_last'].apply(lambda x:recommendation_items[x[-2]])\n",
        "tr['items_last_all'] = tr['items_last_1']+tr['items_last_2']\n",
        "#根据相似度排序，越是相似的，优先推荐\n",
        "tr['items_last_all'] = tr['items_last_all'].apply(lambda x:sorted(x,key = lambda x:x[1],reverse=True))\n",
        "\n",
        "\n",
        "\n",
        "test_df = test[['userid']].merge(tr,on = 'userid',how = 'left')\n",
        "test_df = melt_data()\n",
        "test_df['items'] = test_df['items'].astype(float)\n",
        "test_df = test_df.merge(TrainUserFeat,on = 'userid',how = 'left')\n",
        "test_df = test_df.merge(TrainItemFeat,on='items',how = 'left')\n",
        "\n",
        "\n",
        "test_df = test_df.sort_values(['userid','weights'],ascending=False).reset_index()\n",
        "submit = test_df.groupby(['userid'])['items'].apply(lambda x:list(x)[:50]).reset_index()\n",
        "sub = pd.DataFrame(list(submit['items'].values))\n",
        "sub.columns = ['item_id_'+str(i).zfill(2) for i in range(1,51)]\n",
        "'''"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-yPQeI8jDHqA",
        "colab_type": "code",
        "outputId": "b2a5d939-65aa-4ddd-8ea5-43b56865730d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        }
      },
      "source": [
        "whole_click_feat_topk_df = get_feat_topk_click_df(whole_click, user_feat_df)\n",
        "whole_click_feat_topk_df"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>gender</th>\n",
              "      <th>age_level</th>\n",
              "      <th>item_id</th>\n",
              "      <th>click_num</th>\n",
              "      <th>rank</th>\n",
              "      <th>sim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>626</th>\n",
              "      <td>F</td>\n",
              "      <td>1.0</td>\n",
              "      <td>21426</td>\n",
              "      <td>40</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>621</th>\n",
              "      <td>F</td>\n",
              "      <td>1.0</td>\n",
              "      <td>21279</td>\n",
              "      <td>33</td>\n",
              "      <td>2.0</td>\n",
              "      <td>-2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1323</th>\n",
              "      <td>F</td>\n",
              "      <td>1.0</td>\n",
              "      <td>42651</td>\n",
              "      <td>25</td>\n",
              "      <td>3.0</td>\n",
              "      <td>-3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3787</th>\n",
              "      <td>F</td>\n",
              "      <td>1.0</td>\n",
              "      <td>111225</td>\n",
              "      <td>20</td>\n",
              "      <td>4.0</td>\n",
              "      <td>-4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1078</th>\n",
              "      <td>F</td>\n",
              "      <td>1.0</td>\n",
              "      <td>35075</td>\n",
              "      <td>19</td>\n",
              "      <td>5.0</td>\n",
              "      <td>-5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116213</th>\n",
              "      <td>M</td>\n",
              "      <td>8.0</td>\n",
              "      <td>39430</td>\n",
              "      <td>4</td>\n",
              "      <td>46.0</td>\n",
              "      <td>-46.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116233</th>\n",
              "      <td>M</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41284</td>\n",
              "      <td>4</td>\n",
              "      <td>47.0</td>\n",
              "      <td>-47.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116240</th>\n",
              "      <td>M</td>\n",
              "      <td>8.0</td>\n",
              "      <td>41953</td>\n",
              "      <td>4</td>\n",
              "      <td>48.0</td>\n",
              "      <td>-48.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116245</th>\n",
              "      <td>M</td>\n",
              "      <td>8.0</td>\n",
              "      <td>42588</td>\n",
              "      <td>4</td>\n",
              "      <td>49.0</td>\n",
              "      <td>-49.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>116247</th>\n",
              "      <td>M</td>\n",
              "      <td>8.0</td>\n",
              "      <td>42603</td>\n",
              "      <td>4</td>\n",
              "      <td>50.0</td>\n",
              "      <td>-50.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>800 rows × 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       gender  age_level  item_id  click_num  rank   sim\n",
              "626         F        1.0    21426         40   1.0  -1.0\n",
              "621         F        1.0    21279         33   2.0  -2.0\n",
              "1323        F        1.0    42651         25   3.0  -3.0\n",
              "3787        F        1.0   111225         20   4.0  -4.0\n",
              "1078        F        1.0    35075         19   5.0  -5.0\n",
              "...       ...        ...      ...        ...   ...   ...\n",
              "116213      M        8.0    39430          4  46.0 -46.0\n",
              "116233      M        8.0    41284          4  47.0 -47.0\n",
              "116240      M        8.0    41953          4  48.0 -48.0\n",
              "116245      M        8.0    42588          4  49.0 -49.0\n",
              "116247      M        8.0    42603          4  50.0 -50.0\n",
              "\n",
              "[800 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 217
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FSvKVFCtf3V3",
        "colab_type": "code",
        "outputId": "5dac36b0-30f3-4720-8908-1b87bebee2b4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "recommend_fill_df = get_reco_df_fill_topk(recom_df, user_feat_df, whole_click_feat_topk_df, top50_click)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "76100 76150\n",
            "260900 260900\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nkgQqDqzjGjg",
        "colab_type": "text"
      },
      "source": [
        "## DeepFM\n",
        "user—feat\n",
        "item-feat\n",
        "\n",
        "For each phase，\n",
        "\n",
        "    训练集: user-id item-id time user-info item-info\n",
        "\n",
        "    \n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9oZNbHlGLJSX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!pip3 install deepctr[gpu]"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r5b-fG2EkXU9",
        "colab_type": "code",
        "outputId": "b287beb8-e0be-449f-e672-fa59bc0f1805",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "%tensorflow_version 1.x"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "TensorFlow 1.x selected.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v5HHeYpXLINw",
        "colab_type": "code",
        "outputId": "15cdfada-5fe0-4d67-c64e-68e99d2f4a62",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 371
        }
      },
      "source": [
        "import pandas as pd\n",
        "from sklearn.preprocessing import LabelEncoder, MinMaxScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from deepctr.models import DeepFM\n",
        "from deepctr.models.din import DIN\n",
        "from deepctr.inputs import SparseFeat, DenseFeat, get_feature_names, VarLenSparseFeat\n",
        "from sklearn.metrics import log_loss, roc_auc_score\n",
        "from tensorflow.python.keras.models import Model, load_model, save_model\n",
        "from deepctr.layers import custom_objects\n",
        "# import tensorflow as tf\n",
        "# tf.set_random_seed(1234)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ModuleNotFoundError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-21-81e2d3238d6d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpreprocessing\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mLabelEncoder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mMinMaxScaler\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel_selection\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mdeepctr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDeepFM\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mdeepctr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdin\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDIN\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mdeepctr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minputs\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mSparseFeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDenseFeat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mget_feature_names\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mVarLenSparseFeat\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'deepctr'",
            "",
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uAJ5Fg24PwHj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "HIDDEN_SIZE = (128, 128)\n",
        "BATCH_SIZE = 1024\n",
        "EPOCH = 6\n",
        "EMBED_DIM = 16"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YF8PRCsPKjDl",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def deepfm_training(all_click_df, item_feat_df, user_feat_df, phase):\n",
        "  full_train_click_df = all_click_df # click_train_df.append(click_test_df)\n",
        "  full_train_click_df['mode'] = 'train'\n",
        "  full_train_click_df['label'] = 1.0\n",
        "  \n",
        "  # training negative sampling\n",
        "  train_neg_df, all_item_ids = obtain_train_negative_sample_df(full_train_click_df)\n",
        "  full_df = full_train_click_df.append(train_neg_df)\n",
        "\n",
        "  # val pos + negative sampling\n",
        "  if mode == 'offline':\n",
        "     val_df = obtain_val_pos_neg_df(phase, all_item_ids)\n",
        "     full_df = full_df.append(val_df)\n",
        "  full_df = full_df.sample(frac=1.0)\n",
        "  print('negative sampling done')\n",
        "\n",
        "  # item_feat\n",
        "  item_feat_df, item_dense_feat = process_item_feat(item_feat_df)\n",
        "  # user_feat\n",
        "  user_feat_df, user_sparse_feat = process_user_feat(user_feat_df)\n",
        "  # dense \n",
        "  dense_feat = item_dense_feat\n",
        "  # sparse \n",
        "  sparse_feat = user_sparse_feat + ['user_id', 'item_id']\n",
        "\n",
        "  full_df = organize_feat(full_df, user_feat_df, item_feat_df, sparse_feat, dense_feat)\n",
        "\n",
        "  print('join feat done')\n",
        "\n",
        "  # sparse encode\n",
        "  feat_lbe_dict = {}\n",
        "  for feat in sparse_feat:\n",
        "      lbe = LabelEncoder()\n",
        "      full_df[feat] = lbe.fit_transform(full_df[feat].astype(str))\n",
        "      feat_lbe_dict[feat] = lbe\n",
        "\n",
        "  print('label encoder done')\n",
        "  \n",
        "  feature_names, linear_feature_columns, dnn_feature_columns = generate_feature_columns(full_df, sparse_feat, dense_feat)\n",
        "  train_input, train_label, test_input, test_label = generate_train_test_samples(full_df, feature_names)\n",
        "  model = build_model(linear_feature_columns, dnn_feature_columns)\n",
        "  \n",
        "  print('begin training...')\n",
        "  model.fit(train_input, train_label, batch_size=BATCH_SIZE, epochs=EPOCH,\n",
        "              verbose=1, validation_data=(test_input, test_label))\n",
        "  \n",
        "  print('training done...')\n",
        "  \n",
        "  pred_ans = model.predict(test_input, batch_size=BATCH_SIZE)\n",
        "  print(\"test LogLoss\", round(log_loss(test_label, pred_ans), 4))\n",
        "  print(\"test AUC\", round(roc_auc_score(test_label, pred_ans), 4))\n",
        "  return sparse_feat, dense_feat, feat_lbe_dict, feature_names, model"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PQpzOO3mG-zc",
        "colab_type": "text"
      },
      "source": [
        "### Construct Input"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dIWN2HAHb7yb",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "click_train_df = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(now_phase), header=None,\n",
        "                                 names=['user_id', 'item_id', 'time'])\n",
        "click_test_df = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(now_phase), header=None,\n",
        "                                 names=['user_id', 'item_id', 'time'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FO7k3-mtH65z",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "full_train_click_df = click_train_df.append(click_test_df)\n",
        "full_train_click_df['mode'] = 'train'"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oIevQ3bcM7La",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "full_train_click_df['label'] = 1.0"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "97ZqjLki6QVm",
        "colab_type": "code",
        "outputId": "0f5b6430-96e4-4946-bf4b-5ad230104777",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 85
        }
      },
      "source": [
        "def get_recall_results(user_item_dict, phase):\n",
        "  recom_item = []\n",
        "  for u in tqdm(user_item_dict.keys()):\n",
        "    rank_item = time_aware_recommend(item_sim_list, user_item_dict, u, recommend_num, 300)\n",
        "    for j in rank_item:\n",
        "        recom_item.append([u, j[0], j[1], phase])\n",
        "\n",
        "  recall_recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "  return recall_recom_df\n",
        "\n",
        "\n",
        "item_sim_list, user_item_dict = get_time_dir_aware_sim_item(full_train_click_df, 'user_id', 'item_id') \n",
        "print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "click_last_recall_recom_df = get_recall_results(user_item_dict, now_phase)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 16910/16910 [01:02<00:00, 272.00it/s]\n",
            "100%|██████████| 42837/42837 [00:03<00:00, 10869.33it/s]\n",
            "  0%|          | 11/16910 [00:00<03:23, 83.18it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42837 16910\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 16910/16910 [04:00<00:00, 70.31it/s]\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uWdXqVDvRLqG",
        "colab_type": "text"
      },
      "source": [
        "### Negative Sampling"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y4K2ICtN5cSx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def obtain_train_negative_sample_df(train_pos_df, train_recall_recom_df):\n",
        "  ratio = 2.0\n",
        "  all_item_ids = list(train_pos_df['item_id'].unique())\n",
        "  user_count_dict = train_pos_df['user_id'].value_counts().to_dict()\n",
        "\n",
        "  train_user_neg_item_samples = []\n",
        "  fake_time = 0.98\n",
        "  for u in train_pos_df['user_id'].unique():\n",
        "    u_count = user_count_dict[u]\n",
        "    u_pos_item_set = set(train_pos_df[train_pos_df['user_id'] == u]['item_id'])\n",
        "    recall_items = list(set(train_recall_recom_df[train_recall_recom_df['user_id'] == u]['item_id']))\n",
        "    negative_samples = np.random.choice(recall_items, size=min(int(ratio*u_count), len(recall_items)), replace=False)\n",
        "\n",
        "    for neg in negative_samples:\n",
        "      while neg in u_pos_item_set:\n",
        "          neg = np.random.choice(recall_items)\n",
        "      train_user_neg_item_samples.append((u, neg, fake_time, 'train', 0.0))\n",
        "\n",
        "  train_neg_df = pd.DataFrame.from_records(train_user_neg_item_samples, columns=['user_id', 'item_id', 'time', 'mode', 'label'])\n",
        "  return train_neg_df\n",
        "\n",
        "\n",
        "\n",
        "def obtain_val_pos_neg_df(phase, test_recall_recom_df):\n",
        "  val_neg_sample_num = 50\n",
        "  fake_time = 0.98\n",
        "  if phase == None: \n",
        "    phase = range(now_phase+1)\n",
        "  else:\n",
        "    phase = [phase]\n",
        "\n",
        "  click_answer_df = pd.DataFrame()\n",
        "  for i in phase:\n",
        "    print('phase', i)\n",
        "    phase_click_answer_df = pd.read_csv(offline_answer_path + '/underexpose_test_qtime_with_answer-{}.csv'.format(i), header=None, \n",
        "                                   names=['user_id', 'item_id', 'time'])\n",
        "    click_answer_df = click_answer_df.append(phase_click_answer_df)\n",
        "    \n",
        "  click_answer_df['mode'] = 'val'\n",
        "  click_answer_df['label'] = 1.0\n",
        "  \n",
        "  val_user_neg_item_samples = []\n",
        "  for u in click_answer_df['user_id'].unique():\n",
        "    u_pos_item_set = set(click_answer_df[click_answer_df['user_id'] == u]['item_id'])\n",
        "    recall_items = list(set(test_recall_recom_df[test_recall_recom_df['user_id'] == u]['item_id']))\n",
        "    negative_samples = np.random.choice(recall_items, size=min(len(recall_items), val_neg_sample_num), replace=False)\n",
        "    for neg in negative_samples:\n",
        "      while neg in u_pos_item_set:\n",
        "          neg = np.random.choice(recall_items)\n",
        "      val_user_neg_item_samples.append((u, neg, fake_time, 'val', 0.0))\n",
        "\n",
        "  val_neg_df = pd.DataFrame.from_records(val_user_neg_item_samples, columns=['user_id', 'item_id', 'time', 'mode', 'label'])\n",
        "  click_answer_df = click_answer_df.append(val_neg_df)\n",
        "  return click_answer_df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-ikr35F256v3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def obtain_train_negative_sample_df(train_pos_df):\n",
        "  ratio = 2.0\n",
        "  all_item_ids = list(train_pos_df['item_id'].unique())\n",
        "  user_count_dict = train_pos_df['user_id'].value_counts().to_dict()\n",
        "\n",
        "  train_user_neg_item_samples = []\n",
        "  fake_time = 0.98\n",
        "  for u in train_pos_df['user_id'].unique():\n",
        "    u_count = user_count_dict[u]\n",
        "    u_pos_item_set = set(train_pos_df[train_pos_df['user_id'] == u]['item_id'])\n",
        "    negative_samples = np.random.choice(all_item_ids, size=int(ratio*u_count), replace=False)\n",
        "\n",
        "    for neg in negative_samples:\n",
        "      while neg in u_pos_item_set:\n",
        "          neg = np.random.choice(all_item_ids)\n",
        "      train_user_neg_item_samples.append((u, neg, fake_time, 'train', 0.0))\n",
        "\n",
        "  train_neg_df = pd.DataFrame.from_records(train_user_neg_item_samples, columns=['user_id', 'item_id', 'time', 'mode', 'label'])\n",
        "  return train_neg_df, all_item_ids"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ESA5Ja18RJ_r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def obtain_val_pos_neg_df(phase, all_item_ids):\n",
        "  val_neg_sample_num = 50\n",
        "  fake_time = 0.98\n",
        "  if phase == None: \n",
        "    phase = range(now_phase+1)\n",
        "  else:\n",
        "    phase = [phase]\n",
        "\n",
        "  click_answer_df = pd.DataFrame()\n",
        "  for i in phase:\n",
        "    print('phase', i)\n",
        "    phase_click_answer_df = pd.read_csv(offline_answer_path + '/underexpose_test_qtime_with_answer-{}.csv'.format(i), header=None, \n",
        "                                   names=['user_id', 'item_id', 'time'])\n",
        "    click_answer_df = click_answer_df.append(phase_click_answer_df)\n",
        "    \n",
        "  click_answer_df['mode'] = 'val'\n",
        "  click_answer_df['label'] = 1.0\n",
        "  \n",
        "  val_user_neg_item_samples = []\n",
        "  for u in click_answer_df['user_id'].unique():\n",
        "    u_pos_item_set = set(click_answer_df[click_answer_df['user_id'] == u]['item_id'])\n",
        "    negative_samples = np.random.choice(all_item_ids, size=val_neg_sample_num, replace=False)\n",
        "    for neg in negative_samples:\n",
        "      while neg in u_pos_item_set:\n",
        "          neg = np.random.choice(all_item_ids)\n",
        "      val_user_neg_item_samples.append((u, neg, fake_time, 'val', 0.0))\n",
        "\n",
        "  val_neg_df = pd.DataFrame.from_records(val_user_neg_item_samples, columns=['user_id', 'item_id', 'time', 'mode', 'label'])\n",
        "  click_answer_df = click_answer_df.append(val_neg_df)\n",
        "  return click_answer_df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vuxcLz1En5jc",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_neg_df = obtain_train_negative_sample_df(full_train_click_df, click_last_recall_recom_df)\n",
        "full_df = full_train_click_df.append(train_neg_df)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KLZoOAq37fdZ",
        "colab_type": "code",
        "outputId": "c52e995a-01ce-44bd-c7d2-778f178d48ff",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "if mode == 'offline':\n",
        "  print('offline')\n",
        "  val_df = obtain_val_pos_neg_df(now_phase, click_last_recall_recom_df)\n",
        "  full_df = full_df.append(val_df)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "offline\n",
            "phase 4\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JdUHIMsmoK9-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "full_df = full_df.sample(frac=1.0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CUT7eQvCoWVu",
        "colab_type": "code",
        "outputId": "d4951816-f1d9-42fb-ed48-bdd8f1b2c144",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "full_df[full_df['mode'] == 'train']['label'].value_counts()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0    573218\n",
              "1.0    286609\n",
              "Name: label, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2MvAIT1PIZqu",
        "colab_type": "text"
      },
      "source": [
        "### Feat"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7Sk4Edo8Jlz4",
        "colab_type": "text"
      },
      "source": [
        "#### Item-Feat"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "l79Hi2pvFuNV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def process_item_feat(item_feat_df):\n",
        "  processed_item_feat_df = item_feat_df.copy()\n",
        "  txt_dense_feat = ['txt_embed_'+str(i) for i in range(128)] \n",
        "  img_dense_feat = ['img_embed_'+str(i) for i in range(128)]\n",
        "  dense_feat = txt_dense_feat + img_dense_feat\n",
        "  # norm\n",
        "  txt_item_feat_np = processed_item_feat_df[txt_dense_feat].values\n",
        "  img_item_feat_np = processed_item_feat_df[img_dense_feat].values\n",
        "  txt_item_feat_np = txt_item_feat_np / np.linalg.norm(txt_item_feat_np, axis=1, keepdims=True)\n",
        "  img_item_feat_np = img_item_feat_np / np.linalg.norm(img_item_feat_np, axis=1, keepdims=True)\n",
        "  processed_item_feat_df[txt_dense_feat] = pd.DataFrame(txt_item_feat_np, columns=txt_dense_feat)\n",
        "  processed_item_feat_df[img_dense_feat] = pd.DataFrame(img_item_feat_np, columns=img_dense_feat)\n",
        "  return processed_item_feat_df, dense_feat"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Jc7tgtWoIkUX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "processed_item_feat_df, dense_feat = process_item_feat(item_feat_df)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YlNnm6ksJn3y",
        "colab_type": "text"
      },
      "source": [
        "#### User-Feat"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6OMVQa9zI8qC",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def process_user_feat(user_feat_df):\n",
        "  # sparse encoder\n",
        "  user_sparse_feat = ['age_level','gender','city_level']\n",
        "  return user_feat_df, user_sparse_feat"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "onLAazRcKeso",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "processed_user_feat_df, user_sparse_feat = process_user_feat(user_feat_df)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "91B_H49RKgYf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "sparse_feat = ['user_id', 'item_id'] # + user_sparse_feat"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5ER13QTX5FgR",
        "colab_type": "code",
        "outputId": "cb034e56-bb2f-422f-85a3-c68f38929545",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "len(sparse_feat) + len(dense_feat)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "258"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-AEBF7g8Ir4Y",
        "colab_type": "text"
      },
      "source": [
        "### Input+Feat"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EtloUzN88m6C",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def fillna(df, sparse_feat, dense_feat):\n",
        "  for sp in sparse_feat:\n",
        "    df[sp].fillna('-1', inplace=True)\n",
        "    \n",
        "  for ds in dense_feat:\n",
        "    df[ds].fillna(0.0, inplace=True) # all_click_user_item_df[ds].mean()\n",
        "  return df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VkdZU8rR8GR5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def organize_feat(df, user_feat_df, item_feat_df, sparse_feat, dense_feat):\n",
        "  full_user_df = pd.merge(df, user_feat_df, how='left', on='user_id')\n",
        "  full_user_item_df = pd.merge(full_user_df, item_feat_df, how='left', on='item_id')\n",
        "  full_user_item_df = fillna(full_user_item_df, sparse_feat, dense_feat)\n",
        "  return full_user_item_df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9BBk00mz8w4T",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "full_df = organize_feat(full_df, processed_user_feat_df, processed_item_feat_df, sparse_feat, dense_feat)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HjEXwTP2HEDx",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# sparse features one-hot\n",
        "feat_lbe_dict = {}\n",
        "for feat in sparse_feat:\n",
        "    lbe = LabelEncoder()\n",
        "    full_df[feat] = lbe.fit_transform(full_df[feat].astype(str))\n",
        "    feat_lbe_dict[feat] = lbe"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "997PhrEgtXVb",
        "colab_type": "code",
        "outputId": "10b7a895-d538-4948-9768-d7bf47c2dde9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "len(feat_lbe_dict['item_id'].classes_)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "42814"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 320
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cWRJoZQTtoTQ",
        "colab_type": "code",
        "outputId": "496e9d0d-627f-43fb-86f4-21ab3f4f87f1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "len(click_train.append(click_test)['item_id'].unique())"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "42837"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 322
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E4KmFa_hP5QG",
        "colab_type": "text"
      },
      "source": [
        "### feat columns"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vSnbS9ITHEAU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def generate_feature_columns(data, sparse_features, dense_features):\n",
        "    sparse_feature_columns = [SparseFeat(feat, vocabulary_size=data[feat].nunique(), embedding_dim=EMBED_DIM)\n",
        "                              for i, feat in enumerate(sparse_features)]\n",
        "    dense_feature_columns = [DenseFeat(feat, 1, ) for feat in dense_features]\n",
        "\n",
        "    # DNN side\n",
        "    dnn_feature_columns = sparse_feature_columns + dense_feature_columns\n",
        "    # FM side\n",
        "    linear_feature_columns = sparse_feature_columns + dense_feature_columns\n",
        "    # all feature names\n",
        "    feature_names = get_feature_names(linear_feature_columns + dnn_feature_columns)\n",
        "\n",
        "    return feature_names, linear_feature_columns, dnn_feature_columns"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JHotGGbOhKCz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "feature_names, linear_feature_columns, dnn_feature_columns = generate_feature_columns(full_df, sparse_feat, dense_feat)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LujwjM9yQM1q",
        "colab_type": "text"
      },
      "source": [
        "### Train/test split"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "j29O099rjyB3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def generate_train_test_samples(df, feature_names, target='label'):\n",
        "\n",
        "    train, test = df[df['mode'] == 'train'], df[df['mode'] == 'val']\n",
        "\n",
        "    train_input = {name: train[name].values for name in feature_names}\n",
        "    test_input = {name: test[name].values for name in feature_names}\n",
        "\n",
        "    train_label = train[target].values\n",
        "    test_label = test[target].values\n",
        "\n",
        "    return train_input, train_label, test_input, test_label"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cg-zkcgvj_QP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_input, train_label, test_input, test_label = generate_train_test_samples(full_df, feature_names)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DaXPiSLENUzt",
        "colab_type": "text"
      },
      "source": [
        "### Build model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TYWVGf-XklDt",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def build_model(linear_feature_columns, dnn_feature_columns):\n",
        "    model = DeepFM(linear_feature_columns, dnn_feature_columns, task='binary',\n",
        "                   dnn_dropout=0.5, dnn_hidden_units=HIDDEN_SIZE)\n",
        "    model.compile(\"adam\", \"binary_crossentropy\",\n",
        "                  metrics=['binary_crossentropy'], )\n",
        "\n",
        "    return model"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S3O1tJ6cehxU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h03mi8mU6agB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model = build_model(linear_feature_columns, dnn_feature_columns)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ELcO63KqNlto",
        "colab_type": "text"
      },
      "source": [
        "### \bTrain"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JvwuxjuN7AW1",
        "colab_type": "code",
        "outputId": "d71addf4-6ed7-4ab9-867a-2f78f47e7d3b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 275
        }
      },
      "source": [
        "EPOCH = 6\n",
        "model.fit(train_input, train_label, batch_size=BATCH_SIZE, epochs=EPOCH,\n",
        "            verbose=1, validation_data=(test_input, test_label)) # validation_split=0.05, "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 796038 samples, validate on 81540 samples\n",
            "Epoch 1/6\n",
            "796038/796038 [==============================] - 47s 60us/sample - loss: 0.6372 - binary_crossentropy: 0.6353 - val_loss: 0.4268 - val_binary_crossentropy: 0.4242\n",
            "Epoch 2/6\n",
            "796038/796038 [==============================] - 48s 60us/sample - loss: 0.6306 - binary_crossentropy: 0.6255 - val_loss: 0.4258 - val_binary_crossentropy: 0.4204\n",
            "Epoch 3/6\n",
            "796038/796038 [==============================] - 47s 59us/sample - loss: 0.6257 - binary_crossentropy: 0.6172 - val_loss: 0.4282 - val_binary_crossentropy: 0.4192\n",
            "Epoch 4/6\n",
            "796038/796038 [==============================] - 48s 60us/sample - loss: 0.6187 - binary_crossentropy: 0.6063 - val_loss: 0.4196 - val_binary_crossentropy: 0.4066\n",
            "Epoch 5/6\n",
            "796038/796038 [==============================] - 48s 61us/sample - loss: 0.6103 - binary_crossentropy: 0.5938 - val_loss: 0.4379 - val_binary_crossentropy: 0.4206\n",
            "Epoch 6/6\n",
            "796038/796038 [==============================] - 48s 60us/sample - loss: 0.6004 - binary_crossentropy: 0.5794 - val_loss: 0.4370 - val_binary_crossentropy: 0.4149\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7f307e680860>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eWWLaABBNkyI",
        "colab_type": "text"
      },
      "source": [
        "### \b\bValidate"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "njk0Lchi9v2O",
        "colab_type": "code",
        "outputId": "450dae52-69ee-4fc1-d11b-11aa175cf66d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "pred_ans = model.predict(test_input, batch_size=BATCH_SIZE)\n",
        "print(\"test LogLoss\", round(log_loss(test_label, pred_ans), 4))\n",
        "print(\"test AUC\", round(roc_auc_score(test_label, pred_ans), 4))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "test LogLoss 0.4149\n",
            "test AUC 0.5649\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R2r7mZlhKyLq",
        "colab_type": "code",
        "outputId": "96a4aa81-c98c-47b9-ac73-aceffb117dde",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 377
        }
      },
      "source": [
        "sparse_feat, dense_feat, feat_lbe_dict, feature_names, model = deepfm_training(click_train_df, click_test_df, item_feat_df, user_feat_df, now_phase)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "phase 3\n",
            "Train on 859827 samples, validate on 85425 samples\n",
            "Epoch 1/6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n",
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "859827/859827 [==============================] - 54s 63us/sample - loss: 0.6173 - binary_crossentropy: 0.6115 - val_loss: 0.4002 - val_binary_crossentropy: 0.3892\n",
            "Epoch 2/6\n",
            "859827/859827 [==============================] - 49s 57us/sample - loss: 0.5691 - binary_crossentropy: 0.5507 - val_loss: 0.3884 - val_binary_crossentropy: 0.3661\n",
            "Epoch 3/6\n",
            "859827/859827 [==============================] - 49s 57us/sample - loss: 0.5310 - binary_crossentropy: 0.5022 - val_loss: 0.4079 - val_binary_crossentropy: 0.3760\n",
            "Epoch 4/6\n",
            "859827/859827 [==============================] - 50s 59us/sample - loss: 0.5029 - binary_crossentropy: 0.4664 - val_loss: 0.4083 - val_binary_crossentropy: 0.3693\n",
            "Epoch 5/6\n",
            "859827/859827 [==============================] - 51s 59us/sample - loss: 0.4815 - binary_crossentropy: 0.4389 - val_loss: 0.4309 - val_binary_crossentropy: 0.3864\n",
            "Epoch 6/6\n",
            "859827/859827 [==============================] - 51s 59us/sample - loss: 0.4644 - binary_crossentropy: 0.4170 - val_loss: 0.4272 - val_binary_crossentropy: 0.3782\n",
            "test LogLoss 0.3782\n",
            "test AUC 0.7684\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FAbWFYqVvmpy",
        "colab_type": "text"
      },
      "source": [
        "### Organize Recall Features"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ruyfej1vvmCy",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def organize_recall_item_features(recall_df, user_feat_df, item_feat_df, feat_lbe_dict, sparse_feat, dense_feat, feature_names):\n",
        "  ''' \n",
        "  recall_df: user, item, sim\n",
        "  '''\n",
        "  recall_user_item_df = organize_feat(recall_df, user_feat_df, item_feat_df, sparse_feat, dense_feat)\n",
        "\n",
        "  for feat in sparse_feat:\n",
        "    print(feat)\n",
        "    recall_user_item_df[feat] = feat_lbe_dict[feat].transform(recall_user_item_df[feat].astype(str))\n",
        "\n",
        "  infer_input = {name: recall_user_item_df[name].values for name in feature_names}\n",
        "  return infer_input"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_HDw14PCdBgt",
        "colab_type": "text"
      },
      "source": [
        "## Ranking\n",
        "\n",
        "训练：\n",
        "\n",
        "对每个阶段：\n",
        "\n",
        "1. phase_whole_click/all_click来提取特征和计算item_cf相似度\n",
        "\n",
        "2. 读取验证集的召回结果\n",
        "\n",
        "3. 读取验证集的真实点击数据\n",
        "\n",
        "4. 下采样负样本\n",
        "\n",
        "5. 拼接特征训练并保存"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fXgUbyNzlT-1",
        "colab_type": "text"
      },
      "source": [
        "#### training"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O9WXGsCQ7_ox",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "total_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv('underexpose_train/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv('underexpose_test/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    all_click['phase'] = c\n",
        "    total_click = total_click.append(all_click)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HZxcbtGXMmkN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "top50_click_np = total_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click_np])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YookPmggKS6m",
        "colab_type": "text"
      },
      "source": [
        "##### obtain Train Dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DEw6GVgjhQxH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "fake_sim = 10.0\n",
        "def get_history_and_last_click_df(click_df):\n",
        "  click_df = click_df.sort_values(by=['user_id', 'time'])\n",
        "  click_last_df = click_df.groupby('user_id').tail(1)\n",
        "\n",
        "  # 用户只有1个点击时，history为空了，导致训练的时候这个用户不可见, 此时默认一下该用户泄露\n",
        "  def hist_func(user_df):\n",
        "    num = len(user_df)\n",
        "    if num == 1:\n",
        "      return user_df\n",
        "    else:\n",
        "      return user_df[:-1]\n",
        "\n",
        "  click_history_df = click_df.groupby('user_id').apply(hist_func).reset_index(drop=True)\n",
        "  \n",
        "  return click_history_df, click_last_df\n",
        "\n",
        "def get_recall_results(item_sim_list, user_item_dict, phase, target_user_ids=None):\n",
        "  if target_user_ids is None:\n",
        "    target_user_ids = user_item_dict.keys()\n",
        "  recom_item = []\n",
        "  for u in tqdm(target_user_ids):\n",
        "    rank_items, rank_item_scores = time_aware_recommend(item_sim_list, user_item_dict, u, recommend_num, 300, ret_each_score=True)\n",
        "    user_hist_seq = [i for i, t in user_item_dict[u]]\n",
        "    # 防止该用户丢失\n",
        "    if len(rank_items) == 0:\n",
        "      rank_items = [(top50_click_np[0], 0.0)]\n",
        "      rank_item_scores = [[0.0, 0.0, 0.0]]\n",
        "    for item_rating, item_sim2_interacted_items in zip(rank_items, rank_item_scores):\n",
        "        recom_item.append([u, item_rating[0], item_rating[1], phase] + item_sim2_interacted_items + [user_hist_seq, ])\n",
        "\n",
        "    \n",
        "\n",
        "  recall_recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'] + ['sim2int_1', 'sim2int_2', 'sim2int_3', 'user_hist_seq'])\n",
        "  return recall_recom_df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3-s2zruuxM1Y",
        "colab_type": "code",
        "outputId": "5d9395b8-b64f-4a11-dcb8-5e413dead1ca",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "c = 4\n",
        "recom_item = []\n",
        "print('phase:', c)\n",
        "click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                          names=['user_id', 'item_id', 'time'])\n",
        "click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                          names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "click_train_history_df, click_train_last_df = get_history_and_last_click_df(click_train)\n",
        "click_test_history_df, click_test_last_df = get_history_and_last_click_df(click_test)\n",
        "\n",
        "all_history_df = click_train_history_df.append(click_test_history_df)\n",
        "\n",
        "item_sim_list, _ = get_time_dir_aware_sim_item(all_history_df, 'user_id', 'item_id') \n",
        "print(len(item_sim_list), len(train_user_item_dict))\n",
        "\n",
        "train_user_item_dict = get_user_item_time_dict(click_train_history_df)\n",
        "click_train_last_recall_recom_df = get_recall_results(item_sim_list, train_user_item_dict, c)\n",
        "assert len(train_user_item_dict) == len(click_train_last_recall_recom_df['user_id'].unique()) == len(click_train_last_df['user_id'].unique())\n",
        "\n",
        "test_user_item_dict = get_user_item_time_dict(click_test_history_df)\n",
        "click_test_last_recall_recom_df = get_recall_results(item_sim_list, test_user_item_dict, c)\n",
        "assert len(test_user_item_dict) == len(click_test_last_recall_recom_df['user_id'].unique()) == len(click_test_last_df['user_id'].unique())"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "\n",
            " 18%|█▊        | 3045/16910 [00:11<00:58, 237.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 3094/16910 [00:11<00:49, 280.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▊        | 3129/16910 [00:11<01:03, 218.70it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▊        | 3158/16910 [00:11<01:04, 213.03it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3184/16910 [00:11<01:04, 213.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3209/16910 [00:11<01:02, 217.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3235/16910 [00:12<01:00, 225.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3260/16910 [00:12<01:01, 223.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3296/16910 [00:12<00:54, 252.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 3331/16910 [00:12<00:50, 266.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 3364/16910 [00:12<00:52, 257.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|██        | 3402/16910 [00:12<00:47, 282.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|██        | 3439/16910 [00:12<00:44, 304.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3471/16910 [00:12<00:50, 268.69it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3500/16910 [00:13<00:58, 230.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3532/16910 [00:13<00:54, 247.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3573/16910 [00:13<00:48, 274.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██▏       | 3603/16910 [00:13<01:09, 192.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██▏       | 3633/16910 [00:13<01:06, 199.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3665/16910 [00:13<00:58, 224.60it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3706/16910 [00:13<00:51, 258.52it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3737/16910 [00:13<00:49, 265.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3767/16910 [00:14<00:51, 252.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3795/16910 [00:14<00:52, 248.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3822/16910 [00:14<01:06, 195.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3860/16910 [00:14<00:56, 228.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3892/16910 [00:14<00:52, 250.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3921/16910 [00:14<00:55, 236.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3957/16910 [00:14<00:49, 263.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▎       | 3993/16910 [00:14<00:45, 284.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4029/16910 [00:15<00:50, 256.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4057/16910 [00:15<00:53, 241.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4083/16910 [00:15<01:07, 191.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4105/16910 [00:15<01:12, 175.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4125/16910 [00:15<01:12, 177.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 4145/16910 [00:15<01:14, 172.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 4167/16910 [00:15<01:09, 182.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 4187/16910 [00:16<01:10, 179.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▌       | 4228/16910 [00:16<00:58, 215.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▌       | 4256/16910 [00:16<00:54, 231.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▌       | 4282/16910 [00:16<00:53, 234.52it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4337/16910 [00:16<00:44, 281.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4376/16910 [00:16<00:41, 301.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4411/16910 [00:16<00:45, 274.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▋       | 4442/16910 [00:16<00:46, 269.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4484/16910 [00:16<00:41, 300.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4517/16910 [00:17<00:56, 219.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4562/16910 [00:17<00:47, 259.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4595/16910 [00:17<00:44, 273.77it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4628/16910 [00:17<00:47, 260.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4674/16910 [00:17<00:40, 298.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4709/16910 [00:17<00:46, 265.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4740/16910 [00:17<00:45, 267.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4773/16910 [00:18<00:42, 283.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4804/16910 [00:18<00:52, 231.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▊       | 4831/16910 [00:18<00:51, 233.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4866/16910 [00:18<00:48, 248.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4893/16910 [00:18<00:48, 248.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4933/16910 [00:18<00:42, 279.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4964/16910 [00:18<00:42, 282.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|██▉       | 4994/16910 [00:18<00:43, 271.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|██▉       | 5026/16910 [00:19<00:42, 280.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|██▉       | 5055/16910 [00:19<00:42, 278.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 5094/16910 [00:19<00:40, 294.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 5125/16910 [00:19<00:45, 260.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 5153/16910 [00:19<00:46, 254.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5180/16910 [00:19<00:54, 216.15it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5212/16910 [00:19<00:48, 239.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5238/16910 [00:19<00:51, 228.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5263/16910 [00:19<00:50, 229.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███▏      | 5287/16910 [00:20<00:54, 211.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███▏      | 5314/16910 [00:20<00:54, 210.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5336/16910 [00:20<00:55, 209.69it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5377/16910 [00:20<00:47, 244.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5415/16910 [00:20<00:44, 259.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5444/16910 [00:20<00:52, 220.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5481/16910 [00:20<00:46, 245.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5509/16910 [00:20<00:45, 251.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5536/16910 [00:21<00:44, 256.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5563/16910 [00:21<00:44, 253.94it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5593/16910 [00:21<00:42, 263.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5621/16910 [00:21<00:49, 229.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5662/16910 [00:21<00:42, 263.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▎      | 5692/16910 [00:21<00:48, 232.70it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5719/16910 [00:21<00:46, 242.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5750/16910 [00:21<00:43, 258.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5778/16910 [00:22<00:48, 227.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5803/16910 [00:22<00:59, 185.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5825/16910 [00:22<01:02, 176.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5845/16910 [00:22<01:00, 182.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5865/16910 [00:22<01:09, 158.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5899/16910 [00:22<00:58, 188.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▌      | 5935/16910 [00:22<00:52, 210.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▌      | 5967/16910 [00:23<00:46, 234.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6005/16910 [00:23<00:42, 253.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6034/16910 [00:23<00:46, 236.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6072/16910 [00:23<00:40, 264.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6104/16910 [00:23<00:39, 275.94it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▋      | 6147/16910 [00:23<00:35, 301.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6190/16910 [00:23<00:32, 327.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6225/16910 [00:23<00:33, 316.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6259/16910 [00:23<00:40, 261.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6288/16910 [00:24<00:41, 256.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6316/16910 [00:24<00:51, 207.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6340/16910 [00:24<00:52, 202.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6380/16910 [00:24<00:46, 224.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6415/16910 [00:24<00:41, 250.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6449/16910 [00:24<00:39, 267.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6478/16910 [00:24<00:41, 250.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6509/16910 [00:25<00:40, 258.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▊      | 6539/16910 [00:25<00:41, 249.48it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6565/16910 [00:25<00:43, 238.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6601/16910 [00:25<00:39, 262.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6629/16910 [00:25<00:56, 182.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6659/16910 [00:25<00:51, 200.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|███▉      | 6688/16910 [00:25<00:47, 217.03it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|███▉      | 6727/16910 [00:25<00:40, 249.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|███▉      | 6756/16910 [00:26<00:39, 253.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|████      | 6785/16910 [00:26<00:39, 256.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|████      | 6813/16910 [00:26<00:41, 244.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6861/16910 [00:26<00:35, 281.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6893/16910 [00:26<00:37, 265.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6922/16910 [00:26<00:42, 235.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6950/16910 [00:26<00:43, 231.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6975/16910 [00:27<00:54, 181.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████▏     | 7000/16910 [00:27<00:54, 183.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7021/16910 [00:27<00:52, 188.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7055/16910 [00:27<00:45, 214.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7079/16910 [00:27<00:52, 186.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7109/16910 [00:27<00:46, 210.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7133/16910 [00:27<00:56, 173.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7175/16910 [00:27<00:49, 197.66it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7198/16910 [00:28<00:56, 172.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7228/16910 [00:28<00:49, 195.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7258/16910 [00:28<00:44, 217.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7283/16910 [00:28<00:43, 221.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7308/16910 [00:28<00:52, 183.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7348/16910 [00:28<00:44, 215.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▎     | 7377/16910 [00:28<00:42, 225.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7403/16910 [00:29<00:50, 186.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7425/16910 [00:29<00:51, 183.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7457/16910 [00:29<00:45, 209.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7490/16910 [00:29<00:40, 232.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7521/16910 [00:29<00:37, 251.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 7549/16910 [00:29<00:45, 206.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 7580/16910 [00:29<00:41, 226.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 7606/16910 [00:29<00:40, 232.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▌     | 7642/16910 [00:30<00:35, 257.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▌     | 7672/16910 [00:30<00:34, 269.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7701/16910 [00:30<00:37, 245.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7728/16910 [00:30<00:39, 230.97it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7776/16910 [00:30<00:35, 260.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7805/16910 [00:30<00:42, 213.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▋     | 7831/16910 [00:30<00:41, 219.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 7877/16910 [00:30<00:34, 259.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 7920/16910 [00:31<00:30, 293.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 7957/16910 [00:31<00:28, 312.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 8008/16910 [00:31<00:25, 352.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8048/16910 [00:31<00:37, 237.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8080/16910 [00:31<00:35, 249.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8111/16910 [00:31<00:34, 257.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8141/16910 [00:31<00:32, 266.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8171/16910 [00:32<00:47, 185.48it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8195/16910 [00:32<00:44, 196.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▊     | 8219/16910 [00:32<00:48, 177.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▊     | 8240/16910 [00:32<00:48, 180.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8278/16910 [00:32<00:43, 197.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8300/16910 [00:32<00:44, 193.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8330/16910 [00:32<00:39, 216.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8357/16910 [00:33<00:38, 221.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8391/16910 [00:33<00:37, 226.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8415/16910 [00:33<00:39, 212.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8438/16910 [00:33<00:48, 175.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8458/16910 [00:33<00:54, 154.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8476/16910 [00:33<00:53, 156.97it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8493/16910 [00:33<00:55, 150.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8519/16910 [00:33<00:48, 172.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8549/16910 [00:34<00:42, 197.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8573/16910 [00:34<00:39, 208.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8596/16910 [00:34<00:51, 160.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8616/16910 [00:34<00:53, 155.79it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8634/16910 [00:34<01:06, 123.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████▏    | 8681/16910 [00:34<00:51, 158.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████▏    | 8706/16910 [00:34<00:49, 167.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8735/16910 [00:35<00:42, 190.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8767/16910 [00:35<00:37, 216.48it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8807/16910 [00:35<00:34, 232.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8843/16910 [00:35<00:31, 252.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8872/16910 [00:35<00:37, 212.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8898/16910 [00:35<00:35, 223.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8927/16910 [00:35<00:34, 231.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8954/16910 [00:35<00:34, 229.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8979/16910 [00:36<00:45, 175.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 9027/16910 [00:36<00:37, 212.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▎    | 9054/16910 [00:36<00:35, 224.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▎    | 9088/16910 [00:36<00:31, 249.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9129/16910 [00:36<00:27, 280.52it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9161/16910 [00:36<00:29, 266.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9191/16910 [00:36<00:32, 238.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 9218/16910 [00:37<00:43, 178.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 9252/16910 [00:37<00:36, 207.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 9282/16910 [00:37<00:42, 180.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 9323/16910 [00:37<00:35, 214.79it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 9352/16910 [00:37<00:33, 226.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 9379/16910 [00:37<00:38, 194.09it/s]\u001b[A\u001b[A\u001b[A"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VzEwg1FOuLO2",
        "colab_type": "code",
        "outputId": "237d7c9c-c2f4-4f08-d458-573d5326a81c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "click_test_last_recall_recom_df['sim2int_2'].mean()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.2222188])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 616
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0JYSAsn3Wz9Q",
        "colab_type": "code",
        "outputId": "b0a170a6-7435-4e24-ffbe-e96887b5f56b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# test_user_item_dict的某个用户的交互item不存在于训练数据中，导致该用户推荐结果的缺失\n",
        "len(click_test_last_df['user_id'].unique()), len(click_test_last_recall_recom_df['user_id'].unique()), len(click_test_history_df['user_id'].unique())"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1600, 1600, 1600)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 280
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IWI9Os2eqER7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def organize_df(click_last_df, click_last_recall_recom_df, phase, is_consider_cold_start=True):\n",
        "  dfm_df = pd.merge(click_last_recall_recom_df, click_last_df, on=['user_id', 'item_id'], how='left') \n",
        "  dfm_df['label'] = dfm_df['time'].apply(lambda x: 0.0 if np.isnan(x) else 1.0)\n",
        "  # click_last_df里头有些用户的点击没有召回到，即：全部为负样本，导致下采样时，这些用户的负样本可能全被下采样掉了，导致这些用户id丢失；\n",
        "  # item同理。用户真实点击的item可能没有召回到。\n",
        "  dfm_df = downsample_by_user(dfm_df)\n",
        "  use_columns = ['user_id','item_id', 'sim', 'phase', 'label'] + ['sim2int_1', 'sim2int_2', 'sim2int_3', 'user_hist_seq']\n",
        "  dfm_df = dfm_df[use_columns]\n",
        "\n",
        "  # cold_start_item直接泄露, 这些item可能在infer阶段被recall到，导致item_id缺失\n",
        "  cold_start_items = set(click_last_df['item_id'].unique()) - set(dfm_df['item_id'].unique())\n",
        "  if is_consider_cold_start and len(cold_start_items) > 0:\n",
        "    click_last_cold_start_df = click_last_df[click_last_df['item_id'].isin(cold_start_items)]\n",
        "    click_last_cold_start_df['sim'] = dfm_df[dfm_df['label'] == 1.0]['sim'].mean()\n",
        "    click_last_cold_start_df['label'] = 1.0\n",
        "    click_last_cold_start_df['phase'] = phase\n",
        "    click_last_cold_start_df['sim2int_1'] = dfm_df[dfm_df['label'] == 1.0]['sim2int_1'].mean()\n",
        "    click_last_cold_start_df['sim2int_2'] = dfm_df[dfm_df['label'] == 1.0]['sim2int_2'].mean()\n",
        "    click_last_cold_start_df['sim2int_3'] = dfm_df[dfm_df['label'] == 1.0]['sim2int_3'].mean()\n",
        "    click_last_cold_start_df = pd.merge(click_last_cold_start_df, dfm_df[['user_id', 'user_hist_seq']], on='user_id', how='left')\n",
        "\n",
        "    print('cold_start_item_num={}, hit_last_cold_start_df_num={}'.format(len(cold_start_items), len(click_last_cold_start_df)))\n",
        "    dfm_df = dfm_df.append(click_last_cold_start_df[use_columns])\n",
        "\n",
        "  dfm_df = sim_process(dfm_df)\n",
        "\n",
        "  return dfm_df\n",
        "\n",
        "def sim_process(dfm_df):\n",
        "  dfm_df['sim'] = dfm_df.groupby('user_id')['sim'].transform(norm_sim_by_user) \n",
        "  dfm_df['exp_sim'] =  dfm_df['sim'].apply(lambda x: np.exp(x))\n",
        "  return dfm_df\n",
        "\n",
        "\n",
        "def norm_sim_by_user(sim_df):\n",
        "  # print(sim_df.head())\n",
        "    min_sim = sim_df.min()\n",
        "    max_sim = sim_df.max()\n",
        "    if max_sim == min_sim:\n",
        "      sim_df = sim_df.apply(lambda sim: 1.0)\n",
        "    else:\n",
        "      sim_df = sim_df.apply(lambda sim: 1.0 * (sim - min_sim) / (max_sim - min_sim))\n",
        "    return sim_df\n",
        "\n",
        "def downsample_by_user(df, percent=10):\n",
        "    '''\n",
        "    percent:多数类别下采样的数量相对于少数类别样本数量的比例\n",
        "    '''\n",
        "    data_pos = df[df['label'] != 0]\n",
        "    data_neg = df[df['label'] == 0]\n",
        "\n",
        "    def group_neg_sample_func(group_df):\n",
        "      total_neg_num = len(group_df)\n",
        "      sample_num = max(int(total_neg_num * 0.005), 1) # 有些用户召回的数量不足, 取1个\n",
        "      sample_num = min(sample_num, 5)\n",
        "      return group_df.sample(n=sample_num, replace=True)\n",
        "\n",
        "    data_u_neg = data_neg.groupby('user_id', group_keys=False).apply(group_neg_sample_func) # # 保证user全覆盖\n",
        "    data_i_neg = data_neg.groupby('item_id', group_keys=False).apply(group_neg_sample_func) # 保证item全覆盖\n",
        "    data_neg = data_u_neg.append(data_i_neg)\n",
        "    data_neg = data_neg.sort_values(['user_id', 'sim']).drop_duplicates(['user_id', 'item_id'], keep='last')\n",
        "\n",
        "    data = pd.concat([data_neg, data_pos], ignore_index=True)\n",
        "    data = data.sample(frac=1.0)\n",
        "    return data\n",
        "\n",
        "\n",
        "def downsample(df, percent=10):\n",
        "    '''\n",
        "    percent:多数类别下采样的数量相对于少数类别样本数量的比例\n",
        "    '''\n",
        "    data_pos = df[df['label'] != 0]\n",
        "    data_neg = df[df['label'] == 0]\n",
        "\n",
        "    neg_index = np.random.randint(len(data_neg), size = percent * len(data_pos))\n",
        "    data_neg = data_neg.iloc[list(neg_index)]\n",
        "    return(pd.concat([data_neg, data_pos]))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7xP1HPqtt2Js",
        "colab_type": "code",
        "outputId": "ced69f60-7f0f-4b96-a260-0e36599efb32",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "click_test_last_recall_recom_df['user_hist_seq'].isnull().sum()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 613
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XLnE-oVOxPaN",
        "colab_type": "code",
        "outputId": "cf4d381d-4053-4a07-aafb-1cc93dae4ff6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 683
        }
      },
      "source": [
        "dfm_train_df = organize_df(click_train_last_df, click_train_last_recall_recom_df, c)\n",
        "dfm_test_df = organize_df(click_test_last_df, click_test_last_recall_recom_df, c)\n",
        "dfm_full_df = dfm_train_df.append(dfm_test_df)\n",
        "dfm_full_df['label'].value_counts()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:14: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  \n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:15: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  from ipykernel import kernelapp as app\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:16: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  app.launch_new_instance()\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:17: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:19: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "cold_start_item_num=21, hit_last_cold_start_df_num=140\n",
            "cold_start_item_num=17, hit_last_cold_start_df_num=406\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.0    102387\n",
              "1.0      3897\n",
              "Name: label, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 580
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uZ6eweoLYM1w",
        "colab_type": "code",
        "outputId": "890c968d-3761-49ef-ffe1-1ef5d74d69d9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "dfm_full_df['sim2int_3'].mean()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.002122046140668186"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 608
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XoEI5IsjprX6",
        "colab_type": "text"
      },
      "source": [
        "##### obtain val dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b-v2QMa6ptO2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def obtain_val_df(phase, phase_val_history_df, item_sim_list):\n",
        "    phase_val_last_click_answer_df = pd.read_csv(offline_answer_path + '/underexpose_test_qtime_with_answer-{}.csv'.format(phase), header=None, \n",
        "                                   names=['user_id', 'item_id', 'time']) \n",
        "    # recall\n",
        "    val_user_item_dict = get_user_item_time_dict(phase_val_history_df)\n",
        "    phase_val_last_click_recall_recom_df = get_recall_results(item_sim_list, val_user_item_dict, c)\n",
        "    \n",
        "    assert len(phase_val_last_click_recall_recom_df['user_id'].unique()) == len(val_user_item_dict)\n",
        "\n",
        "    val_df = organize_df(phase_val_last_click_answer_df, phase_val_last_click_recall_recom_df, phase, False)\n",
        "    val_target_uids = phase_val_last_click_answer_df['user_id'].unique()\n",
        "    return phase_val_last_click_recall_recom_df, val_df, val_target_uids"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BzNX918SpvJE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "val_recall_df, dfm_val_df, val_target_uids = obtain_val_df(c, click_test, item_sim_list)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hhIcqvB8lzi-",
        "colab_type": "text"
      },
      "source": [
        "##### feat process\n",
        "\n",
        "- item第一次被交互过的时间以及最后一次被交互过的时间\n",
        "- item和用户交互过的历史item的相似度"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "28rkjRO6jp6T",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def process_item_feat(item_feat_df):\n",
        "  processed_item_feat_df = item_feat_df.copy()\n",
        "  txt_dense_feat = ['txt_embed_'+str(i) for i in range(128)] \n",
        "  img_dense_feat = ['img_embed_'+str(i) for i in range(128)]\n",
        "  dense_feat = txt_dense_feat + img_dense_feat\n",
        "  # norm\n",
        "  txt_item_feat_np = processed_item_feat_df[txt_dense_feat].values\n",
        "  img_item_feat_np = processed_item_feat_df[img_dense_feat].values\n",
        "  txt_item_feat_np = txt_item_feat_np / np.linalg.norm(txt_item_feat_np, axis=1, keepdims=True)\n",
        "  img_item_feat_np = img_item_feat_np / np.linalg.norm(img_item_feat_np, axis=1, keepdims=True)\n",
        "  processed_item_feat_df[txt_dense_feat] = pd.DataFrame(txt_item_feat_np, columns=txt_dense_feat)\n",
        "  processed_item_feat_df[img_dense_feat] = pd.DataFrame(img_item_feat_np, columns=img_dense_feat)\n",
        "  return processed_item_feat_df, dense_feat\n",
        "\n",
        "def process_user_feat(user_feat_df):\n",
        "  # sparse encoder\n",
        "  user_sparse_feat = ['age_level','gender','city_level']\n",
        "  return user_feat_df, user_sparse_feat"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ipo33rG0jqxT",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "processed_item_feat_df, item_dense_feat = process_item_feat(item_feat_df)\n",
        "processed_user_feat_df, user_sparse_feat = process_user_feat(user_feat_df)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oNL6qOGfj2N2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def fillna(df, sparse_feat, dense_feat):\n",
        "  for sp in sparse_feat:\n",
        "    df[sp].fillna('-1', inplace=True)\n",
        "    \n",
        "  for ds in dense_feat:\n",
        "    df[ds].fillna(0.0, inplace=True) # all_click_user_item_df[ds].mean()\n",
        "  return df\n",
        "  \n",
        "def organize_feat(df, user_feat_df, item_feat_df, sparse_feat, dense_feat):\n",
        "  full_user_df = pd.merge(df, user_feat_df, how='left', on='user_id')\n",
        "  full_user_item_df = pd.merge(full_user_df, item_feat_df, how='left', on='item_id')\n",
        "  full_user_item_df = fillna(full_user_item_df, sparse_feat, dense_feat)\n",
        "\n",
        "  return full_user_item_df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bMNnwwbtl8lU",
        "colab_type": "text"
      },
      "source": [
        "##### organize feat+input"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Em8AMQtLqKPb",
        "colab_type": "text"
      },
      "source": [
        "###### train"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m8ojXitYv_Kz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "sparse_feat = ['user_id', 'item_id', ] # + user_sparse_feat\n",
        "dense_feat = item_dense_feat + ['sim', 'exp_sim', 'sim2int_1', 'sim2int_2', 'sim2int_3']\n",
        "var_len_feat = ['user_hist_seq']"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wZRGD5jMi6-Q",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_full_df = organize_feat(dfm_full_df, processed_user_feat_df, processed_item_feat_df, sparse_feat, dense_feat)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "k-zC2oTJjdND",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# sparse features one-hot\n",
        "feat_lbe_dict = {}\n",
        "for feat in sparse_feat:\n",
        "    lbe = LabelEncoder()\n",
        "    train_full_df[feat] = lbe.fit_transform(train_full_df[feat].astype(str))\n",
        "    feat_lbe_dict[feat] = lbe"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7IrsJtGkppJB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "item_dict = dict(zip(feat_lbe_dict['item_id'].classes_, \n",
        "                     feat_lbe_dict['item_id'].transform(feat_lbe_dict['item_id'].classes_), )) # 得到字典"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rq_3NFQPtHTG",
        "colab_type": "code",
        "outputId": "91ccb78c-7215-4e03-fadd-d813961d8d5e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 98
        }
      },
      "source": [
        "item_feat_df[item_feat_df.item_id == 52766]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>item_id</th>\n",
              "      <th>txt_embed_0</th>\n",
              "      <th>txt_embed_1</th>\n",
              "      <th>txt_embed_2</th>\n",
              "      <th>txt_embed_3</th>\n",
              "      <th>txt_embed_4</th>\n",
              "      <th>txt_embed_5</th>\n",
              "      <th>txt_embed_6</th>\n",
              "      <th>txt_embed_7</th>\n",
              "      <th>txt_embed_8</th>\n",
              "      <th>txt_embed_9</th>\n",
              "      <th>txt_embed_10</th>\n",
              "      <th>txt_embed_11</th>\n",
              "      <th>txt_embed_12</th>\n",
              "      <th>txt_embed_13</th>\n",
              "      <th>txt_embed_14</th>\n",
              "      <th>txt_embed_15</th>\n",
              "      <th>txt_embed_16</th>\n",
              "      <th>txt_embed_17</th>\n",
              "      <th>txt_embed_18</th>\n",
              "      <th>txt_embed_19</th>\n",
              "      <th>txt_embed_20</th>\n",
              "      <th>txt_embed_21</th>\n",
              "      <th>txt_embed_22</th>\n",
              "      <th>txt_embed_23</th>\n",
              "      <th>txt_embed_24</th>\n",
              "      <th>txt_embed_25</th>\n",
              "      <th>txt_embed_26</th>\n",
              "      <th>txt_embed_27</th>\n",
              "      <th>txt_embed_28</th>\n",
              "      <th>txt_embed_29</th>\n",
              "      <th>txt_embed_30</th>\n",
              "      <th>txt_embed_31</th>\n",
              "      <th>txt_embed_32</th>\n",
              "      <th>txt_embed_33</th>\n",
              "      <th>txt_embed_34</th>\n",
              "      <th>txt_embed_35</th>\n",
              "      <th>txt_embed_36</th>\n",
              "      <th>txt_embed_37</th>\n",
              "      <th>txt_embed_38</th>\n",
              "      <th>...</th>\n",
              "      <th>img_embed_88</th>\n",
              "      <th>img_embed_89</th>\n",
              "      <th>img_embed_90</th>\n",
              "      <th>img_embed_91</th>\n",
              "      <th>img_embed_92</th>\n",
              "      <th>img_embed_93</th>\n",
              "      <th>img_embed_94</th>\n",
              "      <th>img_embed_95</th>\n",
              "      <th>img_embed_96</th>\n",
              "      <th>img_embed_97</th>\n",
              "      <th>img_embed_98</th>\n",
              "      <th>img_embed_99</th>\n",
              "      <th>img_embed_100</th>\n",
              "      <th>img_embed_101</th>\n",
              "      <th>img_embed_102</th>\n",
              "      <th>img_embed_103</th>\n",
              "      <th>img_embed_104</th>\n",
              "      <th>img_embed_105</th>\n",
              "      <th>img_embed_106</th>\n",
              "      <th>img_embed_107</th>\n",
              "      <th>img_embed_108</th>\n",
              "      <th>img_embed_109</th>\n",
              "      <th>img_embed_110</th>\n",
              "      <th>img_embed_111</th>\n",
              "      <th>img_embed_112</th>\n",
              "      <th>img_embed_113</th>\n",
              "      <th>img_embed_114</th>\n",
              "      <th>img_embed_115</th>\n",
              "      <th>img_embed_116</th>\n",
              "      <th>img_embed_117</th>\n",
              "      <th>img_embed_118</th>\n",
              "      <th>img_embed_119</th>\n",
              "      <th>img_embed_120</th>\n",
              "      <th>img_embed_121</th>\n",
              "      <th>img_embed_122</th>\n",
              "      <th>img_embed_123</th>\n",
              "      <th>img_embed_124</th>\n",
              "      <th>img_embed_125</th>\n",
              "      <th>img_embed_126</th>\n",
              "      <th>img_embed_127</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>0 rows × 257 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [item_id, txt_embed_0, txt_embed_1, txt_embed_2, txt_embed_3, txt_embed_4, txt_embed_5, txt_embed_6, txt_embed_7, txt_embed_8, txt_embed_9, txt_embed_10, txt_embed_11, txt_embed_12, txt_embed_13, txt_embed_14, txt_embed_15, txt_embed_16, txt_embed_17, txt_embed_18, txt_embed_19, txt_embed_20, txt_embed_21, txt_embed_22, txt_embed_23, txt_embed_24, txt_embed_25, txt_embed_26, txt_embed_27, txt_embed_28, txt_embed_29, txt_embed_30, txt_embed_31, txt_embed_32, txt_embed_33, txt_embed_34, txt_embed_35, txt_embed_36, txt_embed_37, txt_embed_38, txt_embed_39, txt_embed_40, txt_embed_41, txt_embed_42, txt_embed_43, txt_embed_44, txt_embed_45, txt_embed_46, txt_embed_47, txt_embed_48, txt_embed_49, txt_embed_50, txt_embed_51, txt_embed_52, txt_embed_53, txt_embed_54, txt_embed_55, txt_embed_56, txt_embed_57, txt_embed_58, txt_embed_59, txt_embed_60, txt_embed_61, txt_embed_62, txt_embed_63, txt_embed_64, txt_embed_65, txt_embed_66, txt_embed_67, txt_embed_68, txt_embed_69, txt_embed_70, txt_embed_71, txt_embed_72, txt_embed_73, txt_embed_74, txt_embed_75, txt_embed_76, txt_embed_77, txt_embed_78, txt_embed_79, txt_embed_80, txt_embed_81, txt_embed_82, txt_embed_83, txt_embed_84, txt_embed_85, txt_embed_86, txt_embed_87, txt_embed_88, txt_embed_89, txt_embed_90, txt_embed_91, txt_embed_92, txt_embed_93, txt_embed_94, txt_embed_95, txt_embed_96, txt_embed_97, txt_embed_98, ...]\n",
              "Index: []\n",
              "\n",
              "[0 rows x 257 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 603
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ruHr7uZTqtEn",
        "colab_type": "code",
        "outputId": "4f305ae5-4c51-46f9-ba4f-fcc060eec792",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 898
        }
      },
      "source": [
        "train_full_df"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>sim</th>\n",
              "      <th>phase</th>\n",
              "      <th>label</th>\n",
              "      <th>sim2int_1</th>\n",
              "      <th>sim2int_2</th>\n",
              "      <th>sim2int_3</th>\n",
              "      <th>user_hist_seq</th>\n",
              "      <th>exp_sim</th>\n",
              "      <th>age_level</th>\n",
              "      <th>gender</th>\n",
              "      <th>city_level</th>\n",
              "      <th>txt_embed_0</th>\n",
              "      <th>txt_embed_1</th>\n",
              "      <th>txt_embed_2</th>\n",
              "      <th>txt_embed_3</th>\n",
              "      <th>txt_embed_4</th>\n",
              "      <th>txt_embed_5</th>\n",
              "      <th>txt_embed_6</th>\n",
              "      <th>txt_embed_7</th>\n",
              "      <th>txt_embed_8</th>\n",
              "      <th>txt_embed_9</th>\n",
              "      <th>txt_embed_10</th>\n",
              "      <th>txt_embed_11</th>\n",
              "      <th>txt_embed_12</th>\n",
              "      <th>txt_embed_13</th>\n",
              "      <th>txt_embed_14</th>\n",
              "      <th>txt_embed_15</th>\n",
              "      <th>txt_embed_16</th>\n",
              "      <th>txt_embed_17</th>\n",
              "      <th>txt_embed_18</th>\n",
              "      <th>txt_embed_19</th>\n",
              "      <th>txt_embed_20</th>\n",
              "      <th>txt_embed_21</th>\n",
              "      <th>txt_embed_22</th>\n",
              "      <th>txt_embed_23</th>\n",
              "      <th>txt_embed_24</th>\n",
              "      <th>txt_embed_25</th>\n",
              "      <th>txt_embed_26</th>\n",
              "      <th>...</th>\n",
              "      <th>img_embed_88</th>\n",
              "      <th>img_embed_89</th>\n",
              "      <th>img_embed_90</th>\n",
              "      <th>img_embed_91</th>\n",
              "      <th>img_embed_92</th>\n",
              "      <th>img_embed_93</th>\n",
              "      <th>img_embed_94</th>\n",
              "      <th>img_embed_95</th>\n",
              "      <th>img_embed_96</th>\n",
              "      <th>img_embed_97</th>\n",
              "      <th>img_embed_98</th>\n",
              "      <th>img_embed_99</th>\n",
              "      <th>img_embed_100</th>\n",
              "      <th>img_embed_101</th>\n",
              "      <th>img_embed_102</th>\n",
              "      <th>img_embed_103</th>\n",
              "      <th>img_embed_104</th>\n",
              "      <th>img_embed_105</th>\n",
              "      <th>img_embed_106</th>\n",
              "      <th>img_embed_107</th>\n",
              "      <th>img_embed_108</th>\n",
              "      <th>img_embed_109</th>\n",
              "      <th>img_embed_110</th>\n",
              "      <th>img_embed_111</th>\n",
              "      <th>img_embed_112</th>\n",
              "      <th>img_embed_113</th>\n",
              "      <th>img_embed_114</th>\n",
              "      <th>img_embed_115</th>\n",
              "      <th>img_embed_116</th>\n",
              "      <th>img_embed_117</th>\n",
              "      <th>img_embed_118</th>\n",
              "      <th>img_embed_119</th>\n",
              "      <th>img_embed_120</th>\n",
              "      <th>img_embed_121</th>\n",
              "      <th>img_embed_122</th>\n",
              "      <th>img_embed_123</th>\n",
              "      <th>img_embed_124</th>\n",
              "      <th>img_embed_125</th>\n",
              "      <th>img_embed_126</th>\n",
              "      <th>img_embed_127</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>14424</td>\n",
              "      <td>12864</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.007220</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>[14214, 87826, 12061]</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>2</td>\n",
              "      <td>0.050339</td>\n",
              "      <td>0.063011</td>\n",
              "      <td>0.001355</td>\n",
              "      <td>0.094281</td>\n",
              "      <td>0.003678</td>\n",
              "      <td>-0.065749</td>\n",
              "      <td>-0.100667</td>\n",
              "      <td>-0.044035</td>\n",
              "      <td>-0.096732</td>\n",
              "      <td>0.088626</td>\n",
              "      <td>-0.054877</td>\n",
              "      <td>-0.066139</td>\n",
              "      <td>-0.026766</td>\n",
              "      <td>0.191251</td>\n",
              "      <td>0.021392</td>\n",
              "      <td>0.060670</td>\n",
              "      <td>0.036981</td>\n",
              "      <td>-0.103107</td>\n",
              "      <td>0.144845</td>\n",
              "      <td>-0.185451</td>\n",
              "      <td>0.109096</td>\n",
              "      <td>0.039901</td>\n",
              "      <td>0.049029</td>\n",
              "      <td>-0.000932</td>\n",
              "      <td>0.048655</td>\n",
              "      <td>-0.107512</td>\n",
              "      <td>0.077604</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.021497</td>\n",
              "      <td>0.004136</td>\n",
              "      <td>0.089071</td>\n",
              "      <td>0.011986</td>\n",
              "      <td>0.054404</td>\n",
              "      <td>-0.016575</td>\n",
              "      <td>0.087828</td>\n",
              "      <td>-0.151418</td>\n",
              "      <td>0.082615</td>\n",
              "      <td>0.193288</td>\n",
              "      <td>-0.126818</td>\n",
              "      <td>0.020401</td>\n",
              "      <td>0.007372</td>\n",
              "      <td>0.075740</td>\n",
              "      <td>-0.050727</td>\n",
              "      <td>0.168828</td>\n",
              "      <td>0.080607</td>\n",
              "      <td>0.089385</td>\n",
              "      <td>-0.120385</td>\n",
              "      <td>-0.017214</td>\n",
              "      <td>-0.031976</td>\n",
              "      <td>-0.090040</td>\n",
              "      <td>-0.067625</td>\n",
              "      <td>-0.061418</td>\n",
              "      <td>0.009722</td>\n",
              "      <td>-0.103590</td>\n",
              "      <td>-0.134794</td>\n",
              "      <td>-0.096734</td>\n",
              "      <td>0.021450</td>\n",
              "      <td>-0.201373</td>\n",
              "      <td>0.096034</td>\n",
              "      <td>-0.043509</td>\n",
              "      <td>-0.109100</td>\n",
              "      <td>-0.035549</td>\n",
              "      <td>0.071108</td>\n",
              "      <td>0.047933</td>\n",
              "      <td>0.045492</td>\n",
              "      <td>0.055835</td>\n",
              "      <td>0.017490</td>\n",
              "      <td>-0.046556</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>32409</td>\n",
              "      <td>40023</td>\n",
              "      <td>0.275235</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>[64527, 2070, 41377, 78544, 14354, 18123, 1939...</td>\n",
              "      <td>1.316840</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.098695</td>\n",
              "      <td>-0.138965</td>\n",
              "      <td>-0.006845</td>\n",
              "      <td>-0.112237</td>\n",
              "      <td>0.000431</td>\n",
              "      <td>-0.075559</td>\n",
              "      <td>-0.094758</td>\n",
              "      <td>0.051002</td>\n",
              "      <td>-0.154028</td>\n",
              "      <td>0.064995</td>\n",
              "      <td>-0.005862</td>\n",
              "      <td>-0.206978</td>\n",
              "      <td>0.132746</td>\n",
              "      <td>0.044956</td>\n",
              "      <td>-0.100415</td>\n",
              "      <td>-0.088500</td>\n",
              "      <td>0.186380</td>\n",
              "      <td>0.046490</td>\n",
              "      <td>0.077116</td>\n",
              "      <td>-0.122887</td>\n",
              "      <td>0.017779</td>\n",
              "      <td>-0.143258</td>\n",
              "      <td>0.116417</td>\n",
              "      <td>-0.031739</td>\n",
              "      <td>-0.042911</td>\n",
              "      <td>0.042394</td>\n",
              "      <td>0.037456</td>\n",
              "      <td>...</td>\n",
              "      <td>0.086464</td>\n",
              "      <td>-0.103193</td>\n",
              "      <td>0.005990</td>\n",
              "      <td>0.063726</td>\n",
              "      <td>0.099887</td>\n",
              "      <td>-0.027103</td>\n",
              "      <td>0.161955</td>\n",
              "      <td>-0.028152</td>\n",
              "      <td>0.054751</td>\n",
              "      <td>0.183797</td>\n",
              "      <td>0.059661</td>\n",
              "      <td>0.103201</td>\n",
              "      <td>0.009117</td>\n",
              "      <td>0.027371</td>\n",
              "      <td>-0.010199</td>\n",
              "      <td>0.040761</td>\n",
              "      <td>-0.109812</td>\n",
              "      <td>0.088687</td>\n",
              "      <td>-0.036146</td>\n",
              "      <td>-0.011691</td>\n",
              "      <td>-0.049090</td>\n",
              "      <td>-0.135415</td>\n",
              "      <td>-0.087552</td>\n",
              "      <td>0.137704</td>\n",
              "      <td>-0.052251</td>\n",
              "      <td>-0.098957</td>\n",
              "      <td>0.040960</td>\n",
              "      <td>-0.006156</td>\n",
              "      <td>-0.021575</td>\n",
              "      <td>-0.048475</td>\n",
              "      <td>-0.101719</td>\n",
              "      <td>-0.075510</td>\n",
              "      <td>-0.046287</td>\n",
              "      <td>-0.117926</td>\n",
              "      <td>-0.135006</td>\n",
              "      <td>-0.052367</td>\n",
              "      <td>0.028706</td>\n",
              "      <td>0.047204</td>\n",
              "      <td>0.128832</td>\n",
              "      <td>-0.150767</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1856</td>\n",
              "      <td>10586</td>\n",
              "      <td>0.440584</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>[116526, 112456, 114452, 4783, 13860, 115894, ...</td>\n",
              "      <td>1.553614</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>23345</td>\n",
              "      <td>115180</td>\n",
              "      <td>0.583911</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>[104406, 104391, 37588, 105313, 108584]</td>\n",
              "      <td>1.793037</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.089373</td>\n",
              "      <td>-0.089068</td>\n",
              "      <td>0.116407</td>\n",
              "      <td>-0.178398</td>\n",
              "      <td>-0.082297</td>\n",
              "      <td>0.121620</td>\n",
              "      <td>0.034608</td>\n",
              "      <td>-0.017106</td>\n",
              "      <td>-0.142611</td>\n",
              "      <td>-0.122160</td>\n",
              "      <td>0.065384</td>\n",
              "      <td>-0.032938</td>\n",
              "      <td>0.089338</td>\n",
              "      <td>-0.000112</td>\n",
              "      <td>0.184282</td>\n",
              "      <td>0.029080</td>\n",
              "      <td>-0.014107</td>\n",
              "      <td>-0.124556</td>\n",
              "      <td>0.001594</td>\n",
              "      <td>-0.131190</td>\n",
              "      <td>-0.091835</td>\n",
              "      <td>-0.077351</td>\n",
              "      <td>-0.018789</td>\n",
              "      <td>-0.137132</td>\n",
              "      <td>-0.085773</td>\n",
              "      <td>0.082186</td>\n",
              "      <td>0.049067</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.010620</td>\n",
              "      <td>0.036378</td>\n",
              "      <td>0.036658</td>\n",
              "      <td>0.131308</td>\n",
              "      <td>0.113225</td>\n",
              "      <td>0.020346</td>\n",
              "      <td>-0.047636</td>\n",
              "      <td>-0.023398</td>\n",
              "      <td>0.018227</td>\n",
              "      <td>0.003016</td>\n",
              "      <td>-0.019837</td>\n",
              "      <td>0.103800</td>\n",
              "      <td>-0.123560</td>\n",
              "      <td>0.104312</td>\n",
              "      <td>0.097441</td>\n",
              "      <td>0.216760</td>\n",
              "      <td>0.066797</td>\n",
              "      <td>0.102118</td>\n",
              "      <td>0.033074</td>\n",
              "      <td>0.032694</td>\n",
              "      <td>-0.093007</td>\n",
              "      <td>0.062818</td>\n",
              "      <td>0.033213</td>\n",
              "      <td>-0.002225</td>\n",
              "      <td>0.193781</td>\n",
              "      <td>-0.079944</td>\n",
              "      <td>-0.012528</td>\n",
              "      <td>-0.116176</td>\n",
              "      <td>-0.077974</td>\n",
              "      <td>0.000591</td>\n",
              "      <td>-0.128635</td>\n",
              "      <td>-0.063901</td>\n",
              "      <td>-0.143104</td>\n",
              "      <td>-0.072796</td>\n",
              "      <td>0.220878</td>\n",
              "      <td>-0.017072</td>\n",
              "      <td>-0.050830</td>\n",
              "      <td>0.135316</td>\n",
              "      <td>0.102427</td>\n",
              "      <td>0.083167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>15702</td>\n",
              "      <td>79248</td>\n",
              "      <td>0.628365</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>[21981, 38120, 3999, 71902, 95917, 77295, 2272...</td>\n",
              "      <td>1.874543</td>\n",
              "      <td>3</td>\n",
              "      <td>M</td>\n",
              "      <td>6</td>\n",
              "      <td>0.084199</td>\n",
              "      <td>-0.076415</td>\n",
              "      <td>0.033746</td>\n",
              "      <td>-0.078752</td>\n",
              "      <td>-0.112216</td>\n",
              "      <td>0.098239</td>\n",
              "      <td>-0.091744</td>\n",
              "      <td>0.042616</td>\n",
              "      <td>-0.124848</td>\n",
              "      <td>-0.013110</td>\n",
              "      <td>-0.087497</td>\n",
              "      <td>-0.007880</td>\n",
              "      <td>0.164622</td>\n",
              "      <td>0.102422</td>\n",
              "      <td>0.059614</td>\n",
              "      <td>0.016506</td>\n",
              "      <td>0.017285</td>\n",
              "      <td>-0.092297</td>\n",
              "      <td>0.075920</td>\n",
              "      <td>-0.154855</td>\n",
              "      <td>-0.062134</td>\n",
              "      <td>-0.063481</td>\n",
              "      <td>0.042790</td>\n",
              "      <td>-0.131777</td>\n",
              "      <td>-0.027754</td>\n",
              "      <td>-0.103419</td>\n",
              "      <td>0.029425</td>\n",
              "      <td>...</td>\n",
              "      <td>0.069242</td>\n",
              "      <td>0.091143</td>\n",
              "      <td>0.035595</td>\n",
              "      <td>0.145253</td>\n",
              "      <td>0.110003</td>\n",
              "      <td>0.127543</td>\n",
              "      <td>-0.028378</td>\n",
              "      <td>-0.076772</td>\n",
              "      <td>0.068369</td>\n",
              "      <td>0.002488</td>\n",
              "      <td>-0.088896</td>\n",
              "      <td>0.017048</td>\n",
              "      <td>-0.053271</td>\n",
              "      <td>0.020318</td>\n",
              "      <td>0.180372</td>\n",
              "      <td>0.140075</td>\n",
              "      <td>0.026973</td>\n",
              "      <td>0.048721</td>\n",
              "      <td>-0.014275</td>\n",
              "      <td>0.102945</td>\n",
              "      <td>-0.087145</td>\n",
              "      <td>-0.050039</td>\n",
              "      <td>0.103106</td>\n",
              "      <td>0.006494</td>\n",
              "      <td>0.118480</td>\n",
              "      <td>-0.053639</td>\n",
              "      <td>-0.002126</td>\n",
              "      <td>-0.157386</td>\n",
              "      <td>-0.016609</td>\n",
              "      <td>0.003238</td>\n",
              "      <td>-0.005557</td>\n",
              "      <td>-0.120067</td>\n",
              "      <td>-0.126147</td>\n",
              "      <td>-0.153005</td>\n",
              "      <td>0.070364</td>\n",
              "      <td>0.004528</td>\n",
              "      <td>-0.110039</td>\n",
              "      <td>0.117980</td>\n",
              "      <td>0.058233</td>\n",
              "      <td>0.082605</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106279</th>\n",
              "      <td>35183</td>\n",
              "      <td>30164</td>\n",
              "      <td>0.519306</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.004237</td>\n",
              "      <td>0.00433815</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>[9152, 81004, 113567, 33131, 53119, 99915, 516...</td>\n",
              "      <td>1.680860</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.062266</td>\n",
              "      <td>0.027254</td>\n",
              "      <td>0.059550</td>\n",
              "      <td>-0.085061</td>\n",
              "      <td>0.059283</td>\n",
              "      <td>0.021449</td>\n",
              "      <td>-0.167145</td>\n",
              "      <td>-0.001270</td>\n",
              "      <td>-0.136870</td>\n",
              "      <td>-0.034812</td>\n",
              "      <td>0.057730</td>\n",
              "      <td>-0.000957</td>\n",
              "      <td>0.143101</td>\n",
              "      <td>0.028884</td>\n",
              "      <td>-0.119305</td>\n",
              "      <td>0.055391</td>\n",
              "      <td>0.019070</td>\n",
              "      <td>-0.079872</td>\n",
              "      <td>-0.037845</td>\n",
              "      <td>-0.139282</td>\n",
              "      <td>0.032684</td>\n",
              "      <td>-0.112754</td>\n",
              "      <td>0.103798</td>\n",
              "      <td>-0.065695</td>\n",
              "      <td>-0.036879</td>\n",
              "      <td>0.060262</td>\n",
              "      <td>0.162024</td>\n",
              "      <td>...</td>\n",
              "      <td>0.019238</td>\n",
              "      <td>-0.037220</td>\n",
              "      <td>-0.070337</td>\n",
              "      <td>-0.101992</td>\n",
              "      <td>-0.053324</td>\n",
              "      <td>0.052889</td>\n",
              "      <td>0.169084</td>\n",
              "      <td>-0.056257</td>\n",
              "      <td>-0.038975</td>\n",
              "      <td>0.115468</td>\n",
              "      <td>0.167592</td>\n",
              "      <td>0.063401</td>\n",
              "      <td>-0.009475</td>\n",
              "      <td>0.082839</td>\n",
              "      <td>0.055547</td>\n",
              "      <td>0.005989</td>\n",
              "      <td>-0.134960</td>\n",
              "      <td>0.018439</td>\n",
              "      <td>0.069843</td>\n",
              "      <td>0.085548</td>\n",
              "      <td>-0.104415</td>\n",
              "      <td>-0.134789</td>\n",
              "      <td>0.054863</td>\n",
              "      <td>0.164916</td>\n",
              "      <td>0.005845</td>\n",
              "      <td>-0.203873</td>\n",
              "      <td>-0.007509</td>\n",
              "      <td>0.069139</td>\n",
              "      <td>0.155556</td>\n",
              "      <td>-0.042490</td>\n",
              "      <td>-0.045069</td>\n",
              "      <td>0.044553</td>\n",
              "      <td>-0.041489</td>\n",
              "      <td>-0.089197</td>\n",
              "      <td>-0.103221</td>\n",
              "      <td>0.028306</td>\n",
              "      <td>-0.007963</td>\n",
              "      <td>-0.011187</td>\n",
              "      <td>0.033972</td>\n",
              "      <td>-0.072674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106280</th>\n",
              "      <td>35183</td>\n",
              "      <td>30164</td>\n",
              "      <td>0.519306</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.004237</td>\n",
              "      <td>0.00433815</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>[9152, 81004, 113567, 33131, 53119, 99915, 516...</td>\n",
              "      <td>1.680860</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.062266</td>\n",
              "      <td>0.027254</td>\n",
              "      <td>0.059550</td>\n",
              "      <td>-0.085061</td>\n",
              "      <td>0.059283</td>\n",
              "      <td>0.021449</td>\n",
              "      <td>-0.167145</td>\n",
              "      <td>-0.001270</td>\n",
              "      <td>-0.136870</td>\n",
              "      <td>-0.034812</td>\n",
              "      <td>0.057730</td>\n",
              "      <td>-0.000957</td>\n",
              "      <td>0.143101</td>\n",
              "      <td>0.028884</td>\n",
              "      <td>-0.119305</td>\n",
              "      <td>0.055391</td>\n",
              "      <td>0.019070</td>\n",
              "      <td>-0.079872</td>\n",
              "      <td>-0.037845</td>\n",
              "      <td>-0.139282</td>\n",
              "      <td>0.032684</td>\n",
              "      <td>-0.112754</td>\n",
              "      <td>0.103798</td>\n",
              "      <td>-0.065695</td>\n",
              "      <td>-0.036879</td>\n",
              "      <td>0.060262</td>\n",
              "      <td>0.162024</td>\n",
              "      <td>...</td>\n",
              "      <td>0.019238</td>\n",
              "      <td>-0.037220</td>\n",
              "      <td>-0.070337</td>\n",
              "      <td>-0.101992</td>\n",
              "      <td>-0.053324</td>\n",
              "      <td>0.052889</td>\n",
              "      <td>0.169084</td>\n",
              "      <td>-0.056257</td>\n",
              "      <td>-0.038975</td>\n",
              "      <td>0.115468</td>\n",
              "      <td>0.167592</td>\n",
              "      <td>0.063401</td>\n",
              "      <td>-0.009475</td>\n",
              "      <td>0.082839</td>\n",
              "      <td>0.055547</td>\n",
              "      <td>0.005989</td>\n",
              "      <td>-0.134960</td>\n",
              "      <td>0.018439</td>\n",
              "      <td>0.069843</td>\n",
              "      <td>0.085548</td>\n",
              "      <td>-0.104415</td>\n",
              "      <td>-0.134789</td>\n",
              "      <td>0.054863</td>\n",
              "      <td>0.164916</td>\n",
              "      <td>0.005845</td>\n",
              "      <td>-0.203873</td>\n",
              "      <td>-0.007509</td>\n",
              "      <td>0.069139</td>\n",
              "      <td>0.155556</td>\n",
              "      <td>-0.042490</td>\n",
              "      <td>-0.045069</td>\n",
              "      <td>0.044553</td>\n",
              "      <td>-0.041489</td>\n",
              "      <td>-0.089197</td>\n",
              "      <td>-0.103221</td>\n",
              "      <td>0.028306</td>\n",
              "      <td>-0.007963</td>\n",
              "      <td>-0.011187</td>\n",
              "      <td>0.033972</td>\n",
              "      <td>-0.072674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106281</th>\n",
              "      <td>35183</td>\n",
              "      <td>30164</td>\n",
              "      <td>0.519306</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.004237</td>\n",
              "      <td>0.00433815</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>[9152, 81004, 113567, 33131, 53119, 99915, 516...</td>\n",
              "      <td>1.680860</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.062266</td>\n",
              "      <td>0.027254</td>\n",
              "      <td>0.059550</td>\n",
              "      <td>-0.085061</td>\n",
              "      <td>0.059283</td>\n",
              "      <td>0.021449</td>\n",
              "      <td>-0.167145</td>\n",
              "      <td>-0.001270</td>\n",
              "      <td>-0.136870</td>\n",
              "      <td>-0.034812</td>\n",
              "      <td>0.057730</td>\n",
              "      <td>-0.000957</td>\n",
              "      <td>0.143101</td>\n",
              "      <td>0.028884</td>\n",
              "      <td>-0.119305</td>\n",
              "      <td>0.055391</td>\n",
              "      <td>0.019070</td>\n",
              "      <td>-0.079872</td>\n",
              "      <td>-0.037845</td>\n",
              "      <td>-0.139282</td>\n",
              "      <td>0.032684</td>\n",
              "      <td>-0.112754</td>\n",
              "      <td>0.103798</td>\n",
              "      <td>-0.065695</td>\n",
              "      <td>-0.036879</td>\n",
              "      <td>0.060262</td>\n",
              "      <td>0.162024</td>\n",
              "      <td>...</td>\n",
              "      <td>0.019238</td>\n",
              "      <td>-0.037220</td>\n",
              "      <td>-0.070337</td>\n",
              "      <td>-0.101992</td>\n",
              "      <td>-0.053324</td>\n",
              "      <td>0.052889</td>\n",
              "      <td>0.169084</td>\n",
              "      <td>-0.056257</td>\n",
              "      <td>-0.038975</td>\n",
              "      <td>0.115468</td>\n",
              "      <td>0.167592</td>\n",
              "      <td>0.063401</td>\n",
              "      <td>-0.009475</td>\n",
              "      <td>0.082839</td>\n",
              "      <td>0.055547</td>\n",
              "      <td>0.005989</td>\n",
              "      <td>-0.134960</td>\n",
              "      <td>0.018439</td>\n",
              "      <td>0.069843</td>\n",
              "      <td>0.085548</td>\n",
              "      <td>-0.104415</td>\n",
              "      <td>-0.134789</td>\n",
              "      <td>0.054863</td>\n",
              "      <td>0.164916</td>\n",
              "      <td>0.005845</td>\n",
              "      <td>-0.203873</td>\n",
              "      <td>-0.007509</td>\n",
              "      <td>0.069139</td>\n",
              "      <td>0.155556</td>\n",
              "      <td>-0.042490</td>\n",
              "      <td>-0.045069</td>\n",
              "      <td>0.044553</td>\n",
              "      <td>-0.041489</td>\n",
              "      <td>-0.089197</td>\n",
              "      <td>-0.103221</td>\n",
              "      <td>0.028306</td>\n",
              "      <td>-0.007963</td>\n",
              "      <td>-0.011187</td>\n",
              "      <td>0.033972</td>\n",
              "      <td>-0.072674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106282</th>\n",
              "      <td>35183</td>\n",
              "      <td>30164</td>\n",
              "      <td>0.519306</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.004237</td>\n",
              "      <td>0.00433815</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>[9152, 81004, 113567, 33131, 53119, 99915, 516...</td>\n",
              "      <td>1.680860</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.062266</td>\n",
              "      <td>0.027254</td>\n",
              "      <td>0.059550</td>\n",
              "      <td>-0.085061</td>\n",
              "      <td>0.059283</td>\n",
              "      <td>0.021449</td>\n",
              "      <td>-0.167145</td>\n",
              "      <td>-0.001270</td>\n",
              "      <td>-0.136870</td>\n",
              "      <td>-0.034812</td>\n",
              "      <td>0.057730</td>\n",
              "      <td>-0.000957</td>\n",
              "      <td>0.143101</td>\n",
              "      <td>0.028884</td>\n",
              "      <td>-0.119305</td>\n",
              "      <td>0.055391</td>\n",
              "      <td>0.019070</td>\n",
              "      <td>-0.079872</td>\n",
              "      <td>-0.037845</td>\n",
              "      <td>-0.139282</td>\n",
              "      <td>0.032684</td>\n",
              "      <td>-0.112754</td>\n",
              "      <td>0.103798</td>\n",
              "      <td>-0.065695</td>\n",
              "      <td>-0.036879</td>\n",
              "      <td>0.060262</td>\n",
              "      <td>0.162024</td>\n",
              "      <td>...</td>\n",
              "      <td>0.019238</td>\n",
              "      <td>-0.037220</td>\n",
              "      <td>-0.070337</td>\n",
              "      <td>-0.101992</td>\n",
              "      <td>-0.053324</td>\n",
              "      <td>0.052889</td>\n",
              "      <td>0.169084</td>\n",
              "      <td>-0.056257</td>\n",
              "      <td>-0.038975</td>\n",
              "      <td>0.115468</td>\n",
              "      <td>0.167592</td>\n",
              "      <td>0.063401</td>\n",
              "      <td>-0.009475</td>\n",
              "      <td>0.082839</td>\n",
              "      <td>0.055547</td>\n",
              "      <td>0.005989</td>\n",
              "      <td>-0.134960</td>\n",
              "      <td>0.018439</td>\n",
              "      <td>0.069843</td>\n",
              "      <td>0.085548</td>\n",
              "      <td>-0.104415</td>\n",
              "      <td>-0.134789</td>\n",
              "      <td>0.054863</td>\n",
              "      <td>0.164916</td>\n",
              "      <td>0.005845</td>\n",
              "      <td>-0.203873</td>\n",
              "      <td>-0.007509</td>\n",
              "      <td>0.069139</td>\n",
              "      <td>0.155556</td>\n",
              "      <td>-0.042490</td>\n",
              "      <td>-0.045069</td>\n",
              "      <td>0.044553</td>\n",
              "      <td>-0.041489</td>\n",
              "      <td>-0.089197</td>\n",
              "      <td>-0.103221</td>\n",
              "      <td>0.028306</td>\n",
              "      <td>-0.007963</td>\n",
              "      <td>-0.011187</td>\n",
              "      <td>0.033972</td>\n",
              "      <td>-0.072674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106283</th>\n",
              "      <td>35183</td>\n",
              "      <td>30164</td>\n",
              "      <td>0.519306</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.004237</td>\n",
              "      <td>0.00433815</td>\n",
              "      <td>0.003363</td>\n",
              "      <td>[9152, 81004, 113567, 33131, 53119, 99915, 516...</td>\n",
              "      <td>1.680860</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.062266</td>\n",
              "      <td>0.027254</td>\n",
              "      <td>0.059550</td>\n",
              "      <td>-0.085061</td>\n",
              "      <td>0.059283</td>\n",
              "      <td>0.021449</td>\n",
              "      <td>-0.167145</td>\n",
              "      <td>-0.001270</td>\n",
              "      <td>-0.136870</td>\n",
              "      <td>-0.034812</td>\n",
              "      <td>0.057730</td>\n",
              "      <td>-0.000957</td>\n",
              "      <td>0.143101</td>\n",
              "      <td>0.028884</td>\n",
              "      <td>-0.119305</td>\n",
              "      <td>0.055391</td>\n",
              "      <td>0.019070</td>\n",
              "      <td>-0.079872</td>\n",
              "      <td>-0.037845</td>\n",
              "      <td>-0.139282</td>\n",
              "      <td>0.032684</td>\n",
              "      <td>-0.112754</td>\n",
              "      <td>0.103798</td>\n",
              "      <td>-0.065695</td>\n",
              "      <td>-0.036879</td>\n",
              "      <td>0.060262</td>\n",
              "      <td>0.162024</td>\n",
              "      <td>...</td>\n",
              "      <td>0.019238</td>\n",
              "      <td>-0.037220</td>\n",
              "      <td>-0.070337</td>\n",
              "      <td>-0.101992</td>\n",
              "      <td>-0.053324</td>\n",
              "      <td>0.052889</td>\n",
              "      <td>0.169084</td>\n",
              "      <td>-0.056257</td>\n",
              "      <td>-0.038975</td>\n",
              "      <td>0.115468</td>\n",
              "      <td>0.167592</td>\n",
              "      <td>0.063401</td>\n",
              "      <td>-0.009475</td>\n",
              "      <td>0.082839</td>\n",
              "      <td>0.055547</td>\n",
              "      <td>0.005989</td>\n",
              "      <td>-0.134960</td>\n",
              "      <td>0.018439</td>\n",
              "      <td>0.069843</td>\n",
              "      <td>0.085548</td>\n",
              "      <td>-0.104415</td>\n",
              "      <td>-0.134789</td>\n",
              "      <td>0.054863</td>\n",
              "      <td>0.164916</td>\n",
              "      <td>0.005845</td>\n",
              "      <td>-0.203873</td>\n",
              "      <td>-0.007509</td>\n",
              "      <td>0.069139</td>\n",
              "      <td>0.155556</td>\n",
              "      <td>-0.042490</td>\n",
              "      <td>-0.045069</td>\n",
              "      <td>0.044553</td>\n",
              "      <td>-0.041489</td>\n",
              "      <td>-0.089197</td>\n",
              "      <td>-0.103221</td>\n",
              "      <td>0.028306</td>\n",
              "      <td>-0.007963</td>\n",
              "      <td>-0.011187</td>\n",
              "      <td>0.033972</td>\n",
              "      <td>-0.072674</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>106284 rows × 269 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        user_id  item_id       sim  ...  img_embed_125  img_embed_126  img_embed_127\n",
              "0         14424    12864  0.000000  ...       0.055835       0.017490      -0.046556\n",
              "1         32409    40023  0.275235  ...       0.047204       0.128832      -0.150767\n",
              "2          1856    10586  0.440584  ...       0.000000       0.000000       0.000000\n",
              "3         23345   115180  0.583911  ...       0.135316       0.102427       0.083167\n",
              "4         15702    79248  0.628365  ...       0.117980       0.058233       0.082605\n",
              "...         ...      ...       ...  ...            ...            ...            ...\n",
              "106279    35183    30164  0.519306  ...      -0.011187       0.033972      -0.072674\n",
              "106280    35183    30164  0.519306  ...      -0.011187       0.033972      -0.072674\n",
              "106281    35183    30164  0.519306  ...      -0.011187       0.033972      -0.072674\n",
              "106282    35183    30164  0.519306  ...      -0.011187       0.033972      -0.072674\n",
              "106283    35183    30164  0.519306  ...      -0.011187       0.033972      -0.072674\n",
              "\n",
              "[106284 rows x 269 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 605
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1tSxA3xfnZmY",
        "colab_type": "code",
        "outputId": "f492e194-fd78-441b-dd2f-7618681214a1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        }
      },
      "source": [
        "train_full_df['user_hist_seq'] = train_full_df['user_hist_seq'].apply(lambda seq: [item_dict[str(x)] for x in seq])"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-597-7d28435a3c04>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain_full_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'user_hist_seq'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_full_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'user_hist_seq'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mseq\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mitem_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mseq\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, func, convert_dtype, args, **kwds)\u001b[0m\n\u001b[1;32m   3846\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3847\u001b[0m                 \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobject\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3848\u001b[0;31m                 \u001b[0mmapped\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_infer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconvert\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconvert_dtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3849\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3850\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmapped\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmapped\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/lib.pyx\u001b[0m in \u001b[0;36mpandas._libs.lib.map_infer\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32m<ipython-input-597-7d28435a3c04>\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(seq)\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain_full_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'user_hist_seq'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_full_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'user_hist_seq'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mseq\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mitem_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mx\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mseq\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m: 'NoneType' object is not iterable"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fp9epKN6mUdv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def generate_din_feature_columns(data, sparse_features, dense_features):\n",
        "    sparse_feature_columns = [SparseFeat(feat, vocabulary_size=data[feat].nunique(), embedding_dim=EMBED_DIM)\n",
        "                              for i, feat in enumerate(sparse_features)]\n",
        "    dense_feature_columns = [DenseFeat(feat, 1, ) for feat in dense_features]\n",
        "\n",
        "    var_feature_columns = [VarLenSparseFeat(SparseFeat('hist_item_id', vocabulary_size=data['item_id'].nunique(),embedding_dim=EMBED_DIM,embedding_name='item_id'), maxlen=10)]\n",
        "                 \n",
        "    # DNN side\n",
        "    dnn_feature_columns = sparse_feature_columns + dense_feature_columns\n",
        "    # FM side\n",
        "    linear_feature_columns = sparse_feature_columns + dense_feature_columns\n",
        "    # all feature names\n",
        "    feature_names = get_feature_names(linear_feature_columns + dnn_feature_columns)\n",
        "\n",
        "    return feature_names, linear_feature_columns, dnn_feature_columns"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7EtCdZ6KqaoN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "feature_names, linear_feature_columns, dnn_feature_columns = generate_feature_columns(train_full_df, sparse_feat, dense_feat)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g76kUBccqdsr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "train_input = {name: train_full_df[name].values for name in feature_names}\n",
        "train_label = train_full_df['label'].values"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wWErgW_DpgNr",
        "colab_type": "text"
      },
      "source": [
        "###### val"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8G7RUs8o-Ena",
        "colab_type": "code",
        "outputId": "6a8b5a66-32d2-4ec7-c163-d9e87eb7a66a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "val_input = organize_recall_item_features(dfm_val_df, processed_user_feat_df, processed_item_feat_df, \n",
        "                                feat_lbe_dict, sparse_feat, dense_feat, feature_names)\n",
        "val_label = dfm_val_df['label'].values"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WdYKwxnjmDwX",
        "colab_type": "text"
      },
      "source": [
        "##### train model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3KXs_PbSR8l3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model = build_model(linear_feature_columns, dnn_feature_columns)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Up699lZ7Rzem",
        "colab_type": "code",
        "outputId": "4087803a-b8fc-49ec-84d7-cad6688631fa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 173
        }
      },
      "source": [
        "EPOCH = 3\n",
        "model.fit(train_input, train_label, batch_size=BATCH_SIZE, epochs=EPOCH,\n",
        "            verbose=1, validation_data=(val_input, val_label), class_weight={0: 1.0, 1: 30.0}) # validation_split=0.05, "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 105800 samples, validate on 44459 samples\n",
            "Epoch 1/3\n",
            "105800/105800 [==============================] - 12s 116us/sample - loss: 1.1325 - binary_crossentropy: 0.6011 - val_loss: 0.3459 - val_binary_crossentropy: 0.3444\n",
            "Epoch 2/3\n",
            "105800/105800 [==============================] - 8s 77us/sample - loss: 0.8337 - binary_crossentropy: 0.4224 - val_loss: 0.1092 - val_binary_crossentropy: 0.1021\n",
            "Epoch 3/3\n",
            "105800/105800 [==============================] - 8s 77us/sample - loss: 0.3213 - binary_crossentropy: 0.1772 - val_loss: 0.0797 - val_binary_crossentropy: 0.0684\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7ff37c194fd0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 555
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "docDIZ079SOr",
        "colab_type": "code",
        "outputId": "2b28a4d8-7517-4dcf-9ba4-dbd59b978a32",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        }
      },
      "source": [
        "pred_ans = model.predict(val_input, batch_size=BATCH_SIZE)\n",
        "print(\"test LogLoss\", round(log_loss(val_label, pred_ans), 4))\n",
        "print(\"test AUC\", round(roc_auc_score(val_label, pred_ans), 4))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "test LogLoss 0.0684\n",
            "test AUC 0.7072\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FsQrcEerL8H2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "dfm_val_df['prob'] = pred_ans"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aVMqMXKFmPZE",
        "colab_type": "text"
      },
      "source": [
        "#### infer"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zhGfX-BNmTwI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def infer_process(all_infer_history_df, phase):\n",
        "  target_infer_user_df = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(phase), header=None, \n",
        "                                   names=['user_id', 'time'])  \n",
        "  # re-train item-cf\n",
        "  item_sim_list, user_item_dict = get_time_dir_aware_sim_item(all_infer_history_df, 'user_id', 'item_id') \n",
        "\n",
        "  infer_recall_recom_df = get_recall_results(item_sim_list, user_item_dict, phase, \n",
        "                                       target_user_ids=target_infer_user_df['user_id'].unique())\n",
        "  \n",
        "  infer_recall_recom_df = sim_process(infer_recall_recom_df)\n",
        "\n",
        "  infer_input = organize_recall_item_features(infer_recall_recom_df, processed_user_feat_df, processed_item_feat_df, \n",
        "                                feat_lbe_dict, sparse_feat, dense_feat, feature_names)\n",
        "  \n",
        "  return infer_recall_recom_df, infer_input"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cygWJSXhnFV_",
        "colab_type": "code",
        "outputId": "c4102c18-d0aa-40c3-c780-f70c60d790ea",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "infer_recall_recom_df, infer_input = infer_process(click_train.append(click_test), c)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "\n",
            "  0%|          | 0/16910 [00:00<?, ?it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  0%|          | 29/16910 [00:00<00:59, 285.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  0%|          | 68/16910 [00:00<00:54, 308.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|          | 111/16910 [00:00<00:50, 333.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|          | 158/16910 [00:00<00:46, 363.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|          | 189/16910 [00:00<00:59, 283.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|▏         | 217/16910 [00:00<01:02, 267.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|▏         | 249/16910 [00:00<01:04, 259.85it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 283/16910 [00:00<00:59, 279.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 318/16910 [00:01<00:56, 293.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 348/16910 [00:01<00:57, 288.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 378/16910 [00:01<01:06, 250.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 413/16910 [00:01<01:01, 268.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  3%|▎         | 456/16910 [00:01<00:57, 283.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  3%|▎         | 486/16910 [00:01<01:01, 268.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  3%|▎         | 520/16910 [00:01<00:57, 285.98it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  3%|▎         | 563/16910 [00:01<00:51, 314.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▎         | 596/16910 [00:02<00:59, 274.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▍         | 647/16910 [00:02<00:51, 316.69it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▍         | 683/16910 [00:02<00:58, 279.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▍         | 739/16910 [00:02<00:49, 325.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  5%|▍         | 777/16910 [00:02<01:02, 259.15it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  5%|▍         | 823/16910 [00:02<00:54, 295.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  5%|▌         | 873/16910 [00:02<00:48, 329.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  5%|▌         | 912/16910 [00:03<00:56, 285.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▌         | 946/16910 [00:03<00:56, 280.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▌         | 997/16910 [00:03<00:49, 323.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▌         | 1034/16910 [00:03<00:50, 314.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▋         | 1069/16910 [00:03<00:53, 294.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 1101/16910 [00:03<00:54, 292.70it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 1133/16910 [00:03<00:54, 289.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 1167/16910 [00:03<00:52, 299.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 1198/16910 [00:04<01:10, 222.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 1239/16910 [00:04<01:03, 248.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 1268/16910 [00:04<01:02, 251.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 1301/16910 [00:04<01:00, 258.60it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 1329/16910 [00:04<01:14, 209.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 1353/16910 [00:04<01:23, 186.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 1386/16910 [00:04<01:17, 201.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 1417/16910 [00:04<01:10, 221.11it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▊         | 1442/16910 [00:05<01:09, 221.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▊         | 1466/16910 [00:05<01:09, 221.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▉         | 1490/16910 [00:05<01:09, 223.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▉         | 1519/16910 [00:05<01:06, 231.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▉         | 1551/16910 [00:05<01:01, 250.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▉         | 1605/16910 [00:05<00:51, 298.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|▉         | 1640/16910 [00:05<00:52, 288.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|▉         | 1674/16910 [00:05<00:50, 301.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|█         | 1707/16910 [00:06<01:11, 213.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|█         | 1737/16910 [00:06<01:10, 215.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|█         | 1763/16910 [00:06<01:14, 204.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█         | 1801/16910 [00:06<01:03, 236.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█         | 1829/16910 [00:06<01:02, 240.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█         | 1866/16910 [00:06<00:56, 267.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█         | 1896/16910 [00:06<01:11, 210.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█▏        | 1921/16910 [00:07<01:25, 174.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█▏        | 1943/16910 [00:07<01:23, 179.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 1970/16910 [00:07<01:15, 198.03it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 1996/16910 [00:07<01:11, 208.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 2019/16910 [00:07<01:12, 205.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 2060/16910 [00:07<01:02, 238.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 2105/16910 [00:07<00:56, 259.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 2134/16910 [00:07<01:03, 233.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 2160/16910 [00:08<01:09, 211.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 2184/16910 [00:08<01:09, 211.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 2207/16910 [00:08<01:17, 190.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 2235/16910 [00:08<01:12, 202.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 2259/16910 [00:08<01:10, 209.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▎        | 2288/16910 [00:08<01:04, 225.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▎        | 2312/16910 [00:08<01:11, 202.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 2339/16910 [00:08<01:08, 212.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 2362/16910 [00:09<01:15, 191.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 2393/16910 [00:09<01:07, 216.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 2434/16910 [00:09<00:57, 251.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▍        | 2463/16910 [00:09<01:08, 212.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▍        | 2488/16910 [00:09<01:24, 170.85it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▍        | 2519/16910 [00:09<01:13, 196.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▌        | 2558/16910 [00:09<01:03, 227.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▌        | 2586/16910 [00:10<01:07, 210.69it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▌        | 2617/16910 [00:10<01:01, 231.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▌        | 2644/16910 [00:10<01:01, 232.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▌        | 2670/16910 [00:10<01:02, 226.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▌        | 2708/16910 [00:10<00:55, 256.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▌        | 2736/16910 [00:10<00:59, 237.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▋        | 2782/16910 [00:10<00:51, 273.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 2817/16910 [00:10<00:48, 292.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 2849/16910 [00:11<00:48, 287.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 2880/16910 [00:11<00:50, 277.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 2910/16910 [00:11<00:58, 240.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 2938/16910 [00:11<01:01, 228.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 2963/16910 [00:11<01:02, 223.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 3012/16910 [00:11<00:52, 265.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 3043/16910 [00:11<01:00, 230.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 3092/16910 [00:11<00:50, 272.79it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 3126/16910 [00:12<01:00, 227.05it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▊        | 3154/16910 [00:12<01:10, 196.13it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3179/16910 [00:12<01:10, 194.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3203/16910 [00:12<01:09, 198.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3233/16910 [00:12<01:02, 217.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3257/16910 [00:12<01:02, 218.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 3292/16910 [00:12<00:55, 245.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 3319/16910 [00:12<00:54, 250.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 3346/16910 [00:13<00:55, 243.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 3375/16910 [00:13<00:53, 255.05it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|██        | 3409/16910 [00:13<00:50, 268.66it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|██        | 3444/16910 [00:13<00:50, 267.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3472/16910 [00:13<00:53, 250.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3498/16910 [00:13<01:01, 216.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3532/16910 [00:13<00:56, 236.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██        | 3573/16910 [00:13<00:51, 260.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██▏       | 3601/16910 [00:14<01:09, 192.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██▏       | 3630/16910 [00:14<01:03, 207.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3654/16910 [00:14<01:10, 188.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3691/16910 [00:14<01:04, 205.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3734/16910 [00:14<00:54, 240.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3762/16910 [00:14<01:00, 217.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 3787/16910 [00:15<01:01, 214.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3811/16910 [00:15<00:59, 220.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3835/16910 [00:15<01:05, 199.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3868/16910 [00:15<01:01, 211.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3899/16910 [00:15<00:55, 232.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3924/16910 [00:15<00:56, 229.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 3956/16910 [00:15<00:51, 250.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▎       | 3985/16910 [00:15<00:49, 261.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4028/16910 [00:15<00:43, 295.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4060/16910 [00:16<00:58, 219.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4087/16910 [00:16<01:09, 183.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4110/16910 [00:16<01:14, 170.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 4131/16910 [00:16<01:28, 145.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 4154/16910 [00:16<01:18, 162.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 4173/16910 [00:16<01:17, 164.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 4212/16910 [00:17<01:04, 197.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▌       | 4236/16910 [00:17<01:01, 207.03it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▌       | 4272/16910 [00:17<00:57, 218.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4323/16910 [00:17<00:47, 263.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4356/16910 [00:17<00:45, 278.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4390/16910 [00:17<00:42, 294.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 4423/16910 [00:17<00:45, 275.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▋       | 4454/16910 [00:17<00:49, 251.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4489/16910 [00:18<00:57, 214.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4521/16910 [00:18<00:52, 236.05it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4560/16910 [00:18<00:46, 267.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4590/16910 [00:18<00:44, 274.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4620/16910 [00:18<00:46, 263.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 4649/16910 [00:18<00:45, 270.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4688/16910 [00:18<00:41, 296.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4720/16910 [00:18<00:49, 247.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4758/16910 [00:18<00:44, 274.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4789/16910 [00:19<00:44, 269.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 4818/16910 [00:19<00:52, 228.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▊       | 4848/16910 [00:19<00:49, 245.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4875/16910 [00:19<00:50, 240.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4901/16910 [00:19<00:51, 231.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4945/16910 [00:19<00:44, 268.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 4975/16910 [00:19<00:48, 245.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|██▉       | 5010/16910 [00:19<00:44, 267.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|██▉       | 5039/16910 [00:20<00:51, 229.11it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 5083/16910 [00:20<00:44, 267.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 5114/16910 [00:20<00:51, 227.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 5149/16910 [00:20<00:46, 253.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5179/16910 [00:20<00:56, 206.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5212/16910 [00:20<00:51, 227.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5239/16910 [00:20<00:53, 216.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 5264/16910 [00:21<00:52, 220.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███▏      | 5288/16910 [00:21<00:56, 204.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███▏      | 5313/16910 [00:21<00:53, 215.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5336/16910 [00:21<00:58, 196.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5368/16910 [00:21<00:51, 222.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5415/16910 [00:21<00:46, 249.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5443/16910 [00:21<00:54, 208.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 5481/16910 [00:22<00:48, 233.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5508/16910 [00:22<00:48, 235.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5536/16910 [00:22<00:46, 242.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5563/16910 [00:22<00:47, 240.97it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5590/16910 [00:22<00:45, 248.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5616/16910 [00:22<00:49, 226.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 5640/16910 [00:22<00:49, 227.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▎      | 5667/16910 [00:22<00:51, 220.01it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▎      | 5694/16910 [00:22<00:48, 231.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5718/16910 [00:23<00:48, 232.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5747/16910 [00:23<00:46, 242.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5772/16910 [00:23<00:51, 216.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5795/16910 [00:23<01:00, 183.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 5815/16910 [00:23<01:00, 182.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5835/16910 [00:23<01:01, 179.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5854/16910 [00:23<01:03, 174.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5872/16910 [00:23<01:15, 146.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 5912/16910 [00:24<01:02, 177.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▌      | 5938/16910 [00:24<00:58, 187.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▌      | 5982/16910 [00:24<00:48, 226.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6011/16910 [00:24<00:45, 240.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6040/16910 [00:24<00:50, 213.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6080/16910 [00:24<00:43, 248.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 6110/16910 [00:24<00:41, 260.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▋      | 6145/16910 [00:24<00:38, 282.11it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6181/16910 [00:24<00:36, 295.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6214/16910 [00:25<00:35, 297.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6246/16910 [00:25<00:39, 267.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6275/16910 [00:25<00:41, 254.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6302/16910 [00:25<00:56, 186.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 6326/16910 [00:25<00:53, 197.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6349/16910 [00:25<00:54, 193.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6380/16910 [00:25<00:50, 210.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6410/16910 [00:26<00:45, 230.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6442/16910 [00:26<00:41, 250.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6469/16910 [00:26<00:46, 224.66it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 6504/16910 [00:26<00:41, 251.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▊      | 6532/16910 [00:26<00:41, 252.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6559/16910 [00:26<00:44, 232.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6584/16910 [00:26<00:46, 220.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6614/16910 [00:26<00:43, 237.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6639/16910 [00:27<01:04, 158.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 6676/16910 [00:27<00:53, 190.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|███▉      | 6702/16910 [00:27<00:49, 206.01it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|███▉      | 6733/16910 [00:27<00:46, 218.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|███▉      | 6759/16910 [00:27<00:44, 228.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|████      | 6789/16910 [00:27<00:44, 226.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|████      | 6817/16910 [00:27<00:42, 238.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6861/16910 [00:27<00:37, 269.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6891/16910 [00:28<00:39, 256.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6919/16910 [00:28<00:44, 226.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6950/16910 [00:28<00:44, 222.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 6974/16910 [00:28<00:57, 171.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████▏     | 7000/16910 [00:28<00:56, 173.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7020/16910 [00:28<00:56, 176.03it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7055/16910 [00:28<00:48, 203.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7078/16910 [00:29<00:53, 182.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7104/16910 [00:29<00:49, 198.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7126/16910 [00:29<01:01, 159.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 7170/16910 [00:29<00:49, 195.98it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7196/16910 [00:29<00:59, 163.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7224/16910 [00:29<00:52, 185.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7251/16910 [00:29<00:47, 201.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7275/16910 [00:30<00:46, 205.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7299/16910 [00:30<00:51, 186.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7323/16910 [00:30<00:49, 194.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 7350/16910 [00:30<00:46, 207.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▎     | 7380/16910 [00:30<00:42, 222.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7404/16910 [00:30<00:50, 188.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7425/16910 [00:30<00:52, 180.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7455/16910 [00:30<00:46, 202.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7490/16910 [00:31<00:42, 224.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 7520/16910 [00:31<00:39, 239.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 7546/16910 [00:31<00:47, 197.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 7575/16910 [00:31<00:42, 218.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 7601/16910 [00:31<00:41, 224.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▌     | 7630/16910 [00:31<00:38, 240.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▌     | 7668/16910 [00:31<00:35, 261.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7696/16910 [00:31<00:40, 228.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7725/16910 [00:32<00:38, 239.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7751/16910 [00:32<00:38, 238.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7778/16910 [00:32<00:37, 243.05it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 7804/16910 [00:32<00:45, 198.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▋     | 7827/16910 [00:32<00:44, 205.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 7875/16910 [00:32<00:37, 238.68it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 7920/16910 [00:32<00:33, 268.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 7954/16910 [00:32<00:31, 281.15it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 8001/16910 [00:33<00:27, 318.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8037/16910 [00:33<00:40, 221.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8071/16910 [00:33<00:36, 245.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8101/16910 [00:33<00:37, 234.13it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8136/16910 [00:33<00:35, 247.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8164/16910 [00:33<00:51, 171.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 8189/16910 [00:34<00:48, 181.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▊     | 8211/16910 [00:34<00:54, 160.15it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▊     | 8239/16910 [00:34<00:50, 173.01it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8278/16910 [00:34<00:44, 192.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8300/16910 [00:34<00:45, 188.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8327/16910 [00:34<00:41, 206.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 8355/16910 [00:34<00:38, 224.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8380/16910 [00:34<00:38, 220.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8404/16910 [00:35<00:39, 216.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8427/16910 [00:35<00:47, 177.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 8447/16910 [00:35<00:56, 150.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8464/16910 [00:35<00:55, 152.69it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8481/16910 [00:35<00:54, 153.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8498/16910 [00:35<00:58, 142.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 8524/16910 [00:35<00:50, 164.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8551/16910 [00:35<00:45, 185.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8572/16910 [00:36<00:43, 190.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8593/16910 [00:36<01:00, 137.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8610/16910 [00:36<01:02, 132.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8633/16910 [00:36<00:55, 148.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 8651/16910 [00:36<01:30, 90.87it/s] \u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████▏    | 8670/16910 [00:37<01:22, 100.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████▏    | 8692/16910 [00:37<01:08, 119.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████▏    | 8708/16910 [00:37<01:52, 73.22it/s] \u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8724/16910 [00:37<01:34, 86.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8738/16910 [00:37<01:45, 77.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8752/16910 [00:38<01:33, 86.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8764/16910 [00:38<01:32, 88.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8775/16910 [00:38<01:32, 88.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8795/16910 [00:38<01:18, 103.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8808/16910 [00:38<01:30, 89.91it/s] \u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8837/16910 [00:38<01:11, 113.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8854/16910 [00:38<01:10, 114.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 8875/16910 [00:38<01:00, 131.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8903/16910 [00:39<00:52, 152.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8933/16910 [00:39<00:44, 178.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8956/16910 [00:39<00:43, 182.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 8978/16910 [00:39<00:54, 146.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 9021/16910 [00:39<00:43, 181.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▎    | 9050/16910 [00:39<00:38, 203.85it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▎    | 9079/16910 [00:39<00:35, 220.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9109/16910 [00:39<00:32, 239.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9149/16910 [00:40<00:28, 269.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9180/16910 [00:40<00:29, 260.97it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 9209/16910 [00:40<00:42, 181.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 9233/16910 [00:40<00:42, 179.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 9281/16910 [00:40<00:34, 218.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 9310/16910 [00:40<00:41, 181.48it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 9341/16910 [00:41<00:36, 205.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 9367/16910 [00:41<00:43, 173.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▌    | 9396/16910 [00:41<00:38, 196.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▌    | 9420/16910 [00:41<00:42, 174.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▌    | 9441/16910 [00:41<00:51, 144.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▌    | 9459/16910 [00:41<00:49, 151.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▌    | 9477/16910 [00:41<00:53, 138.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▋    | 9519/16910 [00:42<00:42, 173.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▋    | 9545/16910 [00:42<00:39, 188.11it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 9569/16910 [00:42<00:44, 166.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 9591/16910 [00:42<00:40, 179.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 9613/16910 [00:42<00:38, 189.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 9652/16910 [00:42<00:32, 224.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 9691/16910 [00:42<00:30, 238.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 9723/16910 [00:42<00:29, 243.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 9764/16910 [00:43<00:25, 276.66it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 9795/16910 [00:43<00:27, 258.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 9829/16910 [00:43<00:25, 277.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 9859/16910 [00:43<00:25, 273.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 9888/16910 [00:43<00:26, 260.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 59%|█████▊    | 9916/16910 [00:43<00:27, 252.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 59%|█████▉    | 9943/16910 [00:43<00:30, 227.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 59%|█████▉    | 9974/16910 [00:43<00:28, 245.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 59%|█████▉    | 10000/16910 [00:43<00:28, 240.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 59%|█████▉    | 10053/16910 [00:44<00:24, 285.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|█████▉    | 10086/16910 [00:44<00:25, 268.03it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|█████▉    | 10118/16910 [00:44<00:24, 278.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|██████    | 10149/16910 [00:44<00:24, 272.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|██████    | 10178/16910 [00:44<00:27, 243.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|██████    | 10205/16910 [00:44<00:31, 216.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████    | 10231/16910 [00:44<00:29, 227.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████    | 10256/16910 [00:44<00:28, 230.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████    | 10282/16910 [00:45<00:29, 227.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████    | 10306/16910 [00:45<00:28, 228.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████    | 10330/16910 [00:45<00:30, 218.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████▏   | 10360/16910 [00:45<00:27, 234.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████▏   | 10385/16910 [00:45<00:31, 206.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 10420/16910 [00:45<00:29, 220.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 10448/16910 [00:45<00:27, 233.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 10473/16910 [00:45<00:28, 227.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 10497/16910 [00:46<00:30, 209.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 10531/16910 [00:46<00:28, 226.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 10555/16910 [00:46<00:27, 228.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10579/16910 [00:46<00:27, 231.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10608/16910 [00:46<00:25, 244.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10633/16910 [00:46<00:29, 216.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10656/16910 [00:46<00:28, 218.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10679/16910 [00:46<00:29, 213.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10701/16910 [00:46<00:30, 203.14it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 10730/16910 [00:47<00:28, 220.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▎   | 10753/16910 [00:47<00:28, 216.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 10781/16910 [00:47<00:26, 231.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 10805/16910 [00:47<00:27, 218.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 10828/16910 [00:47<00:30, 202.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 10849/16910 [00:47<00:30, 195.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 10875/16910 [00:47<00:29, 207.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 10897/16910 [00:47<00:35, 168.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 65%|██████▍   | 10916/16910 [00:48<00:35, 170.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 65%|██████▍   | 10962/16910 [00:48<00:28, 207.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 65%|██████▍   | 10988/16910 [00:48<00:29, 203.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 65%|██████▌   | 11027/16910 [00:48<00:25, 231.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 65%|██████▌   | 11062/16910 [00:48<00:24, 242.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▌   | 11089/16910 [00:48<00:24, 234.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▌   | 11115/16910 [00:48<00:24, 240.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▌   | 11149/16910 [00:48<00:22, 252.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▌   | 11176/16910 [00:49<00:25, 227.15it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▋   | 11236/16910 [00:49<00:20, 276.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 67%|██████▋   | 11276/16910 [00:49<00:18, 300.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 67%|██████▋   | 11311/16910 [00:49<00:22, 253.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 67%|██████▋   | 11341/16910 [00:49<00:27, 202.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 67%|██████▋   | 11367/16910 [00:49<00:26, 207.01it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 67%|██████▋   | 11399/16910 [00:49<00:24, 228.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 11425/16910 [00:49<00:23, 235.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 11456/16910 [00:50<00:25, 216.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 11484/16910 [00:50<00:23, 232.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 11509/16910 [00:50<00:25, 211.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 11534/16910 [00:50<00:24, 219.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 11558/16910 [00:50<00:23, 224.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▊   | 11595/16910 [00:50<00:21, 251.61it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▊   | 11622/16910 [00:50<00:24, 213.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▉   | 11660/16910 [00:50<00:21, 245.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▉   | 11700/16910 [00:51<00:18, 275.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▉   | 11731/16910 [00:51<00:18, 275.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|██████▉   | 11761/16910 [00:51<00:20, 249.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|██████▉   | 11789/16910 [00:51<00:22, 232.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|███████   | 11838/16910 [00:51<00:18, 268.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|███████   | 11871/16910 [00:51<00:17, 282.15it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|███████   | 11919/16910 [00:51<00:15, 313.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 71%|███████   | 11954/16910 [00:51<00:16, 304.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 71%|███████   | 11987/16910 [00:52<00:17, 285.69it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 71%|███████   | 12018/16910 [00:52<00:18, 267.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 71%|███████   | 12047/16910 [00:52<00:18, 264.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 12091/16910 [00:52<00:16, 295.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 12134/16910 [00:52<00:14, 324.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 12176/16910 [00:52<00:13, 347.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 12213/16910 [00:52<00:17, 269.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 12254/16910 [00:52<00:16, 288.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 73%|███████▎  | 12287/16910 [00:53<00:15, 296.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 73%|███████▎  | 12319/16910 [00:53<00:15, 300.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 73%|███████▎  | 12351/16910 [00:53<00:15, 285.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 73%|███████▎  | 12395/16910 [00:53<00:14, 319.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▎  | 12430/16910 [00:53<00:14, 308.77it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▎  | 12465/16910 [00:53<00:13, 319.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 12499/16910 [00:53<00:15, 288.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 12530/16910 [00:53<00:18, 238.50it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 12557/16910 [00:54<00:18, 233.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 12588/16910 [00:54<00:17, 249.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 75%|███████▍  | 12615/16910 [00:54<00:17, 245.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 75%|███████▍  | 12641/16910 [00:54<00:17, 244.85it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 75%|███████▍  | 12667/16910 [00:54<00:17, 244.52it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 75%|███████▌  | 12698/16910 [00:54<00:17, 242.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 75%|███████▌  | 12746/16910 [00:54<00:14, 279.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 12782/16910 [00:54<00:13, 298.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 12814/16910 [00:55<00:15, 259.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 12843/16910 [00:55<00:16, 240.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 12869/16910 [00:55<00:18, 220.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 12893/16910 [00:55<00:19, 201.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▋  | 12920/16910 [00:55<00:18, 218.11it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 12947/16910 [00:55<00:20, 189.48it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 12968/16910 [00:55<00:23, 170.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 13014/16910 [00:55<00:18, 207.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 13044/16910 [00:56<00:17, 226.94it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 13071/16910 [00:56<00:17, 224.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 13097/16910 [00:56<00:25, 151.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 13118/16910 [00:56<00:23, 161.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 13149/16910 [00:56<00:20, 184.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 13172/16910 [00:56<00:26, 138.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 13202/16910 [00:57<00:23, 158.52it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 13231/16910 [00:57<00:21, 167.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 13251/16910 [00:57<00:21, 166.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▊  | 13289/16910 [00:57<00:18, 200.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▉  | 13322/16910 [00:57<00:15, 226.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▉  | 13367/16910 [00:57<00:13, 263.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▉  | 13399/16910 [00:57<00:13, 257.62it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▉  | 13429/16910 [00:57<00:15, 226.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|███████▉  | 13457/16910 [00:58<00:15, 221.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|███████▉  | 13483/16910 [00:58<00:14, 230.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|███████▉  | 13508/16910 [00:58<00:14, 229.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|████████  | 13536/16910 [00:58<00:13, 242.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|████████  | 13566/16910 [00:58<00:13, 245.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|████████  | 13594/16910 [00:58<00:13, 248.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████  | 13633/16910 [00:58<00:11, 275.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████  | 13664/16910 [00:58<00:11, 284.77it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████  | 13718/16910 [00:59<00:11, 281.66it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████▏ | 13751/16910 [00:59<00:10, 291.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████▏ | 13781/16910 [00:59<00:11, 281.77it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 13810/16910 [00:59<00:12, 253.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 13849/16910 [00:59<00:10, 280.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 13879/16910 [00:59<00:11, 270.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 13908/16910 [00:59<00:13, 226.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 13944/16910 [00:59<00:12, 233.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 13972/16910 [01:00<00:12, 236.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 13997/16910 [01:00<00:12, 240.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 14024/16910 [01:00<00:11, 243.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 14059/16910 [01:00<00:10, 261.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 14086/16910 [01:00<00:11, 254.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 14113/16910 [01:00<00:11, 236.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 84%|████████▎ | 14140/16910 [01:00<00:11, 243.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 84%|████████▍ | 14172/16910 [01:00<00:10, 259.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 84%|████████▍ | 14210/16910 [01:00<00:09, 287.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 84%|████████▍ | 14241/16910 [01:01<00:09, 278.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 84%|████████▍ | 14270/16910 [01:01<00:16, 155.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▍ | 14304/16910 [01:01<00:14, 185.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▍ | 14335/16910 [01:01<00:12, 208.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▌ | 14379/16910 [01:01<00:10, 247.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▌ | 14411/16910 [01:01<00:11, 225.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▌ | 14439/16910 [01:02<00:10, 230.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 86%|████████▌ | 14474/16910 [01:02<00:09, 244.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 86%|████████▌ | 14508/16910 [01:02<00:10, 231.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 86%|████████▌ | 14544/16910 [01:02<00:09, 257.97it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 86%|████████▋ | 14592/16910 [01:02<00:07, 296.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 14646/16910 [01:02<00:06, 342.67it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 14686/16910 [01:02<00:06, 334.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 14744/16910 [01:02<00:05, 383.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 14794/16910 [01:02<00:05, 406.60it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 88%|████████▊ | 14841/16910 [01:03<00:05, 400.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 88%|████████▊ | 14884/16910 [01:03<00:05, 374.13it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 88%|████████▊ | 14931/16910 [01:03<00:05, 382.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 89%|████████▊ | 14971/16910 [01:03<00:05, 333.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 89%|████████▉ | 15033/16910 [01:03<00:04, 384.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 89%|████████▉ | 15078/16910 [01:03<00:04, 401.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 89%|████████▉ | 15122/16910 [01:03<00:04, 385.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 90%|████████▉ | 15164/16910 [01:03<00:05, 342.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 90%|████████▉ | 15201/16910 [01:04<00:04, 348.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 90%|█████████ | 15260/16910 [01:04<00:04, 389.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 90%|█████████ | 15302/16910 [01:04<00:05, 312.85it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 91%|█████████ | 15338/16910 [01:04<00:04, 317.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 91%|█████████ | 15373/16910 [01:04<00:05, 301.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 91%|█████████ | 15406/16910 [01:04<00:06, 235.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 91%|█████████▏| 15446/16910 [01:04<00:05, 265.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 15489/16910 [01:05<00:04, 295.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 15530/16910 [01:05<00:04, 322.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 15566/16910 [01:05<00:04, 331.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 15602/16910 [01:05<00:05, 253.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 15632/16910 [01:05<00:06, 191.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 15657/16910 [01:05<00:06, 188.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 15680/16910 [01:05<00:06, 198.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 15710/16910 [01:06<00:06, 197.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 15733/16910 [01:06<00:06, 194.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 15782/16910 [01:06<00:05, 220.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 15807/16910 [01:07<00:12, 88.45it/s] \u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 94%|█████████▎| 15825/16910 [01:07<00:11, 97.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 94%|█████████▍| 15858/16910 [01:07<00:08, 123.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 94%|█████████▍| 15899/16910 [01:07<00:06, 155.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 94%|█████████▍| 15950/16910 [01:07<00:04, 196.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 95%|█████████▍| 15992/16910 [01:07<00:03, 233.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 95%|█████████▍| 16029/16910 [01:07<00:03, 246.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 95%|█████████▌| 16074/16910 [01:07<00:02, 278.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 95%|█████████▌| 16118/16910 [01:07<00:02, 313.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 96%|█████████▌| 16160/16910 [01:08<00:02, 337.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 96%|█████████▌| 16200/16910 [01:08<00:02, 340.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 96%|█████████▌| 16238/16910 [01:08<00:02, 319.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 96%|█████████▌| 16273/16910 [01:08<00:02, 237.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 16332/16910 [01:08<00:02, 286.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 16369/16910 [01:08<00:01, 306.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 16406/16910 [01:08<00:01, 289.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 16440/16910 [01:09<00:02, 203.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 16467/16910 [01:09<00:02, 199.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 98%|█████████▊| 16514/16910 [01:09<00:01, 239.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 98%|█████████▊| 16558/16910 [01:09<00:01, 276.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 98%|█████████▊| 16593/16910 [01:09<00:01, 241.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 98%|█████████▊| 16624/16910 [01:09<00:01, 258.73it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 99%|█████████▊| 16657/16910 [01:09<00:00, 257.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 99%|█████████▉| 16712/16910 [01:10<00:00, 301.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 99%|█████████▉| 16760/16910 [01:10<00:00, 338.79it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 99%|█████████▉| 16800/16910 [01:10<00:00, 246.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "100%|█████████▉| 16849/16910 [01:10<00:00, 289.43it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "100%|██████████| 16910/16910 [01:10<00:00, 238.37it/s]\n",
            "\n",
            "\n",
            "\n",
            "  0%|          | 0/42837 [00:00<?, ?it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|          | 306/42837 [00:00<00:13, 3048.98it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 704/42837 [00:00<00:12, 3278.98it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  3%|▎         | 1106/42837 [00:00<00:12, 3470.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▎         | 1605/42837 [00:00<00:10, 3814.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  5%|▍         | 2115/42837 [00:00<00:09, 4124.01it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▌         | 2539/42837 [00:00<00:09, 4154.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 3073/42837 [00:00<00:08, 4448.81it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 3513/42837 [00:00<00:08, 4422.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▉         | 3989/42837 [00:00<00:08, 4518.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|█         | 4451/42837 [00:01<00:08, 4548.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 5028/42837 [00:01<00:07, 4853.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 5554/42837 [00:01<00:07, 4962.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 6142/42837 [00:01<00:07, 5204.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▌        | 6674/42837 [00:01<00:06, 5237.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 7254/42837 [00:01<00:06, 5393.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 7808/42837 [00:01<00:06, 5416.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 8466/42837 [00:01<00:06, 5717.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██▏       | 9136/42837 [00:01<00:05, 5968.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 9759/42837 [00:01<00:05, 6034.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 10432/42837 [00:02<00:05, 6226.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 11098/42837 [00:02<00:04, 6349.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 11738/42837 [00:02<00:04, 6335.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 12429/42837 [00:02<00:04, 6494.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 13086/42837 [00:02<00:04, 6514.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 13816/42837 [00:02<00:04, 6731.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 14493/42837 [00:02<00:04, 6710.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 15325/42837 [00:02<00:03, 7118.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 16084/42837 [00:02<00:03, 7252.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 16876/42837 [00:02<00:03, 7439.79it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 17626/42837 [00:03<00:03, 7319.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 18390/42837 [00:03<00:03, 7410.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 19135/42837 [00:03<00:03, 7422.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▋     | 19909/42837 [00:03<00:03, 7513.05it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 20679/42837 [00:03<00:02, 7566.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 21530/42837 [00:03<00:02, 7826.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 22346/42837 [00:03<00:02, 7920.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 23211/42837 [00:03<00:02, 8124.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 56%|█████▌    | 24034/42837 [00:03<00:02, 8154.97it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 24852/42837 [00:03<00:02, 8016.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|█████▉    | 25656/42837 [00:04<00:02, 7896.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 26450/42837 [00:04<00:02, 7908.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▎   | 27288/42837 [00:04<00:01, 8039.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▌   | 28242/42837 [00:04<00:01, 8437.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 29092/42837 [00:04<00:01, 8383.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|███████   | 30031/42837 [00:04<00:01, 8660.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 30903/42837 [00:04<00:01, 8515.23it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 31759/42837 [00:04<00:01, 8417.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▋  | 32705/42837 [00:04<00:01, 8705.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▊  | 33637/42837 [00:04<00:01, 8876.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████  | 34552/42837 [00:05<00:00, 8953.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 35451/42837 [00:05<00:00, 8945.59it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▌ | 36416/42837 [00:05<00:00, 9145.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 37400/42837 [00:05<00:00, 9343.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 90%|████████▉ | 38349/42837 [00:05<00:00, 9386.48it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 39430/42837 [00:05<00:00, 9771.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 95%|█████████▍| 40535/42837 [00:05<00:00, 10121.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "100%|██████████| 42837/42837 [00:05<00:00, 7362.79it/s] \n",
            "\n",
            "\n",
            "\n",
            "  0%|          | 0/1600 [00:00<?, ?it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|          | 13/1600 [00:00<00:12, 124.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  1%|▏         | 21/1600 [00:00<00:19, 80.70it/s] \u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 28/1600 [00:00<00:20, 76.17it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  2%|▏         | 35/1600 [00:00<00:21, 73.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  3%|▎         | 49/1600 [00:00<00:18, 83.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▎         | 58/1600 [00:00<00:18, 83.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  4%|▍         | 68/1600 [00:00<00:17, 87.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  5%|▍         | 79/1600 [00:00<00:16, 92.94it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▌         | 89/1600 [00:01<00:17, 85.79it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  6%|▌         | 98/1600 [00:01<00:17, 83.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 107/1600 [00:01<00:20, 72.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  7%|▋         | 115/1600 [00:01<00:22, 64.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 126/1600 [00:01<00:20, 73.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  8%|▊         | 135/1600 [00:01<00:19, 75.40it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "  9%|▉         | 145/1600 [00:01<00:19, 75.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|▉         | 158/1600 [00:01<00:16, 85.93it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 10%|█         | 168/1600 [00:02<00:22, 64.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 11%|█         | 179/1600 [00:02<00:19, 71.73it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 12%|█▏        | 188/1600 [00:02<00:21, 66.20it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 201/1600 [00:02<00:18, 77.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 13%|█▎        | 211/1600 [00:02<00:17, 77.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 220/1600 [00:02<00:22, 61.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 14%|█▍        | 228/1600 [00:03<00:22, 61.22it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 15%|█▌        | 241/1600 [00:03<00:20, 64.99it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▌        | 253/1600 [00:03<00:25, 52.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 16%|█▋        | 260/1600 [00:03<00:26, 51.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 17%|█▋        | 273/1600 [00:03<00:22, 57.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 284/1600 [00:03<00:21, 62.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 18%|█▊        | 291/1600 [00:04<00:27, 47.91it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▊        | 297/1600 [00:04<00:25, 50.87it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 19%|█▉        | 309/1600 [00:04<00:21, 61.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|█▉        | 317/1600 [00:04<00:20, 62.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 20%|██        | 325/1600 [00:04<00:19, 64.09it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 21%|██▏       | 342/1600 [00:04<00:16, 77.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 22%|██▏       | 352/1600 [00:04<00:16, 76.35it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 361/1600 [00:05<00:20, 60.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 23%|██▎       | 369/1600 [00:05<00:22, 55.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▎       | 376/1600 [00:05<00:21, 57.25it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 24%|██▍       | 388/1600 [00:05<00:18, 66.28it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▍       | 396/1600 [00:05<00:22, 52.70it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 25%|██▌       | 403/1600 [00:05<00:24, 49.80it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▌       | 413/1600 [00:06<00:20, 58.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 26%|██▋       | 421/1600 [00:06<00:26, 44.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 27%|██▋       | 434/1600 [00:06<00:21, 55.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 28%|██▊       | 442/1600 [00:06<00:19, 59.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▊       | 457/1600 [00:06<00:17, 63.98it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 29%|██▉       | 465/1600 [00:06<00:17, 64.83it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|██▉       | 473/1600 [00:07<00:55, 20.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 30%|███       | 485/1600 [00:07<00:41, 26.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 31%|███       | 499/1600 [00:08<00:31, 35.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 32%|███▏      | 517/1600 [00:08<00:23, 46.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 33%|███▎      | 529/1600 [00:08<00:23, 46.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▎      | 539/1600 [00:08<00:19, 54.63it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 34%|███▍      | 549/1600 [00:08<00:18, 56.58it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 35%|███▍      | 558/1600 [00:08<00:20, 50.77it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▌      | 572/1600 [00:09<00:16, 61.06it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 36%|███▋      | 581/1600 [00:09<00:15, 67.21it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 590/1600 [00:09<00:14, 71.36it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 37%|███▋      | 599/1600 [00:09<00:16, 59.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 38%|███▊      | 609/1600 [00:09<00:14, 66.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 620/1600 [00:09<00:13, 73.70it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 39%|███▉      | 629/1600 [00:09<00:14, 68.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 40%|████      | 640/1600 [00:09<00:12, 76.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 649/1600 [00:10<00:11, 80.02it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 41%|████      | 658/1600 [00:10<00:11, 80.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 667/1600 [00:10<00:16, 55.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 42%|████▏     | 674/1600 [00:10<00:15, 58.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 681/1600 [00:10<00:15, 59.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 43%|████▎     | 688/1600 [00:10<00:20, 45.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▎     | 697/1600 [00:10<00:17, 52.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 44%|████▍     | 708/1600 [00:11<00:15, 55.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▍     | 715/1600 [00:11<00:16, 55.24it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 45%|████▌     | 726/1600 [00:11<00:13, 64.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 46%|████▌     | 734/1600 [00:11<00:13, 66.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 47%|████▋     | 747/1600 [00:11<00:11, 77.27it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 760/1600 [00:11<00:09, 86.75it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 48%|████▊     | 770/1600 [00:11<00:12, 65.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▊     | 779/1600 [00:12<00:18, 43.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 49%|████▉     | 787/1600 [00:12<00:16, 49.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|████▉     | 794/1600 [00:12<00:19, 41.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 50%|█████     | 802/1600 [00:12<00:17, 46.49it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████     | 813/1600 [00:12<00:14, 54.10it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 51%|█████▏    | 823/1600 [00:13<00:14, 55.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 52%|█████▏    | 830/1600 [00:13<00:15, 50.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 844/1600 [00:13<00:12, 61.86it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 53%|█████▎    | 855/1600 [00:13<00:10, 70.88it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 54%|█████▍    | 864/1600 [00:13<00:14, 50.30it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 872/1600 [00:13<00:15, 47.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▍    | 879/1600 [00:14<00:14, 50.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 55%|█████▌    | 886/1600 [00:14<00:13, 52.64it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 905/1600 [00:14<00:10, 66.90it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 57%|█████▋    | 915/1600 [00:14<00:10, 64.52it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 924/1600 [00:14<00:10, 65.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 58%|█████▊    | 934/1600 [00:14<00:09, 69.76it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 59%|█████▉    | 943/1600 [00:14<00:11, 56.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|█████▉    | 955/1600 [00:15<00:09, 67.13it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 60%|██████    | 964/1600 [00:15<00:11, 56.54it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████    | 975/1600 [00:15<00:09, 63.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 61%|██████▏   | 983/1600 [00:15<00:09, 65.84it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 62%|██████▏   | 991/1600 [00:15<00:08, 69.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 63%|██████▎   | 1003/1600 [00:15<00:08, 73.19it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 1020/1600 [00:15<00:06, 87.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 64%|██████▍   | 1031/1600 [00:16<00:09, 58.05it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 65%|██████▌   | 1041/1600 [00:16<00:08, 64.29it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▌   | 1051/1600 [00:16<00:08, 65.46it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 66%|██████▋   | 1063/1600 [00:16<00:07, 75.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 67%|██████▋   | 1073/1600 [00:16<00:08, 61.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 1081/1600 [00:16<00:08, 60.00it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 68%|██████▊   | 1089/1600 [00:17<00:08, 61.07it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▉   | 1101/1600 [00:17<00:06, 71.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 69%|██████▉   | 1110/1600 [00:17<00:06, 75.53it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 70%|███████   | 1120/1600 [00:17<00:06, 77.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 71%|███████   | 1130/1600 [00:17<00:06, 77.98it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 71%|███████   | 1139/1600 [00:17<00:05, 78.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▏  | 1148/1600 [00:17<00:06, 66.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 72%|███████▎  | 1160/1600 [00:17<00:05, 75.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 73%|███████▎  | 1171/1600 [00:18<00:05, 82.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 1181/1600 [00:18<00:05, 79.57it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 74%|███████▍  | 1192/1600 [00:18<00:04, 84.56it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 75%|███████▌  | 1201/1600 [00:18<00:04, 80.42it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 1210/1600 [00:18<00:05, 74.89it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 76%|███████▌  | 1218/1600 [00:18<00:05, 67.65it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 1226/1600 [00:18<00:05, 67.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 77%|███████▋  | 1234/1600 [00:18<00:05, 67.55it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 1241/1600 [00:19<00:06, 57.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 1248/1600 [00:19<00:05, 59.73it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 78%|███████▊  | 1255/1600 [00:19<00:06, 54.82it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▉  | 1261/1600 [00:19<00:07, 47.85it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 79%|███████▉  | 1270/1600 [00:19<00:05, 55.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|███████▉  | 1277/1600 [00:19<00:05, 57.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 80%|████████  | 1284/1600 [00:19<00:05, 60.26it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████  | 1291/1600 [00:19<00:05, 58.51it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 81%|████████  | 1299/1600 [00:20<00:04, 62.74it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 1306/1600 [00:20<00:05, 54.44it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 1312/1600 [00:20<00:05, 54.04it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 82%|████████▏ | 1318/1600 [00:20<00:06, 46.12it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 1325/1600 [00:20<00:05, 50.32it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 83%|████████▎ | 1335/1600 [00:20<00:04, 56.71it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 84%|████████▍ | 1342/1600 [00:20<00:05, 46.73it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▍ | 1358/1600 [00:21<00:04, 58.37it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 85%|████████▌ | 1366/1600 [00:21<00:03, 59.45it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 86%|████████▌ | 1379/1600 [00:21<00:03, 59.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 1386/1600 [00:21<00:03, 57.72it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 87%|████████▋ | 1398/1600 [00:21<00:03, 63.08it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 88%|████████▊ | 1410/1600 [00:21<00:02, 73.47it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 89%|████████▉ | 1420/1600 [00:21<00:02, 79.18it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 90%|█████████ | 1443/1600 [00:21<00:01, 98.38it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 91%|█████████ | 1456/1600 [00:22<00:02, 67.33it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 1467/1600 [00:22<00:01, 73.92it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 92%|█████████▏| 1478/1600 [00:22<00:02, 56.78it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 1487/1600 [00:22<00:01, 59.96it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 93%|█████████▎| 1495/1600 [00:23<00:01, 54.34it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 94%|█████████▍| 1502/1600 [00:23<00:02, 47.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 94%|█████████▍| 1508/1600 [00:23<00:01, 49.41it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 95%|█████████▍| 1516/1600 [00:23<00:01, 52.95it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 96%|█████████▌| 1529/1600 [00:23<00:01, 64.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 1546/1600 [00:23<00:00, 75.77it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 97%|█████████▋| 1556/1600 [00:23<00:00, 76.39it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 98%|█████████▊| 1569/1600 [00:23<00:00, 87.16it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            " 99%|█████████▉| 1580/1600 [00:24<00:00, 73.31it/s]\u001b[A\u001b[A\u001b[A\n",
            "\n",
            "\n",
            "100%|██████████| 1600/1600 [00:24<00:00, 65.73it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QXmFq89QzKSm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "infer_ans = model.predict(infer_input, batch_size=BATCH_SIZE)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DvYjAl4DzRRk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "infer_recall_recom_df['prob'] = infer_ans"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vejsuHdGe46q",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "infer_recall_recom_df['prob_sim'] = infer_recall_recom_df['prob'] + infer_recall_recom_df['sim']"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LNyG0mv2MJ3R",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_recall_predict(infer_recall_df, phase):\n",
        "  result = get_predict(infer_recall_df, 'sim', top50_click)\n",
        "  result.to_csv(output_path + '/baseline_recall_v1_phase_{}.csv'.format(phase), index=False, header=None)\n",
        "  return result\n",
        "\n",
        "def get_rank_predict(dfm_infer_call_df, phase, infer_target_uids=None, rating_col='prob'):\n",
        "  dfm_infer_call_df = dfm_infer_call_df.copy()\n",
        "  fake_item = dfm_infer_call_df['item_id'].iloc[0]\n",
        "  infer_users = set(dfm_infer_call_df['user_id'].unique())\n",
        "  \n",
        "  if infer_target_uids is None:\n",
        "    infer_target_uids = infer_users\n",
        "\n",
        "  for uid in infer_target_uids:\n",
        "    if uid not in infer_users:\n",
        "      print('uid={} not in infer_users'.format(uid))\n",
        "      dfm_infer_call_df = dfm_infer_call_df.append({'user_id': uid, 'item_id': fake_item, 'prob': -10000}, ignore_index=True)\n",
        "\n",
        "  dfm_infer_call_df['user_id'] = dfm_infer_call_df['user_id'].astype(int)\n",
        "  dfm_infer_call_df['item_id'] = dfm_infer_call_df['item_id'].astype(int)\n",
        "  result = get_predict(dfm_infer_call_df, rating_col, top50_click)\n",
        "  result.to_csv(output_path + '/baseline_ranking_v1_phase_{}.csv'.format(phase), index=False, header=None)\n",
        "  return dfm_infer_call_df"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S7GquvDsitvU",
        "colab_type": "code",
        "outputId": "e5908723-091e-412d-e19d-63f573b1b2f7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        }
      },
      "source": [
        "get_recall_predict(infer_recall_recom_df, c)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "80000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>40</th>\n",
              "      <th>41</th>\n",
              "      <th>42</th>\n",
              "      <th>43</th>\n",
              "      <th>44</th>\n",
              "      <th>45</th>\n",
              "      <th>46</th>\n",
              "      <th>47</th>\n",
              "      <th>48</th>\n",
              "      <th>49</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6</td>\n",
              "      <td>93189</td>\n",
              "      <td>105788</td>\n",
              "      <td>27948</td>\n",
              "      <td>73465</td>\n",
              "      <td>4671</td>\n",
              "      <td>24743</td>\n",
              "      <td>28977</td>\n",
              "      <td>36537</td>\n",
              "      <td>831</td>\n",
              "      <td>53547</td>\n",
              "      <td>1414</td>\n",
              "      <td>287</td>\n",
              "      <td>5249</td>\n",
              "      <td>8010</td>\n",
              "      <td>3196</td>\n",
              "      <td>59765</td>\n",
              "      <td>75017</td>\n",
              "      <td>12132</td>\n",
              "      <td>107256</td>\n",
              "      <td>101578</td>\n",
              "      <td>105313</td>\n",
              "      <td>106909</td>\n",
              "      <td>11936</td>\n",
              "      <td>19939</td>\n",
              "      <td>68771</td>\n",
              "      <td>22408</td>\n",
              "      <td>106080</td>\n",
              "      <td>25752</td>\n",
              "      <td>71721</td>\n",
              "      <td>35144</td>\n",
              "      <td>110812</td>\n",
              "      <td>109607</td>\n",
              "      <td>53262</td>\n",
              "      <td>16947</td>\n",
              "      <td>107747</td>\n",
              "      <td>53488</td>\n",
              "      <td>14437</td>\n",
              "      <td>87504</td>\n",
              "      <td>61830</td>\n",
              "      <td>96863</td>\n",
              "      <td>14260</td>\n",
              "      <td>30951</td>\n",
              "      <td>79737</td>\n",
              "      <td>69995</td>\n",
              "      <td>47426</td>\n",
              "      <td>78872</td>\n",
              "      <td>69440</td>\n",
              "      <td>92835</td>\n",
              "      <td>115180</td>\n",
              "      <td>29356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>9</td>\n",
              "      <td>8552</td>\n",
              "      <td>67481</td>\n",
              "      <td>107895</td>\n",
              "      <td>24232</td>\n",
              "      <td>114330</td>\n",
              "      <td>40280</td>\n",
              "      <td>88062</td>\n",
              "      <td>104838</td>\n",
              "      <td>20714</td>\n",
              "      <td>29044</td>\n",
              "      <td>10852</td>\n",
              "      <td>91657</td>\n",
              "      <td>35039</td>\n",
              "      <td>204</td>\n",
              "      <td>83295</td>\n",
              "      <td>109651</td>\n",
              "      <td>116059</td>\n",
              "      <td>72968</td>\n",
              "      <td>36566</td>\n",
              "      <td>53865</td>\n",
              "      <td>101172</td>\n",
              "      <td>26299</td>\n",
              "      <td>68693</td>\n",
              "      <td>85500</td>\n",
              "      <td>84617</td>\n",
              "      <td>39751</td>\n",
              "      <td>2510</td>\n",
              "      <td>102219</td>\n",
              "      <td>59038</td>\n",
              "      <td>2611</td>\n",
              "      <td>4423</td>\n",
              "      <td>56599</td>\n",
              "      <td>94802</td>\n",
              "      <td>95097</td>\n",
              "      <td>30494</td>\n",
              "      <td>78724</td>\n",
              "      <td>26611</td>\n",
              "      <td>7882</td>\n",
              "      <td>28425</td>\n",
              "      <td>20590</td>\n",
              "      <td>62844</td>\n",
              "      <td>102129</td>\n",
              "      <td>35873</td>\n",
              "      <td>55675</td>\n",
              "      <td>51923</td>\n",
              "      <td>71580</td>\n",
              "      <td>110382</td>\n",
              "      <td>42107</td>\n",
              "      <td>109283</td>\n",
              "      <td>14112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>13</td>\n",
              "      <td>84395</td>\n",
              "      <td>39856</td>\n",
              "      <td>29444</td>\n",
              "      <td>40145</td>\n",
              "      <td>42230</td>\n",
              "      <td>66980</td>\n",
              "      <td>35164</td>\n",
              "      <td>32908</td>\n",
              "      <td>64936</td>\n",
              "      <td>39021</td>\n",
              "      <td>57533</td>\n",
              "      <td>60423</td>\n",
              "      <td>10177</td>\n",
              "      <td>1933</td>\n",
              "      <td>60365</td>\n",
              "      <td>78601</td>\n",
              "      <td>48417</td>\n",
              "      <td>15649</td>\n",
              "      <td>71738</td>\n",
              "      <td>89237</td>\n",
              "      <td>81672</td>\n",
              "      <td>32580</td>\n",
              "      <td>36304</td>\n",
              "      <td>33195</td>\n",
              "      <td>18354</td>\n",
              "      <td>108028</td>\n",
              "      <td>108782</td>\n",
              "      <td>96361</td>\n",
              "      <td>57140</td>\n",
              "      <td>105172</td>\n",
              "      <td>101201</td>\n",
              "      <td>106965</td>\n",
              "      <td>114044</td>\n",
              "      <td>29656</td>\n",
              "      <td>97518</td>\n",
              "      <td>91581</td>\n",
              "      <td>107207</td>\n",
              "      <td>77301</td>\n",
              "      <td>97582</td>\n",
              "      <td>37073</td>\n",
              "      <td>105666</td>\n",
              "      <td>37640</td>\n",
              "      <td>105754</td>\n",
              "      <td>97522</td>\n",
              "      <td>13018</td>\n",
              "      <td>40434</td>\n",
              "      <td>57531</td>\n",
              "      <td>18849</td>\n",
              "      <td>98112</td>\n",
              "      <td>91071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>19</td>\n",
              "      <td>28250</td>\n",
              "      <td>86943</td>\n",
              "      <td>30165</td>\n",
              "      <td>11558</td>\n",
              "      <td>64070</td>\n",
              "      <td>8217</td>\n",
              "      <td>13891</td>\n",
              "      <td>109101</td>\n",
              "      <td>56077</td>\n",
              "      <td>97824</td>\n",
              "      <td>70130</td>\n",
              "      <td>29941</td>\n",
              "      <td>61433</td>\n",
              "      <td>23385</td>\n",
              "      <td>85528</td>\n",
              "      <td>84647</td>\n",
              "      <td>48691</td>\n",
              "      <td>94465</td>\n",
              "      <td>56381</td>\n",
              "      <td>84375</td>\n",
              "      <td>25613</td>\n",
              "      <td>57526</td>\n",
              "      <td>19103</td>\n",
              "      <td>35297</td>\n",
              "      <td>68503</td>\n",
              "      <td>99319</td>\n",
              "      <td>14838</td>\n",
              "      <td>4195</td>\n",
              "      <td>63436</td>\n",
              "      <td>56811</td>\n",
              "      <td>51096</td>\n",
              "      <td>47711</td>\n",
              "      <td>91181</td>\n",
              "      <td>30980</td>\n",
              "      <td>91097</td>\n",
              "      <td>93718</td>\n",
              "      <td>86076</td>\n",
              "      <td>73699</td>\n",
              "      <td>21934</td>\n",
              "      <td>106285</td>\n",
              "      <td>5676</td>\n",
              "      <td>42703</td>\n",
              "      <td>79532</td>\n",
              "      <td>41115</td>\n",
              "      <td>10885</td>\n",
              "      <td>83427</td>\n",
              "      <td>49851</td>\n",
              "      <td>23049</td>\n",
              "      <td>75257</td>\n",
              "      <td>67746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>62</td>\n",
              "      <td>77165</td>\n",
              "      <td>99917</td>\n",
              "      <td>46241</td>\n",
              "      <td>104462</td>\n",
              "      <td>98640</td>\n",
              "      <td>112873</td>\n",
              "      <td>74772</td>\n",
              "      <td>32184</td>\n",
              "      <td>39941</td>\n",
              "      <td>106799</td>\n",
              "      <td>73623</td>\n",
              "      <td>83597</td>\n",
              "      <td>54416</td>\n",
              "      <td>34736</td>\n",
              "      <td>33827</td>\n",
              "      <td>48963</td>\n",
              "      <td>11762</td>\n",
              "      <td>21449</td>\n",
              "      <td>101380</td>\n",
              "      <td>90997</td>\n",
              "      <td>91477</td>\n",
              "      <td>59406</td>\n",
              "      <td>68092</td>\n",
              "      <td>77748</td>\n",
              "      <td>36100</td>\n",
              "      <td>84974</td>\n",
              "      <td>94905</td>\n",
              "      <td>107727</td>\n",
              "      <td>43628</td>\n",
              "      <td>54277</td>\n",
              "      <td>94827</td>\n",
              "      <td>62080</td>\n",
              "      <td>71978</td>\n",
              "      <td>20499</td>\n",
              "      <td>54287</td>\n",
              "      <td>73386</td>\n",
              "      <td>93528</td>\n",
              "      <td>68491</td>\n",
              "      <td>42257</td>\n",
              "      <td>55132</td>\n",
              "      <td>27078</td>\n",
              "      <td>67994</td>\n",
              "      <td>79533</td>\n",
              "      <td>84727</td>\n",
              "      <td>107716</td>\n",
              "      <td>86076</td>\n",
              "      <td>67092</td>\n",
              "      <td>71105</td>\n",
              "      <td>108681</td>\n",
              "      <td>80447</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1595</th>\n",
              "      <td>35282</td>\n",
              "      <td>76119</td>\n",
              "      <td>35600</td>\n",
              "      <td>64893</td>\n",
              "      <td>90892</td>\n",
              "      <td>15055</td>\n",
              "      <td>58608</td>\n",
              "      <td>60700</td>\n",
              "      <td>74649</td>\n",
              "      <td>69436</td>\n",
              "      <td>106107</td>\n",
              "      <td>64234</td>\n",
              "      <td>21481</td>\n",
              "      <td>17174</td>\n",
              "      <td>62943</td>\n",
              "      <td>64377</td>\n",
              "      <td>53331</td>\n",
              "      <td>97635</td>\n",
              "      <td>41493</td>\n",
              "      <td>36681</td>\n",
              "      <td>47197</td>\n",
              "      <td>23026</td>\n",
              "      <td>40404</td>\n",
              "      <td>72753</td>\n",
              "      <td>90995</td>\n",
              "      <td>54144</td>\n",
              "      <td>40618</td>\n",
              "      <td>26340</td>\n",
              "      <td>46638</td>\n",
              "      <td>45833</td>\n",
              "      <td>25787</td>\n",
              "      <td>42246</td>\n",
              "      <td>22970</td>\n",
              "      <td>113679</td>\n",
              "      <td>60424</td>\n",
              "      <td>49145</td>\n",
              "      <td>59758</td>\n",
              "      <td>69583</td>\n",
              "      <td>72863</td>\n",
              "      <td>99046</td>\n",
              "      <td>69290</td>\n",
              "      <td>95378</td>\n",
              "      <td>24601</td>\n",
              "      <td>15337</td>\n",
              "      <td>66995</td>\n",
              "      <td>84010</td>\n",
              "      <td>86742</td>\n",
              "      <td>104518</td>\n",
              "      <td>57626</td>\n",
              "      <td>34831</td>\n",
              "      <td>39788</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1596</th>\n",
              "      <td>35313</td>\n",
              "      <td>42781</td>\n",
              "      <td>90643</td>\n",
              "      <td>24649</td>\n",
              "      <td>59777</td>\n",
              "      <td>51539</td>\n",
              "      <td>31907</td>\n",
              "      <td>26620</td>\n",
              "      <td>80606</td>\n",
              "      <td>57488</td>\n",
              "      <td>17415</td>\n",
              "      <td>45487</td>\n",
              "      <td>43436</td>\n",
              "      <td>66951</td>\n",
              "      <td>107167</td>\n",
              "      <td>91147</td>\n",
              "      <td>95498</td>\n",
              "      <td>86393</td>\n",
              "      <td>67354</td>\n",
              "      <td>83597</td>\n",
              "      <td>72418</td>\n",
              "      <td>34401</td>\n",
              "      <td>78249</td>\n",
              "      <td>27764</td>\n",
              "      <td>89928</td>\n",
              "      <td>48662</td>\n",
              "      <td>718</td>\n",
              "      <td>65645</td>\n",
              "      <td>2028</td>\n",
              "      <td>66232</td>\n",
              "      <td>68803</td>\n",
              "      <td>11719</td>\n",
              "      <td>94618</td>\n",
              "      <td>13157</td>\n",
              "      <td>22002</td>\n",
              "      <td>41544</td>\n",
              "      <td>25904</td>\n",
              "      <td>70207</td>\n",
              "      <td>74132</td>\n",
              "      <td>77199</td>\n",
              "      <td>76706</td>\n",
              "      <td>62449</td>\n",
              "      <td>35595</td>\n",
              "      <td>34923</td>\n",
              "      <td>95515</td>\n",
              "      <td>13285</td>\n",
              "      <td>98028</td>\n",
              "      <td>74542</td>\n",
              "      <td>98647</td>\n",
              "      <td>69383</td>\n",
              "      <td>17620</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1597</th>\n",
              "      <td>35371</td>\n",
              "      <td>72282</td>\n",
              "      <td>33256</td>\n",
              "      <td>81753</td>\n",
              "      <td>78247</td>\n",
              "      <td>57050</td>\n",
              "      <td>82000</td>\n",
              "      <td>66834</td>\n",
              "      <td>98630</td>\n",
              "      <td>58268</td>\n",
              "      <td>51297</td>\n",
              "      <td>70489</td>\n",
              "      <td>90790</td>\n",
              "      <td>86904</td>\n",
              "      <td>55317</td>\n",
              "      <td>71544</td>\n",
              "      <td>66958</td>\n",
              "      <td>102186</td>\n",
              "      <td>38076</td>\n",
              "      <td>105001</td>\n",
              "      <td>44293</td>\n",
              "      <td>71277</td>\n",
              "      <td>76136</td>\n",
              "      <td>71923</td>\n",
              "      <td>110891</td>\n",
              "      <td>69028</td>\n",
              "      <td>76368</td>\n",
              "      <td>105862</td>\n",
              "      <td>53798</td>\n",
              "      <td>110147</td>\n",
              "      <td>79199</td>\n",
              "      <td>103880</td>\n",
              "      <td>98439</td>\n",
              "      <td>41354</td>\n",
              "      <td>36518</td>\n",
              "      <td>3428</td>\n",
              "      <td>2642</td>\n",
              "      <td>30778</td>\n",
              "      <td>113011</td>\n",
              "      <td>70254</td>\n",
              "      <td>66784</td>\n",
              "      <td>23333</td>\n",
              "      <td>27960</td>\n",
              "      <td>30206</td>\n",
              "      <td>85035</td>\n",
              "      <td>2171</td>\n",
              "      <td>90532</td>\n",
              "      <td>108421</td>\n",
              "      <td>110165</td>\n",
              "      <td>32470</td>\n",
              "      <td>101962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1598</th>\n",
              "      <td>35386</td>\n",
              "      <td>20944</td>\n",
              "      <td>106607</td>\n",
              "      <td>70975</td>\n",
              "      <td>67477</td>\n",
              "      <td>83014</td>\n",
              "      <td>64376</td>\n",
              "      <td>9304</td>\n",
              "      <td>64920</td>\n",
              "      <td>103005</td>\n",
              "      <td>92085</td>\n",
              "      <td>92762</td>\n",
              "      <td>77240</td>\n",
              "      <td>106953</td>\n",
              "      <td>56358</td>\n",
              "      <td>56414</td>\n",
              "      <td>89440</td>\n",
              "      <td>84855</td>\n",
              "      <td>90407</td>\n",
              "      <td>107187</td>\n",
              "      <td>25602</td>\n",
              "      <td>106014</td>\n",
              "      <td>71897</td>\n",
              "      <td>40584</td>\n",
              "      <td>63038</td>\n",
              "      <td>61848</td>\n",
              "      <td>25778</td>\n",
              "      <td>30557</td>\n",
              "      <td>7302</td>\n",
              "      <td>115457</td>\n",
              "      <td>84895</td>\n",
              "      <td>21410</td>\n",
              "      <td>82815</td>\n",
              "      <td>46894</td>\n",
              "      <td>90531</td>\n",
              "      <td>62911</td>\n",
              "      <td>67245</td>\n",
              "      <td>35551</td>\n",
              "      <td>51096</td>\n",
              "      <td>108634</td>\n",
              "      <td>70229</td>\n",
              "      <td>77350</td>\n",
              "      <td>69743</td>\n",
              "      <td>45606</td>\n",
              "      <td>55757</td>\n",
              "      <td>49214</td>\n",
              "      <td>41654</td>\n",
              "      <td>63608</td>\n",
              "      <td>49041</td>\n",
              "      <td>36196</td>\n",
              "      <td>88172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1599</th>\n",
              "      <td>35406</td>\n",
              "      <td>11405</td>\n",
              "      <td>58813</td>\n",
              "      <td>41936</td>\n",
              "      <td>75655</td>\n",
              "      <td>84685</td>\n",
              "      <td>85963</td>\n",
              "      <td>60940</td>\n",
              "      <td>97296</td>\n",
              "      <td>97569</td>\n",
              "      <td>87680</td>\n",
              "      <td>26611</td>\n",
              "      <td>6948</td>\n",
              "      <td>59399</td>\n",
              "      <td>2876</td>\n",
              "      <td>31268</td>\n",
              "      <td>54756</td>\n",
              "      <td>53697</td>\n",
              "      <td>39211</td>\n",
              "      <td>76101</td>\n",
              "      <td>87446</td>\n",
              "      <td>38038</td>\n",
              "      <td>2250</td>\n",
              "      <td>6575</td>\n",
              "      <td>114792</td>\n",
              "      <td>40358</td>\n",
              "      <td>99056</td>\n",
              "      <td>55890</td>\n",
              "      <td>84057</td>\n",
              "      <td>25554</td>\n",
              "      <td>34197</td>\n",
              "      <td>13206</td>\n",
              "      <td>2664</td>\n",
              "      <td>50984</td>\n",
              "      <td>8642</td>\n",
              "      <td>27115</td>\n",
              "      <td>26873</td>\n",
              "      <td>80461</td>\n",
              "      <td>90306</td>\n",
              "      <td>54613</td>\n",
              "      <td>72632</td>\n",
              "      <td>11190</td>\n",
              "      <td>27543</td>\n",
              "      <td>1722</td>\n",
              "      <td>26976</td>\n",
              "      <td>69718</td>\n",
              "      <td>69170</td>\n",
              "      <td>46045</td>\n",
              "      <td>81773</td>\n",
              "      <td>23317</td>\n",
              "      <td>66705</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1600 rows × 51 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      user_id      0       1       2  ...      46      47      48      49\n",
              "0           6  93189  105788   27948  ...   69440   92835  115180   29356\n",
              "1           9   8552   67481  107895  ...  110382   42107  109283   14112\n",
              "2          13  84395   39856   29444  ...   57531   18849   98112   91071\n",
              "3          19  28250   86943   30165  ...   49851   23049   75257   67746\n",
              "4          62  77165   99917   46241  ...   67092   71105  108681   80447\n",
              "...       ...    ...     ...     ...  ...     ...     ...     ...     ...\n",
              "1595    35282  76119   35600   64893  ...  104518   57626   34831   39788\n",
              "1596    35313  42781   90643   24649  ...   74542   98647   69383   17620\n",
              "1597    35371  72282   33256   81753  ...  108421  110165   32470  101962\n",
              "1598    35386  20944  106607   70975  ...   63608   49041   36196   88172\n",
              "1599    35406  11405   58813   41936  ...   46045   81773   23317   66705\n",
              "\n",
              "[1600 rows x 51 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 561
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "C5HAjriNMEBF",
        "colab_type": "code",
        "outputId": "61983075-3326-49fd-e346-904663bfc2a3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 436
        }
      },
      "source": [
        "get_rank_predict(infer_recall_recom_df, c, rating_col='prob_sim')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "80000\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>sim</th>\n",
              "      <th>phase</th>\n",
              "      <th>sim2int_1</th>\n",
              "      <th>sim2int_2</th>\n",
              "      <th>sim2int_3</th>\n",
              "      <th>exp_sim</th>\n",
              "      <th>prob</th>\n",
              "      <th>prob_sim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6</td>\n",
              "      <td>93189</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.718282</td>\n",
              "      <td>0.000576</td>\n",
              "      <td>1.000576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6</td>\n",
              "      <td>105788</td>\n",
              "      <td>0.978327</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.660001</td>\n",
              "      <td>0.004766</td>\n",
              "      <td>0.983093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6</td>\n",
              "      <td>27948</td>\n",
              "      <td>0.822638</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.276497</td>\n",
              "      <td>0.001754</td>\n",
              "      <td>0.824392</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6</td>\n",
              "      <td>73465</td>\n",
              "      <td>0.683073</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.979953</td>\n",
              "      <td>0.001597</td>\n",
              "      <td>0.684670</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>6</td>\n",
              "      <td>4671</td>\n",
              "      <td>0.607949</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.836661</td>\n",
              "      <td>0.001503</td>\n",
              "      <td>0.609452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459524</th>\n",
              "      <td>35406</td>\n",
              "      <td>46775</td>\n",
              "      <td>0.000114</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000114</td>\n",
              "      <td>0.001912</td>\n",
              "      <td>0.002026</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459525</th>\n",
              "      <td>35406</td>\n",
              "      <td>73357</td>\n",
              "      <td>0.000038</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000038</td>\n",
              "      <td>0.000204</td>\n",
              "      <td>0.000242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459526</th>\n",
              "      <td>35406</td>\n",
              "      <td>29375</td>\n",
              "      <td>0.000025</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000025</td>\n",
              "      <td>0.000297</td>\n",
              "      <td>0.000322</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459527</th>\n",
              "      <td>35406</td>\n",
              "      <td>83467</td>\n",
              "      <td>0.000002</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000002</td>\n",
              "      <td>0.000866</td>\n",
              "      <td>0.000867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>459528</th>\n",
              "      <td>35406</td>\n",
              "      <td>20313</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000836</td>\n",
              "      <td>0.000836</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>459529 rows × 10 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        user_id  item_id       sim  ...   exp_sim      prob  prob_sim\n",
              "0             6    93189  1.000000  ...  2.718282  0.000576  1.000576\n",
              "1             6   105788  0.978327  ...  2.660001  0.004766  0.983093\n",
              "2             6    27948  0.822638  ...  2.276497  0.001754  0.824392\n",
              "3             6    73465  0.683073  ...  1.979953  0.001597  0.684670\n",
              "4             6     4671  0.607949  ...  1.836661  0.001503  0.609452\n",
              "...         ...      ...       ...  ...       ...       ...       ...\n",
              "459524    35406    46775  0.000114  ...  1.000114  0.001912  0.002026\n",
              "459525    35406    73357  0.000038  ...  1.000038  0.000204  0.000242\n",
              "459526    35406    29375  0.000025  ...  1.000025  0.000297  0.000322\n",
              "459527    35406    83467  0.000002  ...  1.000002  0.000866  0.000867\n",
              "459528    35406    20313  0.000000  ...  1.000000  0.000836  0.000836\n",
              "\n",
              "[459529 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 570
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rZz4GasZ9cBL",
        "colab_type": "code",
        "outputId": "3c9570c2-3f3c-4d9a-d629-95685a16462f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        }
      },
      "source": [
        "train_full_df['prob']"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>sim</th>\n",
              "      <th>phase</th>\n",
              "      <th>label</th>\n",
              "      <th>age_level</th>\n",
              "      <th>gender</th>\n",
              "      <th>city_level</th>\n",
              "      <th>txt_embed_0</th>\n",
              "      <th>txt_embed_1</th>\n",
              "      <th>txt_embed_2</th>\n",
              "      <th>txt_embed_3</th>\n",
              "      <th>txt_embed_4</th>\n",
              "      <th>txt_embed_5</th>\n",
              "      <th>txt_embed_6</th>\n",
              "      <th>txt_embed_7</th>\n",
              "      <th>txt_embed_8</th>\n",
              "      <th>txt_embed_9</th>\n",
              "      <th>txt_embed_10</th>\n",
              "      <th>txt_embed_11</th>\n",
              "      <th>txt_embed_12</th>\n",
              "      <th>txt_embed_13</th>\n",
              "      <th>txt_embed_14</th>\n",
              "      <th>txt_embed_15</th>\n",
              "      <th>txt_embed_16</th>\n",
              "      <th>txt_embed_17</th>\n",
              "      <th>txt_embed_18</th>\n",
              "      <th>txt_embed_19</th>\n",
              "      <th>txt_embed_20</th>\n",
              "      <th>txt_embed_21</th>\n",
              "      <th>txt_embed_22</th>\n",
              "      <th>txt_embed_23</th>\n",
              "      <th>txt_embed_24</th>\n",
              "      <th>txt_embed_25</th>\n",
              "      <th>txt_embed_26</th>\n",
              "      <th>txt_embed_27</th>\n",
              "      <th>txt_embed_28</th>\n",
              "      <th>txt_embed_29</th>\n",
              "      <th>txt_embed_30</th>\n",
              "      <th>txt_embed_31</th>\n",
              "      <th>...</th>\n",
              "      <th>img_embed_88</th>\n",
              "      <th>img_embed_89</th>\n",
              "      <th>img_embed_90</th>\n",
              "      <th>img_embed_91</th>\n",
              "      <th>img_embed_92</th>\n",
              "      <th>img_embed_93</th>\n",
              "      <th>img_embed_94</th>\n",
              "      <th>img_embed_95</th>\n",
              "      <th>img_embed_96</th>\n",
              "      <th>img_embed_97</th>\n",
              "      <th>img_embed_98</th>\n",
              "      <th>img_embed_99</th>\n",
              "      <th>img_embed_100</th>\n",
              "      <th>img_embed_101</th>\n",
              "      <th>img_embed_102</th>\n",
              "      <th>img_embed_103</th>\n",
              "      <th>img_embed_104</th>\n",
              "      <th>img_embed_105</th>\n",
              "      <th>img_embed_106</th>\n",
              "      <th>img_embed_107</th>\n",
              "      <th>img_embed_108</th>\n",
              "      <th>img_embed_109</th>\n",
              "      <th>img_embed_110</th>\n",
              "      <th>img_embed_111</th>\n",
              "      <th>img_embed_112</th>\n",
              "      <th>img_embed_113</th>\n",
              "      <th>img_embed_114</th>\n",
              "      <th>img_embed_115</th>\n",
              "      <th>img_embed_116</th>\n",
              "      <th>img_embed_117</th>\n",
              "      <th>img_embed_118</th>\n",
              "      <th>img_embed_119</th>\n",
              "      <th>img_embed_120</th>\n",
              "      <th>img_embed_121</th>\n",
              "      <th>img_embed_122</th>\n",
              "      <th>img_embed_123</th>\n",
              "      <th>img_embed_124</th>\n",
              "      <th>img_embed_125</th>\n",
              "      <th>img_embed_126</th>\n",
              "      <th>img_embed_127</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6780</td>\n",
              "      <td>8671</td>\n",
              "      <td>0.038451</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.102363</td>\n",
              "      <td>-0.029301</td>\n",
              "      <td>0.009490</td>\n",
              "      <td>-0.078057</td>\n",
              "      <td>0.027496</td>\n",
              "      <td>0.059390</td>\n",
              "      <td>0.010544</td>\n",
              "      <td>0.038855</td>\n",
              "      <td>-0.142092</td>\n",
              "      <td>-0.084460</td>\n",
              "      <td>-0.077573</td>\n",
              "      <td>-0.209220</td>\n",
              "      <td>-0.026246</td>\n",
              "      <td>-0.005547</td>\n",
              "      <td>-0.016963</td>\n",
              "      <td>0.009970</td>\n",
              "      <td>-0.087389</td>\n",
              "      <td>-0.118088</td>\n",
              "      <td>-0.014454</td>\n",
              "      <td>-0.225163</td>\n",
              "      <td>-0.130300</td>\n",
              "      <td>-0.030236</td>\n",
              "      <td>0.064558</td>\n",
              "      <td>-0.072433</td>\n",
              "      <td>-0.091517</td>\n",
              "      <td>0.001835</td>\n",
              "      <td>0.033389</td>\n",
              "      <td>0.082081</td>\n",
              "      <td>-0.074435</td>\n",
              "      <td>0.053972</td>\n",
              "      <td>0.100948</td>\n",
              "      <td>-0.059199</td>\n",
              "      <td>...</td>\n",
              "      <td>0.092460</td>\n",
              "      <td>-0.013646</td>\n",
              "      <td>-0.128834</td>\n",
              "      <td>0.018218</td>\n",
              "      <td>0.088042</td>\n",
              "      <td>0.103836</td>\n",
              "      <td>-0.047245</td>\n",
              "      <td>0.008373</td>\n",
              "      <td>-0.004843</td>\n",
              "      <td>-0.026352</td>\n",
              "      <td>-0.066270</td>\n",
              "      <td>-0.031028</td>\n",
              "      <td>-0.145543</td>\n",
              "      <td>0.017164</td>\n",
              "      <td>0.078186</td>\n",
              "      <td>0.069219</td>\n",
              "      <td>0.014874</td>\n",
              "      <td>-0.069405</td>\n",
              "      <td>0.079756</td>\n",
              "      <td>0.092119</td>\n",
              "      <td>-0.119532</td>\n",
              "      <td>-0.080644</td>\n",
              "      <td>0.091110</td>\n",
              "      <td>-0.000850</td>\n",
              "      <td>0.118255</td>\n",
              "      <td>0.007245</td>\n",
              "      <td>0.074010</td>\n",
              "      <td>-0.111179</td>\n",
              "      <td>0.095162</td>\n",
              "      <td>0.015078</td>\n",
              "      <td>-0.041444</td>\n",
              "      <td>-0.086194</td>\n",
              "      <td>0.012367</td>\n",
              "      <td>-0.102811</td>\n",
              "      <td>0.065297</td>\n",
              "      <td>0.040351</td>\n",
              "      <td>-0.122925</td>\n",
              "      <td>0.062916</td>\n",
              "      <td>0.056456</td>\n",
              "      <td>-0.030223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>8322</td>\n",
              "      <td>20464</td>\n",
              "      <td>0.198966</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "      <td>F</td>\n",
              "      <td>5</td>\n",
              "      <td>0.053142</td>\n",
              "      <td>0.074012</td>\n",
              "      <td>-0.003665</td>\n",
              "      <td>-0.054987</td>\n",
              "      <td>-0.019489</td>\n",
              "      <td>0.010818</td>\n",
              "      <td>-0.028255</td>\n",
              "      <td>0.133114</td>\n",
              "      <td>-0.202495</td>\n",
              "      <td>-0.119417</td>\n",
              "      <td>0.093808</td>\n",
              "      <td>-0.156838</td>\n",
              "      <td>0.048324</td>\n",
              "      <td>0.016398</td>\n",
              "      <td>-0.006756</td>\n",
              "      <td>0.033344</td>\n",
              "      <td>-0.014383</td>\n",
              "      <td>-0.018166</td>\n",
              "      <td>-0.008979</td>\n",
              "      <td>-0.089940</td>\n",
              "      <td>-0.060614</td>\n",
              "      <td>-0.082702</td>\n",
              "      <td>0.008660</td>\n",
              "      <td>0.022291</td>\n",
              "      <td>-0.050261</td>\n",
              "      <td>0.017950</td>\n",
              "      <td>0.080855</td>\n",
              "      <td>-0.070426</td>\n",
              "      <td>-0.133500</td>\n",
              "      <td>0.064366</td>\n",
              "      <td>-0.057174</td>\n",
              "      <td>-0.083677</td>\n",
              "      <td>...</td>\n",
              "      <td>0.026833</td>\n",
              "      <td>0.010207</td>\n",
              "      <td>-0.029859</td>\n",
              "      <td>0.041502</td>\n",
              "      <td>0.071868</td>\n",
              "      <td>-0.070713</td>\n",
              "      <td>0.077115</td>\n",
              "      <td>0.002980</td>\n",
              "      <td>0.028318</td>\n",
              "      <td>0.104022</td>\n",
              "      <td>-0.001723</td>\n",
              "      <td>0.002100</td>\n",
              "      <td>0.031073</td>\n",
              "      <td>0.109521</td>\n",
              "      <td>0.059403</td>\n",
              "      <td>0.005948</td>\n",
              "      <td>-0.152695</td>\n",
              "      <td>-0.155127</td>\n",
              "      <td>0.089651</td>\n",
              "      <td>0.169352</td>\n",
              "      <td>-0.157717</td>\n",
              "      <td>-0.098064</td>\n",
              "      <td>-0.162143</td>\n",
              "      <td>0.033086</td>\n",
              "      <td>-0.101047</td>\n",
              "      <td>-0.056202</td>\n",
              "      <td>-0.037393</td>\n",
              "      <td>-0.121764</td>\n",
              "      <td>-0.083698</td>\n",
              "      <td>-0.052229</td>\n",
              "      <td>-0.038225</td>\n",
              "      <td>-0.077236</td>\n",
              "      <td>0.033198</td>\n",
              "      <td>-0.076659</td>\n",
              "      <td>-0.079670</td>\n",
              "      <td>-0.140010</td>\n",
              "      <td>0.048315</td>\n",
              "      <td>0.106130</td>\n",
              "      <td>0.120104</td>\n",
              "      <td>-0.013401</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1473</td>\n",
              "      <td>2834</td>\n",
              "      <td>0.258037</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.057021</td>\n",
              "      <td>-0.030741</td>\n",
              "      <td>-0.006612</td>\n",
              "      <td>-0.147705</td>\n",
              "      <td>-0.091715</td>\n",
              "      <td>0.114730</td>\n",
              "      <td>0.026954</td>\n",
              "      <td>0.035373</td>\n",
              "      <td>-0.119632</td>\n",
              "      <td>-0.158598</td>\n",
              "      <td>-0.039811</td>\n",
              "      <td>-0.061531</td>\n",
              "      <td>0.108465</td>\n",
              "      <td>-0.089468</td>\n",
              "      <td>0.019911</td>\n",
              "      <td>0.086200</td>\n",
              "      <td>-0.002994</td>\n",
              "      <td>-0.101531</td>\n",
              "      <td>-0.110704</td>\n",
              "      <td>-0.205705</td>\n",
              "      <td>-0.158749</td>\n",
              "      <td>-0.088603</td>\n",
              "      <td>-0.003401</td>\n",
              "      <td>-0.079426</td>\n",
              "      <td>-0.151336</td>\n",
              "      <td>0.089373</td>\n",
              "      <td>0.026412</td>\n",
              "      <td>0.073040</td>\n",
              "      <td>-0.008307</td>\n",
              "      <td>0.056725</td>\n",
              "      <td>-0.093295</td>\n",
              "      <td>-0.112568</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.050620</td>\n",
              "      <td>0.081140</td>\n",
              "      <td>0.144121</td>\n",
              "      <td>-0.039702</td>\n",
              "      <td>-0.049772</td>\n",
              "      <td>0.042815</td>\n",
              "      <td>-0.108978</td>\n",
              "      <td>-0.047800</td>\n",
              "      <td>0.067301</td>\n",
              "      <td>0.014743</td>\n",
              "      <td>0.060716</td>\n",
              "      <td>0.077960</td>\n",
              "      <td>0.033055</td>\n",
              "      <td>0.074349</td>\n",
              "      <td>0.014529</td>\n",
              "      <td>0.177707</td>\n",
              "      <td>0.008008</td>\n",
              "      <td>0.004534</td>\n",
              "      <td>0.021897</td>\n",
              "      <td>0.037655</td>\n",
              "      <td>-0.049270</td>\n",
              "      <td>0.100082</td>\n",
              "      <td>0.050483</td>\n",
              "      <td>0.036574</td>\n",
              "      <td>0.223100</td>\n",
              "      <td>-0.109771</td>\n",
              "      <td>0.021588</td>\n",
              "      <td>-0.028094</td>\n",
              "      <td>0.000359</td>\n",
              "      <td>-0.026205</td>\n",
              "      <td>-0.081348</td>\n",
              "      <td>0.015330</td>\n",
              "      <td>0.000454</td>\n",
              "      <td>-0.081707</td>\n",
              "      <td>0.248751</td>\n",
              "      <td>0.066824</td>\n",
              "      <td>0.015781</td>\n",
              "      <td>0.138091</td>\n",
              "      <td>0.080157</td>\n",
              "      <td>0.043465</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6767</td>\n",
              "      <td>18601</td>\n",
              "      <td>0.087379</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.111482</td>\n",
              "      <td>-0.013900</td>\n",
              "      <td>0.166356</td>\n",
              "      <td>-0.107003</td>\n",
              "      <td>-0.047174</td>\n",
              "      <td>0.105376</td>\n",
              "      <td>0.003844</td>\n",
              "      <td>-0.054519</td>\n",
              "      <td>-0.169301</td>\n",
              "      <td>-0.051773</td>\n",
              "      <td>-0.009243</td>\n",
              "      <td>-0.104326</td>\n",
              "      <td>0.090970</td>\n",
              "      <td>-0.001350</td>\n",
              "      <td>0.129949</td>\n",
              "      <td>-0.006294</td>\n",
              "      <td>-0.037113</td>\n",
              "      <td>-0.059168</td>\n",
              "      <td>0.002869</td>\n",
              "      <td>0.056871</td>\n",
              "      <td>-0.111527</td>\n",
              "      <td>0.057331</td>\n",
              "      <td>0.115827</td>\n",
              "      <td>-0.120750</td>\n",
              "      <td>-0.243998</td>\n",
              "      <td>0.014521</td>\n",
              "      <td>0.031732</td>\n",
              "      <td>-0.017956</td>\n",
              "      <td>-0.059905</td>\n",
              "      <td>0.100081</td>\n",
              "      <td>-0.084298</td>\n",
              "      <td>-0.076452</td>\n",
              "      <td>...</td>\n",
              "      <td>0.122136</td>\n",
              "      <td>0.054549</td>\n",
              "      <td>0.127841</td>\n",
              "      <td>-0.036759</td>\n",
              "      <td>0.177010</td>\n",
              "      <td>-0.011135</td>\n",
              "      <td>-0.030538</td>\n",
              "      <td>-0.057015</td>\n",
              "      <td>-0.002947</td>\n",
              "      <td>-0.044422</td>\n",
              "      <td>-0.092602</td>\n",
              "      <td>-0.031829</td>\n",
              "      <td>-0.070936</td>\n",
              "      <td>0.118726</td>\n",
              "      <td>0.055969</td>\n",
              "      <td>0.046021</td>\n",
              "      <td>0.111103</td>\n",
              "      <td>0.013658</td>\n",
              "      <td>0.033671</td>\n",
              "      <td>-0.068293</td>\n",
              "      <td>-0.135699</td>\n",
              "      <td>-0.015757</td>\n",
              "      <td>0.136725</td>\n",
              "      <td>0.039441</td>\n",
              "      <td>0.116344</td>\n",
              "      <td>0.013046</td>\n",
              "      <td>0.056357</td>\n",
              "      <td>-0.182223</td>\n",
              "      <td>-0.026209</td>\n",
              "      <td>0.051943</td>\n",
              "      <td>0.103391</td>\n",
              "      <td>-0.082820</td>\n",
              "      <td>-0.086390</td>\n",
              "      <td>-0.027705</td>\n",
              "      <td>0.029504</td>\n",
              "      <td>0.074770</td>\n",
              "      <td>-0.007560</td>\n",
              "      <td>0.162806</td>\n",
              "      <td>0.003209</td>\n",
              "      <td>-0.018433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>7330</td>\n",
              "      <td>13775</td>\n",
              "      <td>0.079650</td>\n",
              "      <td>4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.002765</td>\n",
              "      <td>0.008395</td>\n",
              "      <td>0.062878</td>\n",
              "      <td>-0.008813</td>\n",
              "      <td>0.001408</td>\n",
              "      <td>-0.098664</td>\n",
              "      <td>-0.016436</td>\n",
              "      <td>0.034764</td>\n",
              "      <td>-0.201620</td>\n",
              "      <td>-0.195332</td>\n",
              "      <td>0.027565</td>\n",
              "      <td>-0.005032</td>\n",
              "      <td>0.132441</td>\n",
              "      <td>0.016829</td>\n",
              "      <td>-0.007709</td>\n",
              "      <td>-0.080260</td>\n",
              "      <td>-0.089661</td>\n",
              "      <td>-0.069177</td>\n",
              "      <td>0.012087</td>\n",
              "      <td>-0.002929</td>\n",
              "      <td>-0.007213</td>\n",
              "      <td>0.000401</td>\n",
              "      <td>0.059488</td>\n",
              "      <td>-0.092233</td>\n",
              "      <td>0.048568</td>\n",
              "      <td>-0.060568</td>\n",
              "      <td>0.107725</td>\n",
              "      <td>0.043173</td>\n",
              "      <td>-0.084226</td>\n",
              "      <td>-0.004409</td>\n",
              "      <td>0.071836</td>\n",
              "      <td>-0.095271</td>\n",
              "      <td>...</td>\n",
              "      <td>0.166638</td>\n",
              "      <td>0.102316</td>\n",
              "      <td>0.034506</td>\n",
              "      <td>0.009974</td>\n",
              "      <td>-0.000070</td>\n",
              "      <td>0.035868</td>\n",
              "      <td>0.072579</td>\n",
              "      <td>-0.067750</td>\n",
              "      <td>0.064437</td>\n",
              "      <td>0.019787</td>\n",
              "      <td>0.107589</td>\n",
              "      <td>0.039406</td>\n",
              "      <td>0.104356</td>\n",
              "      <td>0.054532</td>\n",
              "      <td>0.081679</td>\n",
              "      <td>0.044925</td>\n",
              "      <td>-0.029610</td>\n",
              "      <td>-0.107600</td>\n",
              "      <td>0.046889</td>\n",
              "      <td>0.218585</td>\n",
              "      <td>-0.035566</td>\n",
              "      <td>-0.157879</td>\n",
              "      <td>0.009063</td>\n",
              "      <td>0.075641</td>\n",
              "      <td>0.120833</td>\n",
              "      <td>-0.041328</td>\n",
              "      <td>0.074950</td>\n",
              "      <td>0.010033</td>\n",
              "      <td>0.067854</td>\n",
              "      <td>0.027069</td>\n",
              "      <td>-0.172570</td>\n",
              "      <td>0.015527</td>\n",
              "      <td>0.081971</td>\n",
              "      <td>-0.155895</td>\n",
              "      <td>-0.073155</td>\n",
              "      <td>0.069165</td>\n",
              "      <td>-0.094124</td>\n",
              "      <td>0.003157</td>\n",
              "      <td>0.046392</td>\n",
              "      <td>-0.060976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36350</th>\n",
              "      <td>10631</td>\n",
              "      <td>8941</td>\n",
              "      <td>0.052757</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.060657</td>\n",
              "      <td>0.006602</td>\n",
              "      <td>-0.042761</td>\n",
              "      <td>-0.141021</td>\n",
              "      <td>-0.029330</td>\n",
              "      <td>0.073773</td>\n",
              "      <td>0.133256</td>\n",
              "      <td>0.030237</td>\n",
              "      <td>-0.139839</td>\n",
              "      <td>-0.200256</td>\n",
              "      <td>-0.037065</td>\n",
              "      <td>-0.033882</td>\n",
              "      <td>0.137866</td>\n",
              "      <td>-0.072154</td>\n",
              "      <td>-0.033420</td>\n",
              "      <td>-0.068860</td>\n",
              "      <td>-0.072151</td>\n",
              "      <td>-0.008391</td>\n",
              "      <td>-0.020944</td>\n",
              "      <td>-0.041931</td>\n",
              "      <td>-0.032715</td>\n",
              "      <td>-0.054571</td>\n",
              "      <td>0.022601</td>\n",
              "      <td>0.016061</td>\n",
              "      <td>-0.089826</td>\n",
              "      <td>-0.043333</td>\n",
              "      <td>0.054503</td>\n",
              "      <td>-0.038660</td>\n",
              "      <td>-0.087692</td>\n",
              "      <td>0.011082</td>\n",
              "      <td>-0.085216</td>\n",
              "      <td>-0.033799</td>\n",
              "      <td>...</td>\n",
              "      <td>0.171402</td>\n",
              "      <td>-0.102182</td>\n",
              "      <td>-0.087317</td>\n",
              "      <td>0.022331</td>\n",
              "      <td>-0.051819</td>\n",
              "      <td>-0.072922</td>\n",
              "      <td>0.128392</td>\n",
              "      <td>-0.140946</td>\n",
              "      <td>0.046892</td>\n",
              "      <td>0.040500</td>\n",
              "      <td>0.010018</td>\n",
              "      <td>-0.049651</td>\n",
              "      <td>0.094855</td>\n",
              "      <td>0.157988</td>\n",
              "      <td>0.018679</td>\n",
              "      <td>-0.016248</td>\n",
              "      <td>-0.000061</td>\n",
              "      <td>-0.079540</td>\n",
              "      <td>0.009057</td>\n",
              "      <td>-0.011334</td>\n",
              "      <td>-0.097550</td>\n",
              "      <td>-0.162425</td>\n",
              "      <td>0.098933</td>\n",
              "      <td>-0.090534</td>\n",
              "      <td>0.024826</td>\n",
              "      <td>-0.067998</td>\n",
              "      <td>0.182982</td>\n",
              "      <td>-0.017912</td>\n",
              "      <td>0.014489</td>\n",
              "      <td>-0.072349</td>\n",
              "      <td>-0.036130</td>\n",
              "      <td>-0.085230</td>\n",
              "      <td>0.050138</td>\n",
              "      <td>-0.012807</td>\n",
              "      <td>-0.142169</td>\n",
              "      <td>-0.028768</td>\n",
              "      <td>0.053907</td>\n",
              "      <td>0.102137</td>\n",
              "      <td>0.159807</td>\n",
              "      <td>0.053687</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36351</th>\n",
              "      <td>10640</td>\n",
              "      <td>6064</td>\n",
              "      <td>0.024979</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.162245</td>\n",
              "      <td>0.058412</td>\n",
              "      <td>0.143848</td>\n",
              "      <td>-0.056713</td>\n",
              "      <td>0.059797</td>\n",
              "      <td>-0.016397</td>\n",
              "      <td>-0.111448</td>\n",
              "      <td>0.019914</td>\n",
              "      <td>-0.170310</td>\n",
              "      <td>-0.049726</td>\n",
              "      <td>0.054153</td>\n",
              "      <td>-0.097632</td>\n",
              "      <td>0.165177</td>\n",
              "      <td>0.021306</td>\n",
              "      <td>-0.017603</td>\n",
              "      <td>0.105568</td>\n",
              "      <td>0.042808</td>\n",
              "      <td>-0.068436</td>\n",
              "      <td>0.070142</td>\n",
              "      <td>-0.148948</td>\n",
              "      <td>0.046004</td>\n",
              "      <td>-0.207855</td>\n",
              "      <td>-0.050613</td>\n",
              "      <td>-0.019779</td>\n",
              "      <td>0.087157</td>\n",
              "      <td>0.059927</td>\n",
              "      <td>0.004096</td>\n",
              "      <td>-0.087161</td>\n",
              "      <td>-0.078214</td>\n",
              "      <td>-0.117559</td>\n",
              "      <td>-0.006011</td>\n",
              "      <td>-0.015239</td>\n",
              "      <td>...</td>\n",
              "      <td>0.070695</td>\n",
              "      <td>0.079213</td>\n",
              "      <td>0.111039</td>\n",
              "      <td>0.142315</td>\n",
              "      <td>-0.075669</td>\n",
              "      <td>0.062766</td>\n",
              "      <td>0.211464</td>\n",
              "      <td>-0.057568</td>\n",
              "      <td>-0.000392</td>\n",
              "      <td>0.257149</td>\n",
              "      <td>0.023474</td>\n",
              "      <td>0.101751</td>\n",
              "      <td>-0.023882</td>\n",
              "      <td>0.106894</td>\n",
              "      <td>0.096278</td>\n",
              "      <td>0.019058</td>\n",
              "      <td>-0.118753</td>\n",
              "      <td>-0.003807</td>\n",
              "      <td>-0.054926</td>\n",
              "      <td>-0.057489</td>\n",
              "      <td>-0.111173</td>\n",
              "      <td>-0.077310</td>\n",
              "      <td>0.018144</td>\n",
              "      <td>0.054874</td>\n",
              "      <td>-0.015829</td>\n",
              "      <td>-0.150477</td>\n",
              "      <td>0.104341</td>\n",
              "      <td>-0.128494</td>\n",
              "      <td>0.029212</td>\n",
              "      <td>-0.122297</td>\n",
              "      <td>-0.065515</td>\n",
              "      <td>0.090991</td>\n",
              "      <td>-0.058226</td>\n",
              "      <td>-0.207986</td>\n",
              "      <td>-0.048862</td>\n",
              "      <td>-0.145235</td>\n",
              "      <td>-0.141027</td>\n",
              "      <td>0.087585</td>\n",
              "      <td>0.024567</td>\n",
              "      <td>0.062614</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36352</th>\n",
              "      <td>10732</td>\n",
              "      <td>4193</td>\n",
              "      <td>0.039365</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36353</th>\n",
              "      <td>10849</td>\n",
              "      <td>18247</td>\n",
              "      <td>0.123088</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.049008</td>\n",
              "      <td>0.026732</td>\n",
              "      <td>0.005136</td>\n",
              "      <td>-0.125557</td>\n",
              "      <td>-0.093281</td>\n",
              "      <td>-0.000444</td>\n",
              "      <td>0.050112</td>\n",
              "      <td>-0.081743</td>\n",
              "      <td>-0.145108</td>\n",
              "      <td>-0.140468</td>\n",
              "      <td>-0.023113</td>\n",
              "      <td>0.074239</td>\n",
              "      <td>0.263424</td>\n",
              "      <td>0.045454</td>\n",
              "      <td>0.004337</td>\n",
              "      <td>0.016248</td>\n",
              "      <td>-0.043037</td>\n",
              "      <td>-0.079392</td>\n",
              "      <td>0.072912</td>\n",
              "      <td>-0.022953</td>\n",
              "      <td>-0.036790</td>\n",
              "      <td>-0.104922</td>\n",
              "      <td>0.072834</td>\n",
              "      <td>-0.093813</td>\n",
              "      <td>0.087270</td>\n",
              "      <td>-0.028751</td>\n",
              "      <td>0.117319</td>\n",
              "      <td>0.094863</td>\n",
              "      <td>-0.071290</td>\n",
              "      <td>0.046770</td>\n",
              "      <td>0.048349</td>\n",
              "      <td>-0.066488</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.017537</td>\n",
              "      <td>-0.023761</td>\n",
              "      <td>0.049918</td>\n",
              "      <td>-0.035833</td>\n",
              "      <td>-0.058291</td>\n",
              "      <td>0.171906</td>\n",
              "      <td>0.043123</td>\n",
              "      <td>0.038855</td>\n",
              "      <td>0.190608</td>\n",
              "      <td>0.019402</td>\n",
              "      <td>0.022427</td>\n",
              "      <td>0.082308</td>\n",
              "      <td>0.129576</td>\n",
              "      <td>0.060929</td>\n",
              "      <td>0.068040</td>\n",
              "      <td>0.183348</td>\n",
              "      <td>-0.122277</td>\n",
              "      <td>0.078537</td>\n",
              "      <td>0.145114</td>\n",
              "      <td>-0.045452</td>\n",
              "      <td>-0.104323</td>\n",
              "      <td>-0.045137</td>\n",
              "      <td>0.151454</td>\n",
              "      <td>0.137588</td>\n",
              "      <td>0.120422</td>\n",
              "      <td>-0.164580</td>\n",
              "      <td>0.016988</td>\n",
              "      <td>-0.013645</td>\n",
              "      <td>-0.005750</td>\n",
              "      <td>-0.008223</td>\n",
              "      <td>-0.089255</td>\n",
              "      <td>0.043370</td>\n",
              "      <td>0.047925</td>\n",
              "      <td>0.041238</td>\n",
              "      <td>0.083287</td>\n",
              "      <td>0.069084</td>\n",
              "      <td>0.045583</td>\n",
              "      <td>0.024629</td>\n",
              "      <td>0.059139</td>\n",
              "      <td>0.050852</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36354</th>\n",
              "      <td>10918</td>\n",
              "      <td>15588</td>\n",
              "      <td>0.171866</td>\n",
              "      <td>4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>36355 rows × 264 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "       user_id  item_id       sim  ...  img_embed_125  img_embed_126 img_embed_127\n",
              "0         6780     8671  0.038451  ...       0.062916       0.056456     -0.030223\n",
              "1         8322    20464  0.198966  ...       0.106130       0.120104     -0.013401\n",
              "2         1473     2834  0.258037  ...       0.138091       0.080157      0.043465\n",
              "3         6767    18601  0.087379  ...       0.162806       0.003209     -0.018433\n",
              "4         7330    13775  0.079650  ...       0.003157       0.046392     -0.060976\n",
              "...        ...      ...       ...  ...            ...            ...           ...\n",
              "36350    10631     8941  0.052757  ...       0.102137       0.159807      0.053687\n",
              "36351    10640     6064  0.024979  ...       0.087585       0.024567      0.062614\n",
              "36352    10732     4193  0.039365  ...       0.000000       0.000000      0.000000\n",
              "36353    10849    18247  0.123088  ...       0.024629       0.059139      0.050852\n",
              "36354    10918    15588  0.171866  ...       0.000000       0.000000      0.000000\n",
              "\n",
              "[36355 rows x 264 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fwH-NHJHcYyg",
        "colab_type": "text"
      },
      "source": [
        "# Data Split (Train/Val)\n",
        "```\n",
        "对每个phase,\n",
        "\n",
        "     对每个user，\n",
        "\n",
        "        获取其交互序列，交互序列的最后一个加入到验证集，其余加入训练集。\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UELUry7Lcbfx",
        "colab_type": "code",
        "outputId": "aa4f18ba-0b7f-4be8-b101-c555cf75a23c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 104
        }
      },
      "source": [
        "# create offline val data\n",
        "import pandas as pd  \n",
        "import os\n",
        "offline_answer_path = 'offline_underexpose_answer'\n",
        "offline_test_path = 'offline_underexpose_test' \n",
        "if not os.path.exists(offline_answer_path): os.mkdir(offline_answer_path)\n",
        "if not os.path.exists(offline_test_path): os.mkdir(offline_test_path)\n",
        "for phase in range(now_phase+1):\n",
        "  click_test = pd.read_csv('underexpose_test/underexpose_test_click-{}.csv'.format(phase), header=None,\n",
        "                            names=['user_id', 'item_id', 'time'])\n",
        "  click_test = click_test.sort_values(by=['user_id', 'time'])\n",
        "  click_answer = click_test.groupby('user_id').tail(1)\n",
        "  # if phase == 4:\n",
        "  #   print(click_test[click_test['user_id']==14997])\n",
        "  click_test = click_test.groupby('user_id').apply(lambda x:x[:-1] if len(x)>1 else x[:]).reset_index(drop=True)\n",
        "  # if phase == 4:\n",
        "  #   print(\"----\")\n",
        "  #   print(click_test[click_test['user_id']==14997])\n",
        "  click_qtime = click_answer[['user_id', 'time']]\n",
        "\n",
        "  click_answer.to_csv(offline_answer_path + '/underexpose_test_qtime_with_answer-{}.csv'.format(phase), index=False, header=None)\n",
        "  click_test.to_csv(offline_test_path + '/underexpose_test_click-{}.csv'.format(phase), index=False, header=None)\n",
        "  click_qtime.to_csv(offline_test_path + '/underexpose_test_qtime-{}.csv'.format(phase), index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "      user_id  item_id      time\n",
            "9664    14997    14566  0.984101\n",
            "----\n",
            "       user_id  item_id      time\n",
            "11748    14997    14566  0.984101\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GaQlxwnRhyz8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# create offline val data\n",
        "import pandas as pd  \n",
        "import numpy as np\n",
        "import os\n",
        "\n",
        "offline_answer_path = 'offline_underexpose_answer_2'\n",
        "offline_test_path = 'offline_underexpose_test_2' \n",
        "offline_train_path = 'offline_underexpose_train_2'\n",
        "sample_user_num = 1600\n",
        "if not os.path.exists(offline_answer_path): os.mkdir(offline_answer_path)\n",
        "if not os.path.exists(offline_test_path): os.mkdir(offline_test_path)\n",
        "if not os.path.exists(offline_train_path): os.mkdir(offline_train_path)\n",
        "\n",
        "np.random.seed(1234)\n",
        "\n",
        "for phase in range(now_phase+1):\n",
        "  click_train = pd.read_csv('underexpose_train/underexpose_train_click-{}.csv'.format(phase), header=None,\n",
        "                            names=['user_id', 'item_id', 'time'])\n",
        "  all_user_ids = click_train['user_id'].unique()\n",
        "  \n",
        "  sample_user_ids = np.random.choice(all_user_ids, size=1600, replace=False)\n",
        "\n",
        "  click_test = click_train[click_train['user_id'].isin(sample_user_ids)]\n",
        "  click_train = click_train[~click_train['user_id'].isin(sample_user_ids)]\n",
        "\n",
        "  click_test = click_test.sort_values(by=['user_id', 'time'])\n",
        "  click_answer = click_test.groupby('user_id').tail(1)\n",
        "  click_test = click_test.groupby('user_id').apply(lambda x:x[:-1]).reset_index(drop=True)\n",
        "  click_answer = click_answer[click_answer['user_id'].isin(click_test['user_id'].unique())] # 防止有些用户只有1个点击数据，去掉\n",
        "  click_test = click_test[click_test['user_id'].isin(click_answer['user_id'].unique())]\n",
        "  click_qtime = click_answer[['user_id', 'time']]\n",
        "\n",
        "  click_train.to_csv(offline_train_path + '/underexpose_train_click-{}.csv'.format(phase), index=False, header=None)\n",
        "  click_answer.to_csv(offline_answer_path + '/underexpose_test_qtime_with_answer-{}.csv'.format(phase), index=False, header=None)\n",
        "  click_test.to_csv(offline_test_path + '/underexpose_test_click-{}.csv'.format(phase), index=False, header=None)\n",
        "  click_qtime.to_csv(offline_test_path + '/underexpose_test_qtime-{}.csv'.format(phase), index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UGVKPFc0EdaV",
        "colab_type": "code",
        "outputId": "c48aa47a-5cb6-4627-c47b-fc8151cd616c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 139
        }
      },
      "source": [
        "def get_user_item_dict(df, user_col='user_id', item_col='item_id', time_col='time'):\n",
        "    user_item_ = df.groupby(user_col)[item_col].agg(set).reset_index()\n",
        "    user_item_dict = dict(zip(user_item_[user_col], user_item_[item_col]))\n",
        "    return user_item_dict\n",
        "\n",
        "def get_total_click():\n",
        "\n",
        "  total_click = pd.DataFrame()\n",
        "  for c in range(now_phase + 1):\n",
        "      print('phase:', c)\n",
        "      click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                                names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "      click_train['type']=0\n",
        "      click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                                names=['user_id', 'item_id', 'time'])\n",
        "      click_test['type']=1\n",
        "      \n",
        "      click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                                names=['user_id', 'time'])\n",
        "      click_q_time['type']=2\n",
        "      all_click = click_train.append(click_test)\n",
        "      \n",
        "      all_click = all_click.append(click_q_time)\n",
        "      \n",
        "      all_click['phase']=c\n",
        "      total_click = total_click.append(all_click)\n",
        "  #可能把某一阶段数据drop掉\n",
        "  # total_click = total_click.drop_duplicates(['user_id','item_id','time'])\n",
        "  \n",
        "  return total_click\n",
        "total_click = get_total_click()\n",
        "\n",
        "# all_click = total_click[(total_click['phase']==1)]\n",
        "# all_click[all_click['user_id']==122]\n",
        "# all_user_item_dict = get_user_item_dict(total_click, )"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "phase: 0\n",
            "phase: 1\n",
            "phase: 2\n",
            "phase: 3\n",
            "phase: 4\n",
            "phase: 5\n",
            "phase: 6\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7p5RWRDTPSob",
        "colab_type": "text"
      },
      "source": [
        "# Running"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0pQu8tEH1TEO",
        "colab_type": "text"
      },
      "source": [
        "## Item-CF - J"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "001D8Zocu5l5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_item_timeline_dict(whole_click):\n",
        "  item_timeline = whole_click.sort_values(by=['item_id','time']).groupby('item_id').agg({'time':['min','max']}).reset_index()\n",
        "  item_timeline.columns=['item_id','min_time','max_time']\n",
        "  item_timeline_dict = {}\n",
        "  for row in item_timeline.itertuples():\n",
        "    if row.max_time==row.min_time:\n",
        "      row.max_time=1\n",
        "    item_timeline_dict[row.item_id]={'max_time':row.max_time,'min_time':row.min_time}\n",
        "  item_timeline_dict = item_timeline_dict.merge(whole_click.groupby('item_id')['time'].agg({'count'}).reset_index(),on='item_id',how='left')\n",
        "  return item_timeline_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DRYWcQ4mwCUE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_day_duration_from_time(t1,t2):\n",
        "  \n",
        "  return abs((trans_time(t1))-(trans_time(t2)))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8okItHXawT_8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def trans_time(time_delta):\n",
        "  st = (2020,4,10,0,0,0,0,0,0)\n",
        "  time_end = time.mktime(t)\n",
        "  timestamp = time_end * time_delta\n",
        "  struct_time = time.gmtime(timestamp)\n",
        "  return struct_time.tm_yday"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "od0XUqU0OegA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "for i,qtime in tqdm(list(zip(click_q_time['user_id'],click_qtime['time']))):\n",
        "  user_item_dict2 = [ (item,time) for item, time in user_item_dict[i] if time<=qtime]\n",
        "  if len(user_item_dict2)==0:\n",
        "    print('user={},time={}'.format(i,qtime))\n",
        "    print(user_item_dict[i])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OwGXobE-aehO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "t = result\n",
        "new = pd.concat([t.iloc[:,0],t.iloc[:,1:].applymap(lambda x:x[:-2])],axis=1)\n",
        "new.to_csv(output_path + '/baseline_itemcf_J_v0.1.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6CwsxzQAregT",
        "colab_type": "code",
        "outputId": "6203cd9e-7255-4734-8e61-67b6a1a24570",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 404
        }
      },
      "source": [
        "ids = total_click[(total_click['phase']==1)&(total_click['type']!=2)].head()['item_id'].unique()\n",
        "ts = total_click[(total_click['type']!=2)&(total_click['item_id'].isin(ids))]\n",
        "ts"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>time</th>\n",
              "      <th>type</th>\n",
              "      <th>phase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4965</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.983763</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66047</th>\n",
              "      <td>31011</td>\n",
              "      <td>80.0</td>\n",
              "      <td>0.983832</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66049</th>\n",
              "      <td>6649</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0.983951</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>66050</th>\n",
              "      <td>32578</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0.983902</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131922</th>\n",
              "      <td>13492</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.983778</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>253781</th>\n",
              "      <td>5885</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0.984124</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>253782</th>\n",
              "      <td>8325</td>\n",
              "      <td>146.0</td>\n",
              "      <td>0.984119</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282251</th>\n",
              "      <td>12333</td>\n",
              "      <td>18.0</td>\n",
              "      <td>0.984100</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>282255</th>\n",
              "      <td>9963</td>\n",
              "      <td>80.0</td>\n",
              "      <td>0.984283</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13833</th>\n",
              "      <td>15571</td>\n",
              "      <td>80.0</td>\n",
              "      <td>0.984223</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>188 rows × 5 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        user_id  item_id      time  type  phase\n",
              "0          4965     18.0  0.983763     0      0\n",
              "66047     31011     80.0  0.983832     0      0\n",
              "66049      6649    146.0  0.983951     0      0\n",
              "66050     32578    146.0  0.983902     0      0\n",
              "131922    13492     18.0  0.983778     0      0\n",
              "...         ...      ...       ...   ...    ...\n",
              "253781     5885    146.0  0.984124     0      6\n",
              "253782     8325    146.0  0.984119     0      6\n",
              "282251    12333     18.0  0.984100     0      6\n",
              "282255     9963     80.0  0.984283     0      6\n",
              "13833     15571     80.0  0.984223     1      6\n",
              "\n",
              "[188 rows x 5 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 206
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ldXXrKZrln1v",
        "colab_type": "code",
        "outputId": "72980076-f60a-4f90-bbe2-00650cfe83fd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 584
        }
      },
      "source": [
        "# for i,qtime in tqdm(list(zip(click_q_time['user_id'],click_q_time['time']))):\n",
        "#   user_item_dict[i] = [ (item,time) for item, time in user_item_dict[i] if time<=qtime] #filter with qtimet\n",
        "# t = total_click[(total_click['phase']==c)&(total_click['type']!=2)]\n",
        "total_click[total_click['user_id']==14997]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>time</th>\n",
              "      <th>type</th>\n",
              "      <th>phase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>29276</th>\n",
              "      <td>14997</td>\n",
              "      <td>115760.0</td>\n",
              "      <td>0.983776</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37286</th>\n",
              "      <td>14997</td>\n",
              "      <td>7811.0</td>\n",
              "      <td>0.983829</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97073</th>\n",
              "      <td>14997</td>\n",
              "      <td>26776.0</td>\n",
              "      <td>0.983930</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>128760</th>\n",
              "      <td>14997</td>\n",
              "      <td>64301.0</td>\n",
              "      <td>0.983829</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>795</th>\n",
              "      <td>14997</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.984101</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>105546</th>\n",
              "      <td>14997</td>\n",
              "      <td>14566.0</td>\n",
              "      <td>0.984101</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>214213</th>\n",
              "      <td>14997</td>\n",
              "      <td>74285.0</td>\n",
              "      <td>0.984053</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12250</th>\n",
              "      <td>14997</td>\n",
              "      <td>35659.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32653</th>\n",
              "      <td>14997</td>\n",
              "      <td>56407.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>117599</th>\n",
              "      <td>14997</td>\n",
              "      <td>65236.0</td>\n",
              "      <td>0.984252</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135038</th>\n",
              "      <td>14997</td>\n",
              "      <td>43798.0</td>\n",
              "      <td>0.984260</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>167603</th>\n",
              "      <td>14997</td>\n",
              "      <td>102131.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>171098</th>\n",
              "      <td>14997</td>\n",
              "      <td>24548.0</td>\n",
              "      <td>0.984101</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>242309</th>\n",
              "      <td>14997</td>\n",
              "      <td>93433.0</td>\n",
              "      <td>0.984256</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>244880</th>\n",
              "      <td>14997</td>\n",
              "      <td>5017.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>248080</th>\n",
              "      <td>14997</td>\n",
              "      <td>43613.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>252472</th>\n",
              "      <td>14997</td>\n",
              "      <td>101615.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>309359</th>\n",
              "      <td>14997</td>\n",
              "      <td>105148.0</td>\n",
              "      <td>0.984254</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        user_id   item_id      time  type  phase\n",
              "29276     14997  115760.0  0.983776     0      0\n",
              "37286     14997    7811.0  0.983829     0      0\n",
              "97073     14997   26776.0  0.983930     0      0\n",
              "128760    14997   64301.0  0.983829     0      0\n",
              "795       14997       NaN  0.984101     2      4\n",
              "105546    14997   14566.0  0.984101     0      5\n",
              "214213    14997   74285.0  0.984053     0      5\n",
              "12250     14997   35659.0  0.984254     0      6\n",
              "32653     14997   56407.0  0.984254     0      6\n",
              "117599    14997   65236.0  0.984252     0      6\n",
              "135038    14997   43798.0  0.984260     0      6\n",
              "167603    14997  102131.0  0.984254     0      6\n",
              "171098    14997   24548.0  0.984101     0      6\n",
              "242309    14997   93433.0  0.984256     0      6\n",
              "244880    14997    5017.0  0.984254     0      6\n",
              "248080    14997   43613.0  0.984254     0      6\n",
              "252472    14997  101615.0  0.984254     0      6\n",
              "309359    14997  105148.0  0.984254     0      6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 214
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zYo4zv6Kk7q1",
        "colab_type": "code",
        "outputId": "d44c6b19-5dc3-4e84-d386-e9e5329ea126",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "referenced_widgets": [
            "809b0aca137141128efc10ed1ef2faeb",
            "9a9d01811e344e758adb561c28a1866e",
            "d63dc21d620846c491d1a72560e602b7",
            "5807547551e94bd9b86656edc725a701",
            "77afb896031344398301b22fdc416932",
            "dc6efbd9fa6c4a839a771da1736a5d24",
            "181c71656f6d4ff4bf3f15d4d2260a02",
            "9d9f21dc17294a25b9f18ae2a444c94e",
            "58a2d3d73d87484db8f9a99958825fde",
            "524ae7f2d8ca43b683c3bd2236991a37",
            "bf7eeb4ba3b24b7bba8a8d09065ae1d0",
            "6058dce096454fe499f4ba44d8583d38",
            "bfa3c628f71f46ef8784134aac17f66c",
            "4ac48c136fdf43c0aa811292876082e5",
            "717a32df96494f0d94c0f762508d3141",
            "773284653de444aabeaf2074162da8eb",
            "ffcf34330f9147a7be7f99fd59d91832",
            "7da92a7186a24cfc9824099f97b09e4f",
            "f7bcb8bde1ac4ee49cb5bc58caad107b",
            "d720c55a74a7463ba3a2aefd639068dc",
            "ffed53ce858d4f2ab4582dfbd584d8da",
            "f8bed7b5c1fc445db3a40b9f721cfab9",
            "4b09a7db100045a99533a858237baca0",
            "18208e14bf4845428a4b5f68ebaae8e2",
            "03cd63a3af884df78a5a57d6bbd9e347",
            "d8afd22cdf6e423aae28a3878eea92fe",
            "916d2afd7cc741c19cf8dbc6e8bb157d",
            "115a8793bd424cc98cb2696d4969708f",
            "b77318fd30fd470f8436bc356bfbd95b",
            "b82fc86d72c442119c038947771be5b9",
            "e98d6edf08eb4ed682da65e9e47ea67c",
            "2a806c678c0c40cdb5fd0c1be2af2229",
            "930543ac2019439aa4185752be4f65d9",
            "3e0ddf5b5fc944bf8b9379d4b11846ba",
            "9ab38c8984624e28ad0f186bb20a5e65",
            "dfb8bc3b2b474b7aa807e417f9b35867",
            "d58e1dbb8f82414d8be7d44ef1a302d3",
            "9c3a167c4eda47cd818eacb02477cc95",
            "9b4a63947f6e40c3995fc74882066204",
            "e590d5a7193843c2b29b678a786fa78b",
            "22efcdcef74a4fce90b5d2e97033030b",
            "e13d22932bdc496cb977c0c7c7308794",
            "bd0011de4de64e6e9428c8a0f215f87e",
            "2b773eef42be4355a94a582c95a0a236",
            "0e3808f1f4874846af651763a39ee270",
            "d097cf864d6e4c40871b9c3059faf40f",
            "474351cf7a7342acaa44ad17a6cc3817",
            "f3716390107442e29faff9b4b60c5d6a",
            "ee6a1c462e8841fa8d62621e05cff5b4",
            "adc386373c7f44d2ac628822f8beeb30",
            "261968c7d78849acb7096dbbf5adcbd9",
            "c930ce737a7744da9ebc9bf8b9187ab5",
            "5be0ac91af614fa0b562e71c6bb2268b",
            "defc4c939481408bb49f0a047d45b754",
            "b8bd394e708a4b01a2d03ce5d332c577",
            "aee5293446c5499b8ee37866795ff185",
            "9db7ebf119724101aa6b83cc46393a7f",
            "0a330de8575345568a6ea6e2af49c070",
            "41477fd435ce47409f15a4875ecd04b5",
            "12978f03dc764a6ca137d22dc15ba054",
            "05ab56ba18c14cfd92344e3f4d259623",
            "268f8784243340cab8ecd7f8ffbe22ce",
            "fce8e4fdc2394384982169307a70eadb",
            "0ab4b1c85e3a43c99cadffdc26d88c4b",
            "4939ef795fee4009a773840310c5a9ae",
            "3bf41811e1c64e6f83916114099c1215",
            "3cca00dd596e45459517b0e86c8e0059",
            "026fe13db0c449068304923f77562c5a",
            "7d7c3d444aaf42b7a82dc5a927291e9d",
            "2ba29718fb924dfe8428a117fd581879",
            "a1e0a16661494bd9a8ffa125f6688167",
            "ddc77f6961b24822b02c088f563b7abf",
            "e2e5859868204ca08621b108a0bc4564",
            "38a93060415e4e7b92488bde827c526f",
            "084034b75fb04632a6e6d6426b85bf8c",
            "acb6793b0103400f97eb9e5ecbe64466",
            "438666142a4a4261b1b1b27b63e287f8",
            "3f6eaa48314c415a9fa275fa1dccafee",
            "0fdc15a0a9864f6aad6e52c60536c734",
            "c0e6f2852ea64d9c9b7ccbf796d7b91d",
            "3daa60fbb1c84de79b4b4a4cb2c41ece",
            "48086170d70e4520befedf6d4bbd2a49",
            "23106058b8bd4b1583e7d477ad178666",
            "749d5730bc3b4d3e842bb36378aec6fe",
            "e08402dcba6e4e15bf71beb3a8f39087",
            "28c2fbcf8f0245319b79a9d3fd4e903b",
            "515c77e831d2465ebcb211d6ec69162a",
            "97233ff171d24a91983475f9ceb411e4",
            "56f916e9d93b4095aa52be70a60eafce",
            "a47ac5d34f8441d5a54aa2c23d145155",
            "d4386134300841d59e58a5d0347d4605",
            "27b37d01fa8241edb623e90c622a7b0c",
            "d0f864811f054da98a8391a3ff18ee8e",
            "0b999e0b2e6b4ddbb29239b3ccb47feb",
            "5e76a15a48314ad2a0a1a5fbc441fb0c",
            "b1e6e16249044c2c9751a1b826c95e97",
            "ce76988732fd4b56b2e340cbbd1e69e4",
            "5dec5642ac9b47d8bce08c5f3061ad1b",
            "043041e1bd2f4e58be86e4ad6670ad7e",
            "5ab3a9588f98424c8efe3e2f944fce5a",
            "f02c9e90fe024a2598dfaef13ab4da10",
            "3a5d0c7147bc4ca19de8bd6774c4a9fa",
            "5b6dbe10a71043e094d0524c84581d2d",
            "d211658c94ae47398aa4b8e9e816b0dc",
            "69ef87a3234b4296a61d0d1c35422361",
            "736525f135f74489bd64c856941c7541",
            "758420cb6baa45028950d1b826cff28b",
            "1a3e3e7f10f14dbeb242ba6857b8439a",
            "0308960e089142c9836cc308de71895f",
            "ce7c86700f19452c8e03c1a16a64e205",
            "a6700eaf38b048f08443b624179426ef",
            "0d8c2180f9ec44eb9315794268bfe5cf",
            "c3ce05db74b241018a6b8a9a4b6f1084",
            "226ece4b2afa4309aae06f9c82db1a06",
            "d0ba92ec49344eeb88f481b1fa818bd7",
            "224d4b670da94f0db31c8dc209dfa5b7",
            "a901887ae9ed415485538befda5d0c90",
            "bb4503aa734645a48aab60345ff6f752",
            "671ec9ea0c5649c6abd71ebf3d753eca",
            "68d1974fc1c4475b96223d69ff188c6f",
            "ba9563cea7204913b8832bbceea5fb2c",
            "31777a24d14b4bad9b6b7ff33db0e647",
            "085123fcf66441c287fca68568b02ae9",
            "d11a9315700849c4afbe99e5d387894e",
            "d2e91e415bf04d5ca8925af0af8a4ba0",
            "85a27a84525946e1a8a7ab9f1450210a",
            "90eea0cf768e466f932576cd60a55042",
            "53f8811d52314612820fb83f4a37f44e",
            "69d3cd4481814b109993aa5ca8ab1064",
            "baff81a6987e4fdfb352d0deed8fac86",
            "d76ea5dac2df4e55b9ed7248c15f5230",
            "96229023c6fc45b29c58669b269ab2ce",
            "837f6faa07fa44a8a1841db1fb7968e5",
            "8d5ea9bd9cea4aef9a690149d40206c0",
            "5594f07565084d47bab63ff863c25fbb",
            "4696512cefe04eba89de0944e6065967",
            "a02ef8a9a4464e1cac37da9d2573ed13",
            "be0c0d651913452e8310bfbf2bcb87d3",
            "e7db0ea45217433b83a272739b6b47ef",
            "123ebc95c4fb44aa9f96a937f83cebfb",
            "1efb7cb4330f4f2c9f36d6dfeed48d58",
            "a00f9653c0fe434d979a6ea73f4dc5a7",
            "5fd55f88642b422aa0230eb538dccb83",
            "d7019a5011f54e448c526e80007f5099",
            "46d7311eb8a64d568b4fb64a18e69dd4",
            "100b6ff5b7e34f0b910d754dcded2317",
            "f546cc41b9e749488e9b2adf56dde795",
            "30f42aff129c46fea91903eec4e365ad",
            "93532b0545dd4661b3782bc04e2bab32",
            "171f1c22c7c443ec8394d63c635bb9d7",
            "2ddaed1774cd4ca88c5bf84a55fbf1de",
            "893de12c8f9443718fd919ae4f0a634e",
            "4c1b17514f8d43e78584ec460a5542b8",
            "7b0a819d8bd047d6ab2f406740e76a2a",
            "24024af749984ccfb9072af7e08c297d",
            "89eaf4c570d64ae9a3fadbb519d9131f",
            "fbb69efc9b624d98858bed7bf51820a7",
            "ecd0c9246915411ab53d2d9382b28a2f",
            "abf29a920b424513a921df8c34043467",
            "1c3e24ded5c64a509e1838a495e862e8",
            "c623080f863e480f81027b640b35363e",
            "51d00a34aa1e483cbd8e31188d1582db",
            "e6c8344eebff4ab2961bf76107139f65",
            "1b16ff6546ac46de95ea58ddb1fc39ba",
            "7737f9233d44429a880966fb7602763a",
            "0048faace94a453fac7a23e1d8b5e6c8",
            "ebd825d733614e1fae33173432bbe378",
            "4536fbbac37c414893d51c36c7f6d9e0"
          ]
        }
      },
      "source": [
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "from tqdm.notebook import tqdm\n",
        "\n",
        "whole_click = pd.DataFrame()\n",
        "total_click = get_total_click()\n",
        "for c in range(now_phase + 1):\n",
        "      print('phase:', c)\n",
        "#     click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "#                               names=['user_id', 'item_id', 'time'])\n",
        "#     click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "#                               names=['user_id', 'item_id', 'time'])\n",
        "#     click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "#                               names=['user_id', 'time'])\n",
        "\n",
        "      \n",
        "      # click_train = total_click[(total_click['phase']=c)&(total_click['type']==0)]\n",
        "      # click_test = total_click[(total_click['phase']=c)&(total_click['type']==1)]\n",
        "      click_q_time = total_click[(total_click['phase']==c)&(total_click['type']==2)]\n",
        "      max_time = click_q_time['time'].max()\n",
        "      min_time = click_q_time['time'].min()\n",
        "\n",
        "      # 0.22\n",
        "      # all_click = total_click[(total_click['time']<=max_time)&(total_click['type']!=2)]\n",
        "\n",
        "      #uk\n",
        "      all_click = total_click[(total_click['phase']==c)&(total_click['type']!=2)]\n",
        "      all_click = all_click.drop_duplicates(['user_id','item_id','time'])\n",
        "      all_click = all_click.astype(int) #float64 to int\n",
        "      \n",
        "      # 0.06 ???\n",
        "      # phase_item_ids = total_click[(total_click['phase']==c)&(total_click['type']!=2)]['item_id'].unique()\n",
        "      # all_click = total_click[(total_click['type']!=2)&(total_click['item_id'].isin(phase_item_ids))]\n",
        "      # all_click = all_click.drop_duplicates(['user_id','item_id','time'])\n",
        "      # all_click = all_click.astype(int)\n",
        "\n",
        "\n",
        "      user_item_dict = get_user_item_time_dict(all_click, )## TODO use total user history\n",
        "      item_sim_list, _ = get_sim_item(all_click, 'user_id', 'item_id', use_iif=True) \n",
        "      print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "      top_item_click = all_click['item_id'].value_counts().index[0]\n",
        "      # for i in tqdm(click_q_time['user_id'].unique()):\n",
        "      for i,qtime in tqdm(list(zip(click_q_time['user_id'],click_q_time['time']))):\n",
        "          user_item_dict[i] = [ (item,time) for item, time in user_item_dict[i] if time<=qtime] #filter with qtime\n",
        "          rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, 800, 50)\n",
        "          if len(rank_item) == 0:\n",
        "              print('user={} has no recommend results...'.format(i))\n",
        "              rank_item = [(top_item_click, 0.0)] # fake \n",
        "          for j in rank_item:\n",
        "              recom_item.append([i, j[0], j[1]])\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = total_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_J_v0.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_J_v0.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n",
            "phase: 1\n",
            "phase: 2\n",
            "phase: 3\n",
            "phase: 4\n",
            "phase: 5\n",
            "phase: 6\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "809b0aca137141128efc10ed1ef2faeb",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=18505.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "58a2d3d73d87484db8f9a99958825fde",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=40775.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "40775 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ffcf34330f9147a7be7f99fd59d91832",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1663.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "03cd63a3af884df78a5a57d6bbd9e347",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=18672.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "930543ac2019439aa4185752be4f65d9",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=41409.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "41409 18672\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "22efcdcef74a4fce90b5d2e97033030b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1726.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ee6a1c462e8841fa8d62621e05cff5b4",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=18398.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9db7ebf119724101aa6b83cc46393a7f",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=41031.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "41031 18398\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4939ef795fee4009a773840310c5a9ae",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1690.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e2e5859868204ca08621b108a0bc4564",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=18821.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "3daa60fbb1c84de79b4b4a4cb2c41ece",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=42815.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "42815 18821\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "56f916e9d93b4095aa52be70a60eafce",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1675.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "phase: 4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ce76988732fd4b56b2e340cbbd1e69e4",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=18618.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "69ef87a3234b4296a61d0d1c35422361",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=42840.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "42840 18618\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c3ce05db74b241018a6b8a9a4b6f1084",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1708.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "phase: 5\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ba9563cea7204913b8832bbceea5fb2c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=19459.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "69d3cd4481814b109993aa5ca8ab1064",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=45630.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "45630 19459\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "a02ef8a9a4464e1cac37da9d2573ed13",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1798.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "phase: 6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "46d7311eb8a64d568b4fb64a18e69dd4",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=20396.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "4c1b17514f8d43e78584ec460a5542b8",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=48664.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "48664 20396\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c623080f863e480f81027b640b35363e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1821.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "604050\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uKGr8pbeFUjj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "for i,qtime in tqdm(list(zip(click_q_time['user_id'],click_q_time['time']))):\n",
        "  if i==14997:\n",
        "    print(user_item_dict[i])\n",
        "  user_item_dict[i] = [ (item,time) for item, time in user_item_dict[i] if time<=qtime]\n",
        "  if i==14997:\n",
        "    print(user_item_dict[i])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NrD3MW6nm0tj",
        "colab_type": "code",
        "outputId": "47d9a839-c3d1-4f7f-be80-a45b503a688d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 199
        }
      },
      "source": [
        "# user_item_dict[122]\n",
        "total_click = get_total_click()\n",
        "all_click = total_click[(total_click['phase']==c)]\n",
        "all_click[all_click['user_id']==122]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "phase: 0\n",
            "phase: 1\n",
            "phase: 2\n",
            "phase: 3\n",
            "phase: 4\n",
            "phase: 5\n",
            "phase: 6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>time</th>\n",
              "      <th>type</th>\n",
              "      <th>phase</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>122</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.983941</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   user_id  item_id      time  type  phase\n",
              "6      122      NaN  0.983941     2      1"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 189
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2lDi_SXHZjRq",
        "colab_type": "code",
        "outputId": "2238dcd8-2d71-4d2b-ab55-a5ffd300fe1f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_J_v0.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "604050\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Kd0D3hw-oqtl",
        "colab_type": "code",
        "outputId": "23b91bd0-f1ee-4cea-880b-2b1c0115e5fe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 558
        }
      },
      "source": [
        "user_item_dict[44]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(114125, 0.983762531584961),\n",
              " (27161, 0.9838729464302436),\n",
              " (100713, 0.9838791234536428),\n",
              " (100713, 0.9838791234536428),\n",
              " (100713, 0.9838791234536428),\n",
              " (109463, 0.98387912723897),\n",
              " (109463, 0.98387912723897),\n",
              " (109463, 0.98387912723897),\n",
              " (88385, 0.983879170139347),\n",
              " (88385, 0.983879170139347),\n",
              " (88385, 0.983879170139347),\n",
              " (1609, 0.9838862947563672),\n",
              " (1609, 0.9838862947563672),\n",
              " (1609, 0.9838862947563672),\n",
              " (71517, 0.9839017704364792),\n",
              " (71517, 0.9839017704364792),\n",
              " (71517, 0.9839017704364792),\n",
              " (25353, 0.983901849928354),\n",
              " (25353, 0.983901849928354),\n",
              " (25353, 0.983901849928354),\n",
              " (79761, 0.983901861915224),\n",
              " (56160, 0.9839018953522828),\n",
              " (56160, 0.9839018953522828),\n",
              " (25473, 0.9839019862001398),\n",
              " (25473, 0.9839019862001398),\n",
              " (25164, 0.9839020246843015),\n",
              " (25164, 0.9839020246843015),\n",
              " (42253, 0.984002609665262),\n",
              " (42253, 0.984002609665262),\n",
              " (9331, 0.9840983033723576),\n",
              " (64650, 0.9840983052650214)]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QykegQeSo-eZ",
        "colab_type": "code",
        "outputId": "608e0e34-2571-4ed5-b3ae-1de3840445b0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "list(zip(click_q_time['user_id'],click_qtime['time']))[2]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(44, 0.9841980063720384)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6csuRJuNpdm1",
        "colab_type": "code",
        "outputId": "5e9e83e8-f4e6-4da8-ae97-32e8048de871",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 680
        }
      },
      "source": [
        "\n",
        "true_user_item_dict[44]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(114125, 0.983762531584961),\n",
              " (27161, 0.9838729464302436),\n",
              " (100713, 0.9838791234536428),\n",
              " (100713, 0.9838791234536428),\n",
              " (100713, 0.9838791234536428),\n",
              " (109463, 0.98387912723897),\n",
              " (109463, 0.98387912723897),\n",
              " (109463, 0.98387912723897),\n",
              " (88385, 0.983879170139347),\n",
              " (88385, 0.983879170139347),\n",
              " (88385, 0.983879170139347),\n",
              " (1609, 0.9838862947563672),\n",
              " (1609, 0.9838862947563672),\n",
              " (1609, 0.9838862947563672),\n",
              " (71517, 0.9839017704364792),\n",
              " (71517, 0.9839017704364792),\n",
              " (71517, 0.9839017704364792),\n",
              " (25353, 0.983901849928354),\n",
              " (25353, 0.983901849928354),\n",
              " (25353, 0.983901849928354),\n",
              " (79761, 0.983901861915224),\n",
              " (56160, 0.9839018953522828),\n",
              " (56160, 0.9839018953522828),\n",
              " (25473, 0.9839019862001398),\n",
              " (25473, 0.9839019862001398),\n",
              " (25164, 0.9839020246843015),\n",
              " (25164, 0.9839020246843015),\n",
              " (42253, 0.984002609665262),\n",
              " (42253, 0.984002609665262),\n",
              " (9331, 0.9840983033723576),\n",
              " (64650, 0.9840983052650214),\n",
              " (42253, 0.9842304573527932),\n",
              " (57991, 0.9842306756400055),\n",
              " (28257, 0.9842307015064092),\n",
              " (13536, 0.9842314017919749),\n",
              " (84056, 0.9842320288945444),\n",
              " (26282, 0.9842571577903676),\n",
              " (74551, 0.9842729463908764)]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ueAX88ZWqcn4",
        "colab_type": "code",
        "outputId": "a8b844ef-1bed-49be-80b0-f66cdb9bddef",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        }
      },
      "source": [
        "phase_user_item_dict[44]"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[(114125, 0.983762531584961),\n",
              " (27161, 0.9838729464302436),\n",
              " (100713, 0.9838791234536428),\n",
              " (109463, 0.98387912723897),\n",
              " (88385, 0.983879170139347),\n",
              " (1609, 0.9838862947563672),\n",
              " (71517, 0.9839017704364792),\n",
              " (25353, 0.983901849928354),\n",
              " (56160, 0.9839018953522828),\n",
              " (25473, 0.9839019862001398)]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bL7NSxwep0Ny",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "true_user_item_dict = get_user_item_time_dict(total_click, )"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1YBiKbfvqLTb",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "c=0\n",
        "click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "all_click = click_train.append(click_test)\n",
        "phase_user_item_dict = get_user_item_time_dict(all_click, )"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "TRrE0u8Mfb5R"
      },
      "source": [
        "## Item-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab_type": "code",
        "outputId": "9b3e61f3-82b1-4a19-87ba-32d96e4b71da",
        "id": "80nJZw0Pfb5b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 680
        }
      },
      "source": [
        "# time-aware item-cf\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "    user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, _ = get_sim_item(all_click, 'user_id', 'item_id', use_iif=True) \n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, 800, 50)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1]])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_v1.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_v1.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18505/18505 [00:05<00:00, 3185.55it/s]\n",
            "100%|██████████| 40775/40775 [00:03<00:00, 12628.18it/s]\n",
            "  0%|          | 7/1663 [00:00<00:24, 68.31it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "40775 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1663/1663 [00:20<00:00, 83.06it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18672/18672 [00:05<00:00, 3209.62it/s]\n",
            "100%|██████████| 41409/41409 [00:03<00:00, 11846.19it/s]\n",
            "  0%|          | 3/1726 [00:00<01:10, 24.39it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41409 18672\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1726/1726 [00:24<00:00, 71.56it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18398/18398 [00:05<00:00, 3131.24it/s]\n",
            "100%|██████████| 41031/41031 [00:03<00:00, 12320.62it/s]\n",
            "  1%|          | 9/1690 [00:00<00:18, 89.37it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41031 18398\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1690/1690 [00:22<00:00, 74.71it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18821/18821 [00:06<00:00, 2703.08it/s]\n",
            "100%|██████████| 42815/42815 [00:04<00:00, 10694.50it/s]\n",
            "  0%|          | 4/1675 [00:00<00:43, 38.70it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42815 18821\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1675/1675 [00:28<00:00, 58.30it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18617/18617 [00:07<00:00, 2521.30it/s]\n",
            "100%|██████████| 42840/42840 [00:04<00:00, 10014.38it/s]\n",
            "  0%|          | 7/1708 [00:00<00:28, 59.96it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42840 18617\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            " 47%|████▋     | 803/1708 [00:16<00:20, 44.07it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=14997 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1708/1708 [00:33<00:00, 51.47it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 5\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 19459/19459 [00:07<00:00, 2448.35it/s]\n",
            "100%|██████████| 45630/45630 [00:04<00:00, 10213.46it/s]\n",
            "  0%|          | 0/1798 [00:00<?, ?it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "45630 19459\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1798/1798 [00:34<00:00, 51.41it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 20396/20396 [00:08<00:00, 2327.72it/s]\n",
            "100%|██████████| 48664/48664 [00:05<00:00, 9580.54it/s] \n",
            "  0%|          | 4/1821 [00:00<00:46, 38.79it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "48664 20396\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1821/1821 [00:37<00:00, 48.39it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "604050\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eZvCbzQN0Pyl",
        "colab_type": "text"
      },
      "source": [
        "## Time-aware Item-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hKMzyeq6AueL",
        "colab_type": "code",
        "outputId": "d4efbe62-4704-41a9-c55a-1f5f55f7c60f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 715
        }
      },
      "source": [
        "# time-aware item-cf\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    # user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, user_item_dict = get_time_aware_sim_item(all_click, 'user_id', 'item_id', use_iif=True, ret_time=True) \n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 50)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, -1000.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1]])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_v6.csv', index=False, header=None)\n",
        "\n",
        "# result = get_predict(recom_df, 'sim', top50_click)\n",
        "result = get_feat_predict(recom_df, whole_click, user_feat_df, top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_v6.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18505/18505 [00:25<00:00, 722.18it/s]\n",
            "100%|██████████| 40775/40775 [00:04<00:00, 9795.59it/s] \n",
            "  0%|          | 7/1663 [00:00<00:24, 66.81it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "40775 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1663/1663 [00:24<00:00, 66.79it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18672/18672 [00:26<00:00, 696.25it/s]\n",
            "100%|██████████| 41409/41409 [00:03<00:00, 10500.83it/s]\n",
            "  0%|          | 3/1726 [00:00<01:16, 22.46it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41409 18672\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1726/1726 [00:29<00:00, 59.08it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18398/18398 [00:27<00:00, 673.42it/s]\n",
            "100%|██████████| 41031/41031 [00:04<00:00, 9275.60it/s] \n",
            "  0%|          | 8/1690 [00:00<00:22, 75.32it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41031 18398\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1690/1690 [00:28<00:00, 59.32it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18821/18821 [00:32<00:00, 583.81it/s]\n",
            "100%|██████████| 42815/42815 [00:04<00:00, 8813.08it/s] \n",
            "  0%|          | 4/1675 [00:00<00:52, 31.97it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42815 18821\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1675/1675 [00:36<00:00, 45.42it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18617/18617 [00:33<00:00, 552.45it/s]\n",
            "100%|██████████| 42840/42840 [00:05<00:00, 8180.99it/s] \n",
            "  0%|          | 6/1708 [00:00<00:32, 52.06it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42840 18617\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            " 47%|████▋     | 798/1708 [00:21<00:28, 31.81it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=14997 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1708/1708 [00:43<00:00, 39.12it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 5\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 19459/19459 [00:38<00:00, 501.69it/s]\n",
            "100%|██████████| 45630/45630 [00:05<00:00, 7962.43it/s] \n",
            "  1%|          | 13/1798 [00:00<00:18, 97.84it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "45630 19459\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1798/1798 [00:46<00:00, 38.60it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 20396/20396 [00:42<00:00, 484.80it/s]\n",
            "100%|██████████| 48664/48664 [00:06<00:00, 7453.80it/s] \n",
            "  0%|          | 4/1821 [00:00<00:46, 39.35it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "48664 20396\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1821/1821 [00:49<00:00, 37.00it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "2745 137250 137250\n",
            "12081 604050 604050\n",
            "741300\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8e1_DWRum72b",
        "colab_type": "code",
        "outputId": "006394c4-11ff-433a-8c08-fee854811b73",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        }
      },
      "source": [
        "result = get_feat_predict(recom_df, whole_click, user_feat_df, top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_v6.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2745 137250 137250\n",
            "12081 604050 604050\n",
            "741300\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KVpPdW85MK6S",
        "colab_type": "text"
      },
      "source": [
        "## Time-Direction-aware Item-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vs0zLdeNMOHI",
        "colab_type": "code",
        "outputId": "27c10b0e-2812-40c2-d2f0-95221c85ce62",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 680
        }
      },
      "source": [
        "import gc\n",
        "# time-aware-direction item-cf\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    \n",
        "    item_sim_list, user_item_dict = get_time_dir_aware_sim_item(all_click, 'user_id', 'item_id') \n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 100)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1], c])\n",
        "    \n",
        "    del click_train, click_test, item_sim_list\n",
        "    gc.collect()\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_v5.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_v5.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18505/18505 [00:54<00:00, 337.15it/s]\n",
            "100%|██████████| 40775/40775 [00:04<00:00, 9546.77it/s] \n",
            "  0%|          | 8/1663 [00:00<00:22, 74.78it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "40775 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1663/1663 [00:24<00:00, 67.44it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18672/18672 [00:57<00:00, 326.51it/s]\n",
            "100%|██████████| 41409/41409 [00:04<00:00, 9853.50it/s] \n",
            "  0%|          | 3/1726 [00:00<01:16, 22.55it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41409 18672\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1726/1726 [00:29<00:00, 58.89it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18398/18398 [00:58<00:00, 314.26it/s]\n",
            "100%|██████████| 41031/41031 [00:04<00:00, 10204.45it/s]\n",
            "  1%|          | 9/1690 [00:00<00:19, 85.10it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41031 18398\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1690/1690 [00:27<00:00, 60.37it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18821/18821 [01:08<00:00, 273.46it/s]\n",
            "100%|██████████| 42815/42815 [00:04<00:00, 9202.60it/s] \n",
            "  0%|          | 4/1675 [00:00<00:55, 30.23it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42815 18821\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1675/1675 [00:37<00:00, 45.09it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18617/18617 [01:14<00:00, 248.35it/s]\n",
            "100%|██████████| 42840/42840 [00:05<00:00, 8427.19it/s] \n",
            "  0%|          | 5/1708 [00:00<00:34, 49.00it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42840 18617\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            " 47%|████▋     | 798/1708 [00:21<00:29, 31.37it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=14997 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1708/1708 [00:43<00:00, 39.32it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 5\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 19459/19459 [01:20<00:00, 242.02it/s]\n",
            "100%|██████████| 45630/45630 [00:05<00:00, 8144.75it/s] \n",
            "  1%|          | 13/1798 [00:00<00:18, 95.40it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "45630 19459\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1798/1798 [00:45<00:00, 39.10it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 20396/20396 [01:27<00:00, 231.88it/s]\n",
            "100%|██████████| 48664/48664 [00:06<00:00, 7799.08it/s] \n",
            "  0%|          | 6/1821 [00:00<00:36, 49.65it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "48664 20396\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1821/1821 [00:48<00:00, 37.77it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "604050\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-Tc3bOIudGk8",
        "colab_type": "code",
        "outputId": "613c9d02-81b5-4798-bfbc-95c85bd8f860",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 329,
          "referenced_widgets": [
            "b468d0107a964a4a85d06d234e8c546f",
            "99c3b52d0ad0413eb3c8443d378e510d",
            "68ad10aa6e6148d28ab36099a9ad7354",
            "f5539be5deca4689ad56007158d0fe9e",
            "054de505ae0d4c7e89cd917f088546ad",
            "d31012934f094504b8c86e00cbc4f58f",
            "450864240d3d4d8a80d6e81f0a919458",
            "517c4844cecc4d5c81eef6c8f3180abb"
          ]
        }
      },
      "source": [
        "import gc\n",
        "\n",
        "# time-aware-direction item-cf\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "    all_click = click_train.append(click_test)\n",
        "\n",
        "    # 出现在该阶段的商品\n",
        "    phase_item_ids = set(all_click['item_id'].unique()) \n",
        "\n",
        "    pred_user_time_dict = dict(zip(click_q_time['user_id'], click_q_time['time']))\n",
        "    phase_whole_click = pd.DataFrame()\n",
        "\n",
        "    #TODO 计算相似度：  过滤掉用户qtime & 未出现的item 之后的全量数据->过滤未出现的item\n",
        "    #TODO 统计用户行为： 用当前阶段数据 ->过滤掉用户qtime之后的全量数据\n",
        "    def group_apply_func(group_df):\n",
        "      u = group_df['user_id'].iloc[0]\n",
        "      if u in pred_user_time_dict:\n",
        "         u_time = pred_user_time_dict[u]\n",
        "         group_df = group_df[group_df['time'] < u_time]\n",
        "      return group_df\n",
        "\n",
        "    phase_whole_click = whole_click.groupby('user_id', group_keys=False).apply(group_apply_func)\n",
        "    print(phase_whole_click.head())\n",
        "    print('group done')\n",
        "\n",
        "    # 过滤掉不在该阶段的商品\n",
        "    phase_whole_click = phase_whole_click[phase_whole_click['item_id'].isin(phase_item_ids)]\n",
        "     \n",
        "    user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, _ = get_time_dir_aware_sim_item(phase_whole_click, 'user_id', 'item_id') \n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "    recom_item_phase = []\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 100)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item_phase.append([i, j[0], j[1], c])\n",
        "    recom_item.extend(recom_item_phase)\n",
        "\n",
        "    recom_item_phase_df = pd.DataFrame(recom_item_phase, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "    recom_item_phase_df[recom_item_phase_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_v7_phase_{}_filter.csv'.format(c), index=False, header=None)\n",
        "    recom_item_phase_df[recom_item_phase_df['sim']>0].to_csv(drive_output_path + '/baseline_itemcf_origin_v7_phase_{}_filter.csv'.format(c), index=False, header=None)\n",
        "    \n",
        "    del click_train, click_test, recom_item_phase, recom_item_phase_df, phase_whole_click, item_sim_list\n",
        "    gc.collect()\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_v7_filter.csv', index=False, header=None)\n",
        "recom_df[recom_df['sim']>0].to_csv(drive_output_path + '/baseline_itemcf_origin_v7_filter.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_v7_filter.csv', index=False, header=None)\n",
        "result.to_csv(drive_output_path + '/baseline_itemcf_v7_filter.csv', index=False, header=None)"
      ],
      "execution_count": 226,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n",
            "phase: 1\n",
            "phase: 2\n",
            "phase: 3\n",
            "phase: 4\n",
            "phase: 5\n",
            "phase: 6\n",
            "phase: 0\n",
            "       user_id  item_id      time\n",
            "3123         1    47611  0.983887\n",
            "19709        1    76240  0.983770\n",
            "19829        1    78142  0.983742\n",
            "20480        1    89568  0.983763\n",
            "20968        1    97795  0.983877\n",
            "group done\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b468d0107a964a4a85d06d234e8c546f",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=31095.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "72cd1a557ba64904bf8cbba22279abbb",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=40775.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "40775 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "79617c4870de4da493c60ca8bbc8c10f",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "HBox(children=(FloatProgress(value=0.0, max=1663.0), HTML(value='')))"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-226-4b774d7ffb26>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     64\u001b[0m     \u001b[0mrecom_item_phase_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecom_item_phase\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'user_id'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'item_id'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'sim'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'phase'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0mrecom_item_phase_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrecom_item_phase_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'sim'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m>\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput_path\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'/baseline_itemcf_origin_v7_phase_{}_filter.csv'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheader\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 66\u001b[0;31m     \u001b[0mrecom_item_phase_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrecom_item_phase_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'sim'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m>\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdrive_output_path\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'/baseline_itemcf_origin_v7_phase_{}_filter.csv'\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mformat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mheader\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     67\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m     \u001b[0;32mdel\u001b[0m \u001b[0mclick_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mclick_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecom_item_phase\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecom_item_phase_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mphase_whole_click\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mitem_sim_list\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'drive_output_path' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SoKTxkqDqOVi",
        "colab_type": "code",
        "outputId": "97a62b81-e546-47e5-843a-8053afc375e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        }
      },
      "source": [
        "result"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>10</th>\n",
              "      <th>11</th>\n",
              "      <th>12</th>\n",
              "      <th>13</th>\n",
              "      <th>14</th>\n",
              "      <th>15</th>\n",
              "      <th>16</th>\n",
              "      <th>17</th>\n",
              "      <th>18</th>\n",
              "      <th>19</th>\n",
              "      <th>20</th>\n",
              "      <th>21</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "      <th>38</th>\n",
              "      <th>39</th>\n",
              "      <th>40</th>\n",
              "      <th>41</th>\n",
              "      <th>42</th>\n",
              "      <th>43</th>\n",
              "      <th>44</th>\n",
              "      <th>45</th>\n",
              "      <th>46</th>\n",
              "      <th>47</th>\n",
              "      <th>48</th>\n",
              "      <th>49</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>42199</td>\n",
              "      <td>32360</td>\n",
              "      <td>46297</td>\n",
              "      <td>81337</td>\n",
              "      <td>16734</td>\n",
              "      <td>84994</td>\n",
              "      <td>51649</td>\n",
              "      <td>54063</td>\n",
              "      <td>64538</td>\n",
              "      <td>30677</td>\n",
              "      <td>74608</td>\n",
              "      <td>67733</td>\n",
              "      <td>87837</td>\n",
              "      <td>101060</td>\n",
              "      <td>91290</td>\n",
              "      <td>14974</td>\n",
              "      <td>90084</td>\n",
              "      <td>35247</td>\n",
              "      <td>78641</td>\n",
              "      <td>98382</td>\n",
              "      <td>51719</td>\n",
              "      <td>95676</td>\n",
              "      <td>68274</td>\n",
              "      <td>46098</td>\n",
              "      <td>103015</td>\n",
              "      <td>71920</td>\n",
              "      <td>94147</td>\n",
              "      <td>9748</td>\n",
              "      <td>34728</td>\n",
              "      <td>100116</td>\n",
              "      <td>48117</td>\n",
              "      <td>30474</td>\n",
              "      <td>92349</td>\n",
              "      <td>36869</td>\n",
              "      <td>26934</td>\n",
              "      <td>103421</td>\n",
              "      <td>97795</td>\n",
              "      <td>26531</td>\n",
              "      <td>19228</td>\n",
              "      <td>79125</td>\n",
              "      <td>70528</td>\n",
              "      <td>108557</td>\n",
              "      <td>42593</td>\n",
              "      <td>5509</td>\n",
              "      <td>55390</td>\n",
              "      <td>59066</td>\n",
              "      <td>88665</td>\n",
              "      <td>86424</td>\n",
              "      <td>46846</td>\n",
              "      <td>66063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>47954</td>\n",
              "      <td>103394</td>\n",
              "      <td>95305</td>\n",
              "      <td>91963</td>\n",
              "      <td>102397</td>\n",
              "      <td>26837</td>\n",
              "      <td>90023</td>\n",
              "      <td>18104</td>\n",
              "      <td>50147</td>\n",
              "      <td>31297</td>\n",
              "      <td>22122</td>\n",
              "      <td>10612</td>\n",
              "      <td>106292</td>\n",
              "      <td>68456</td>\n",
              "      <td>81139</td>\n",
              "      <td>13451</td>\n",
              "      <td>46658</td>\n",
              "      <td>47855</td>\n",
              "      <td>87032</td>\n",
              "      <td>102366</td>\n",
              "      <td>1974</td>\n",
              "      <td>55567</td>\n",
              "      <td>436</td>\n",
              "      <td>43246</td>\n",
              "      <td>54099</td>\n",
              "      <td>26953</td>\n",
              "      <td>101736</td>\n",
              "      <td>50603</td>\n",
              "      <td>19952</td>\n",
              "      <td>58191</td>\n",
              "      <td>83814</td>\n",
              "      <td>53509</td>\n",
              "      <td>32160</td>\n",
              "      <td>94832</td>\n",
              "      <td>43876</td>\n",
              "      <td>77063</td>\n",
              "      <td>33974</td>\n",
              "      <td>42265</td>\n",
              "      <td>101513</td>\n",
              "      <td>97957</td>\n",
              "      <td>32122</td>\n",
              "      <td>69221</td>\n",
              "      <td>55098</td>\n",
              "      <td>57272</td>\n",
              "      <td>20019</td>\n",
              "      <td>83969</td>\n",
              "      <td>38037</td>\n",
              "      <td>29834</td>\n",
              "      <td>75213</td>\n",
              "      <td>92198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>48446</td>\n",
              "      <td>48832</td>\n",
              "      <td>37485</td>\n",
              "      <td>87420</td>\n",
              "      <td>47622</td>\n",
              "      <td>17287</td>\n",
              "      <td>110798</td>\n",
              "      <td>25959</td>\n",
              "      <td>87807</td>\n",
              "      <td>31656</td>\n",
              "      <td>47382</td>\n",
              "      <td>28943</td>\n",
              "      <td>85203</td>\n",
              "      <td>34087</td>\n",
              "      <td>25973</td>\n",
              "      <td>10176</td>\n",
              "      <td>32105</td>\n",
              "      <td>78914</td>\n",
              "      <td>70594</td>\n",
              "      <td>50506</td>\n",
              "      <td>107129</td>\n",
              "      <td>25449</td>\n",
              "      <td>101733</td>\n",
              "      <td>87966</td>\n",
              "      <td>75513</td>\n",
              "      <td>83696</td>\n",
              "      <td>30401</td>\n",
              "      <td>29232</td>\n",
              "      <td>59153</td>\n",
              "      <td>112274</td>\n",
              "      <td>23423</td>\n",
              "      <td>94026</td>\n",
              "      <td>10716</td>\n",
              "      <td>88549</td>\n",
              "      <td>88615</td>\n",
              "      <td>13906</td>\n",
              "      <td>76931</td>\n",
              "      <td>76604</td>\n",
              "      <td>25957</td>\n",
              "      <td>94948</td>\n",
              "      <td>70538</td>\n",
              "      <td>87186</td>\n",
              "      <td>84476</td>\n",
              "      <td>113302</td>\n",
              "      <td>5859</td>\n",
              "      <td>54382</td>\n",
              "      <td>7187</td>\n",
              "      <td>22704</td>\n",
              "      <td>68793</td>\n",
              "      <td>24923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>11</td>\n",
              "      <td>20284</td>\n",
              "      <td>823</td>\n",
              "      <td>10528</td>\n",
              "      <td>13624</td>\n",
              "      <td>77847</td>\n",
              "      <td>21941</td>\n",
              "      <td>1826</td>\n",
              "      <td>12652</td>\n",
              "      <td>15844</td>\n",
              "      <td>59376</td>\n",
              "      <td>26711</td>\n",
              "      <td>62770</td>\n",
              "      <td>58414</td>\n",
              "      <td>97346</td>\n",
              "      <td>113564</td>\n",
              "      <td>20389</td>\n",
              "      <td>85475</td>\n",
              "      <td>13612</td>\n",
              "      <td>63602</td>\n",
              "      <td>82600</td>\n",
              "      <td>1312</td>\n",
              "      <td>73755</td>\n",
              "      <td>112173</td>\n",
              "      <td>7216</td>\n",
              "      <td>32531</td>\n",
              "      <td>84341</td>\n",
              "      <td>87125</td>\n",
              "      <td>6580</td>\n",
              "      <td>65676</td>\n",
              "      <td>48049</td>\n",
              "      <td>21411</td>\n",
              "      <td>645</td>\n",
              "      <td>32237</td>\n",
              "      <td>40717</td>\n",
              "      <td>33521</td>\n",
              "      <td>40801</td>\n",
              "      <td>38591</td>\n",
              "      <td>53059</td>\n",
              "      <td>33130</td>\n",
              "      <td>55774</td>\n",
              "      <td>4976</td>\n",
              "      <td>27282</td>\n",
              "      <td>20436</td>\n",
              "      <td>78630</td>\n",
              "      <td>27264</td>\n",
              "      <td>21517</td>\n",
              "      <td>8815</td>\n",
              "      <td>87603</td>\n",
              "      <td>64236</td>\n",
              "      <td>27167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>13</td>\n",
              "      <td>43964</td>\n",
              "      <td>16950</td>\n",
              "      <td>42719</td>\n",
              "      <td>39056</td>\n",
              "      <td>49258</td>\n",
              "      <td>59042</td>\n",
              "      <td>42109</td>\n",
              "      <td>65417</td>\n",
              "      <td>50875</td>\n",
              "      <td>49992</td>\n",
              "      <td>97782</td>\n",
              "      <td>21721</td>\n",
              "      <td>73638</td>\n",
              "      <td>51345</td>\n",
              "      <td>114296</td>\n",
              "      <td>44704</td>\n",
              "      <td>57171</td>\n",
              "      <td>109415</td>\n",
              "      <td>22947</td>\n",
              "      <td>108219</td>\n",
              "      <td>62605</td>\n",
              "      <td>52844</td>\n",
              "      <td>105754</td>\n",
              "      <td>52162</td>\n",
              "      <td>64789</td>\n",
              "      <td>37345</td>\n",
              "      <td>112207</td>\n",
              "      <td>108567</td>\n",
              "      <td>39192</td>\n",
              "      <td>22971</td>\n",
              "      <td>65131</td>\n",
              "      <td>49244</td>\n",
              "      <td>56702</td>\n",
              "      <td>84155</td>\n",
              "      <td>91525</td>\n",
              "      <td>64425</td>\n",
              "      <td>19710</td>\n",
              "      <td>10405</td>\n",
              "      <td>111311</td>\n",
              "      <td>24458</td>\n",
              "      <td>14289</td>\n",
              "      <td>33342</td>\n",
              "      <td>32301</td>\n",
              "      <td>96347</td>\n",
              "      <td>91241</td>\n",
              "      <td>69008</td>\n",
              "      <td>93449</td>\n",
              "      <td>40544</td>\n",
              "      <td>37241</td>\n",
              "      <td>65515</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8457</th>\n",
              "      <td>35421</td>\n",
              "      <td>88274</td>\n",
              "      <td>28043</td>\n",
              "      <td>51914</td>\n",
              "      <td>89520</td>\n",
              "      <td>80225</td>\n",
              "      <td>82550</td>\n",
              "      <td>19749</td>\n",
              "      <td>36836</td>\n",
              "      <td>103792</td>\n",
              "      <td>78959</td>\n",
              "      <td>112833</td>\n",
              "      <td>58341</td>\n",
              "      <td>71834</td>\n",
              "      <td>77060</td>\n",
              "      <td>110251</td>\n",
              "      <td>24709</td>\n",
              "      <td>64526</td>\n",
              "      <td>23700</td>\n",
              "      <td>67548</td>\n",
              "      <td>17538</td>\n",
              "      <td>97737</td>\n",
              "      <td>105570</td>\n",
              "      <td>84557</td>\n",
              "      <td>36508</td>\n",
              "      <td>6683</td>\n",
              "      <td>22793</td>\n",
              "      <td>88456</td>\n",
              "      <td>45942</td>\n",
              "      <td>74733</td>\n",
              "      <td>93867</td>\n",
              "      <td>18764</td>\n",
              "      <td>75971</td>\n",
              "      <td>74986</td>\n",
              "      <td>43013</td>\n",
              "      <td>100369</td>\n",
              "      <td>95762</td>\n",
              "      <td>4953</td>\n",
              "      <td>32685</td>\n",
              "      <td>48623</td>\n",
              "      <td>43782</td>\n",
              "      <td>86799</td>\n",
              "      <td>99016</td>\n",
              "      <td>75832</td>\n",
              "      <td>52931</td>\n",
              "      <td>106257</td>\n",
              "      <td>88240</td>\n",
              "      <td>89782</td>\n",
              "      <td>66314</td>\n",
              "      <td>75055</td>\n",
              "      <td>72414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8458</th>\n",
              "      <td>35422</td>\n",
              "      <td>74650</td>\n",
              "      <td>10340</td>\n",
              "      <td>53908</td>\n",
              "      <td>110181</td>\n",
              "      <td>73285</td>\n",
              "      <td>12232</td>\n",
              "      <td>20435</td>\n",
              "      <td>103267</td>\n",
              "      <td>23125</td>\n",
              "      <td>71879</td>\n",
              "      <td>75101</td>\n",
              "      <td>115681</td>\n",
              "      <td>91995</td>\n",
              "      <td>81521</td>\n",
              "      <td>26502</td>\n",
              "      <td>26677</td>\n",
              "      <td>53080</td>\n",
              "      <td>98229</td>\n",
              "      <td>87541</td>\n",
              "      <td>60931</td>\n",
              "      <td>4516</td>\n",
              "      <td>65823</td>\n",
              "      <td>5612</td>\n",
              "      <td>12602</td>\n",
              "      <td>92178</td>\n",
              "      <td>27722</td>\n",
              "      <td>94573</td>\n",
              "      <td>26901</td>\n",
              "      <td>79688</td>\n",
              "      <td>97788</td>\n",
              "      <td>90045</td>\n",
              "      <td>43855</td>\n",
              "      <td>34085</td>\n",
              "      <td>105431</td>\n",
              "      <td>78151</td>\n",
              "      <td>29009</td>\n",
              "      <td>40863</td>\n",
              "      <td>5293</td>\n",
              "      <td>53823</td>\n",
              "      <td>16733</td>\n",
              "      <td>3742</td>\n",
              "      <td>110414</td>\n",
              "      <td>86114</td>\n",
              "      <td>91044</td>\n",
              "      <td>42268</td>\n",
              "      <td>26435</td>\n",
              "      <td>11771</td>\n",
              "      <td>22623</td>\n",
              "      <td>604</td>\n",
              "      <td>62175</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8459</th>\n",
              "      <td>35424</td>\n",
              "      <td>87717</td>\n",
              "      <td>56645</td>\n",
              "      <td>95500</td>\n",
              "      <td>65766</td>\n",
              "      <td>62848</td>\n",
              "      <td>76678</td>\n",
              "      <td>4256</td>\n",
              "      <td>12039</td>\n",
              "      <td>84816</td>\n",
              "      <td>1464</td>\n",
              "      <td>26930</td>\n",
              "      <td>61194</td>\n",
              "      <td>84296</td>\n",
              "      <td>21353</td>\n",
              "      <td>45866</td>\n",
              "      <td>34019</td>\n",
              "      <td>83054</td>\n",
              "      <td>48420</td>\n",
              "      <td>15392</td>\n",
              "      <td>47761</td>\n",
              "      <td>32776</td>\n",
              "      <td>18715</td>\n",
              "      <td>54960</td>\n",
              "      <td>84644</td>\n",
              "      <td>19701</td>\n",
              "      <td>71298</td>\n",
              "      <td>93516</td>\n",
              "      <td>101118</td>\n",
              "      <td>111486</td>\n",
              "      <td>49446</td>\n",
              "      <td>44369</td>\n",
              "      <td>3885</td>\n",
              "      <td>24272</td>\n",
              "      <td>39503</td>\n",
              "      <td>49846</td>\n",
              "      <td>16658</td>\n",
              "      <td>80102</td>\n",
              "      <td>37286</td>\n",
              "      <td>6517</td>\n",
              "      <td>63142</td>\n",
              "      <td>70309</td>\n",
              "      <td>38169</td>\n",
              "      <td>99712</td>\n",
              "      <td>31900</td>\n",
              "      <td>9656</td>\n",
              "      <td>23350</td>\n",
              "      <td>23739</td>\n",
              "      <td>80781</td>\n",
              "      <td>30370</td>\n",
              "      <td>34547</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8460</th>\n",
              "      <td>35434</td>\n",
              "      <td>43017</td>\n",
              "      <td>100949</td>\n",
              "      <td>44492</td>\n",
              "      <td>94634</td>\n",
              "      <td>67607</td>\n",
              "      <td>60349</td>\n",
              "      <td>64550</td>\n",
              "      <td>81022</td>\n",
              "      <td>89798</td>\n",
              "      <td>96460</td>\n",
              "      <td>108562</td>\n",
              "      <td>59311</td>\n",
              "      <td>76678</td>\n",
              "      <td>90999</td>\n",
              "      <td>47052</td>\n",
              "      <td>63510</td>\n",
              "      <td>28015</td>\n",
              "      <td>51736</td>\n",
              "      <td>22774</td>\n",
              "      <td>70643</td>\n",
              "      <td>78818</td>\n",
              "      <td>25244</td>\n",
              "      <td>57044</td>\n",
              "      <td>66868</td>\n",
              "      <td>51493</td>\n",
              "      <td>85900</td>\n",
              "      <td>46025</td>\n",
              "      <td>75617</td>\n",
              "      <td>27348</td>\n",
              "      <td>93539</td>\n",
              "      <td>70456</td>\n",
              "      <td>9098</td>\n",
              "      <td>109796</td>\n",
              "      <td>70691</td>\n",
              "      <td>49283</td>\n",
              "      <td>108637</td>\n",
              "      <td>103651</td>\n",
              "      <td>40245</td>\n",
              "      <td>19499</td>\n",
              "      <td>58165</td>\n",
              "      <td>61250</td>\n",
              "      <td>46944</td>\n",
              "      <td>11405</td>\n",
              "      <td>58589</td>\n",
              "      <td>46377</td>\n",
              "      <td>46534</td>\n",
              "      <td>67890</td>\n",
              "      <td>38335</td>\n",
              "      <td>78868</td>\n",
              "      <td>112060</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8461</th>\n",
              "      <td>35435</td>\n",
              "      <td>74285</td>\n",
              "      <td>31115</td>\n",
              "      <td>22881</td>\n",
              "      <td>91026</td>\n",
              "      <td>69405</td>\n",
              "      <td>44684</td>\n",
              "      <td>50729</td>\n",
              "      <td>25415</td>\n",
              "      <td>80251</td>\n",
              "      <td>59079</td>\n",
              "      <td>1526</td>\n",
              "      <td>72736</td>\n",
              "      <td>25910</td>\n",
              "      <td>72343</td>\n",
              "      <td>94624</td>\n",
              "      <td>73627</td>\n",
              "      <td>17671</td>\n",
              "      <td>105194</td>\n",
              "      <td>65742</td>\n",
              "      <td>90646</td>\n",
              "      <td>75736</td>\n",
              "      <td>42377</td>\n",
              "      <td>68308</td>\n",
              "      <td>28185</td>\n",
              "      <td>24933</td>\n",
              "      <td>27827</td>\n",
              "      <td>47615</td>\n",
              "      <td>60730</td>\n",
              "      <td>84233</td>\n",
              "      <td>91027</td>\n",
              "      <td>112901</td>\n",
              "      <td>20034</td>\n",
              "      <td>5887</td>\n",
              "      <td>114240</td>\n",
              "      <td>1200</td>\n",
              "      <td>64254</td>\n",
              "      <td>83499</td>\n",
              "      <td>61647</td>\n",
              "      <td>43468</td>\n",
              "      <td>61540</td>\n",
              "      <td>6457</td>\n",
              "      <td>41807</td>\n",
              "      <td>80505</td>\n",
              "      <td>6065</td>\n",
              "      <td>57365</td>\n",
              "      <td>87733</td>\n",
              "      <td>32280</td>\n",
              "      <td>101040</td>\n",
              "      <td>34177</td>\n",
              "      <td>85999</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8462 rows × 51 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      user_id      0       1      2  ...     46      47     48      49\n",
              "0           1  42199   32360  46297  ...  88665   86424  46846   66063\n",
              "1           2  47954  103394  95305  ...  38037   29834  75213   92198\n",
              "2           3  48446   48832  37485  ...   7187   22704  68793   24923\n",
              "3          11  20284     823  10528  ...   8815   87603  64236   27167\n",
              "4          13  43964   16950  42719  ...  93449   40544  37241   65515\n",
              "...       ...    ...     ...    ...  ...    ...     ...    ...     ...\n",
              "8457    35421  88274   28043  51914  ...  89782   66314  75055   72414\n",
              "8458    35422  74650   10340  53908  ...  11771   22623    604   62175\n",
              "8459    35424  87717   56645  95500  ...  23739   80781  30370   34547\n",
              "8460    35434  43017  100949  44492  ...  67890   38335  78868  112060\n",
              "8461    35435  74285   31115  22881  ...  32280  101040  34177   85999\n",
              "\n",
              "[8462 rows x 51 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9MknpL2Cj-bi",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "cp {output_path + '/baseline_itemcf_origin_v7.csv'} '/content/drive/My Drive/debiasing/baseline_itemcf_origin_v7.csv'"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kUVVyGAD4Iev",
        "colab_type": "text"
      },
      "source": [
        "## Content-based "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9ErXKnfz4L1i",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# time-aware-direction item-cf\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "item_sim_list = get_content_sim_item(item_feat_df) \n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "    user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 500)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, -1000)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1]])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_content_origin_v2.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "# result = get_feat_predict(recom_df, whole_click, user_feat_df, top50_click, feat_cols=['gender','age_level', 'city_level'])\n",
        "result.to_csv(output_path + '/baseline_content_v2.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JCAtnHgg0R6y",
        "colab_type": "text"
      },
      "source": [
        "## Swing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u5FKIJMf-or3",
        "colab_type": "code",
        "outputId": "bafc2127-dd64-452a-d4b5-ebd3a4a014d6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "# swing\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "\n",
        "recom_item = []\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    \n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    # user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, user_item_dict = swing(all_click, 'user_id', 'item_id') # get_time_aware_sim_item(whole_click, 'user_id', 'item_id', use_iif=True, ret_time=True)\n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 100, )\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1], c])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_swing_origin_v5.csv', index=False, header=None)\n",
        "\n",
        "# result = get_predict(recom_df, 'sim', top50_click)\n",
        "result = get_feat_predict(recom_df, whole_click, user_feat_df, top50_click, feat_cols=['gender','age_level', 'city_level'])\n",
        "result.to_csv(output_path + '/baseline_swing_v5.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=underexpose_test\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/40776 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 599/40776 [00:00<00:07, 5667.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1080/40776 [00:00<00:07, 5378.72it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1631/40776 [00:00<00:07, 5415.38it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2038/40776 [00:00<00:07, 4848.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2547/40776 [00:00<00:08, 4719.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3026/40776 [00:00<00:07, 4738.19it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 3503/40776 [00:00<00:12, 2906.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4246/40776 [00:01<00:10, 3552.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4719/40776 [00:01<00:09, 3838.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5211/40776 [00:01<00:08, 4109.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 5960/40776 [00:01<00:07, 4744.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6513/40776 [00:01<00:11, 3037.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7459/40776 [00:01<00:08, 3775.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8027/40776 [00:01<00:08, 3994.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 8826/40776 [00:02<00:06, 4698.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 9592/40776 [00:02<00:05, 5314.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10344/40776 [00:02<00:05, 5677.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11009/40776 [00:02<00:09, 3126.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 11652/40776 [00:02<00:07, 3696.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12532/40776 [00:02<00:06, 4471.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13219/40776 [00:02<00:05, 4994.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14050/40776 [00:03<00:04, 5458.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15001/40776 [00:03<00:04, 6225.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 15799/40776 [00:03<00:03, 6637.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 16558/40776 [00:03<00:07, 3240.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17653/40776 [00:03<00:05, 4108.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 18385/40776 [00:03<00:04, 4728.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19131/40776 [00:04<00:05, 4268.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 20261/40776 [00:04<00:03, 5247.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21188/40776 [00:04<00:03, 5990.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22007/40776 [00:04<00:02, 6514.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 22968/40776 [00:04<00:02, 7211.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 23997/40776 [00:04<00:02, 7912.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 24904/40776 [00:05<00:04, 3469.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 25584/40776 [00:05<00:03, 4060.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 26514/40776 [00:05<00:02, 4886.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27489/40776 [00:05<00:02, 5745.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28309/40776 [00:05<00:02, 6043.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29226/40776 [00:05<00:01, 6726.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 30047/40776 [00:05<00:01, 7070.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 31154/40776 [00:06<00:01, 6912.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 31922/40776 [00:06<00:01, 5534.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 32730/40776 [00:06<00:01, 6108.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33447/40776 [00:06<00:01, 6152.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34303/40776 [00:06<00:00, 6718.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35033/40776 [00:07<00:02, 2560.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36044/40776 [00:07<00:01, 3298.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 36878/40776 [00:07<00:00, 3960.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37579/40776 [00:07<00:00, 4532.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38418/40776 [00:07<00:00, 5252.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39156/40776 [00:07<00:00, 5511.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 39860/40776 [00:07<00:00, 5375.72it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 40776/40776 [00:08<00:00, 4792.94it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1663 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 61/1663 [00:00<00:02, 549.48it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "40770 18505\n",
            "user=1100 has no recommend results...\n",
            "user=1529 has no recommend results...\n",
            "user=1749 has no recommend results...\n",
            "user=2002 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 11%|█         | 175/1663 [00:00<00:02, 650.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 233/1663 [00:00<00:02, 626.45it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=3487 has no recommend results...\n",
            "user=3784 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 20%|██        | 337/1663 [00:00<00:01, 699.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 418/1663 [00:00<00:01, 729.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 487/1663 [00:00<00:01, 701.88it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=6886 has no recommend results...\n",
            "user=7271 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 36%|███▌      | 599/1663 [00:00<00:01, 786.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 679/1663 [00:00<00:01, 774.12it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=10131 has no recommend results...\n",
            "user=10208 has no recommend results...\n",
            "user=13365 has no recommend results...\n",
            "user=13376 has no recommend results...\n",
            "user=13453 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 46%|████▌     | 758/1663 [00:00<00:01, 775.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 856/1663 [00:01<00:01, 800.89it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=14047 has no recommend results...\n",
            "user=14432 has no recommend results...\n",
            "user=14575 has no recommend results...\n",
            "user=15070 has no recommend results...\n",
            "item=79881 not in item-item sim results\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 57%|█████▋    | 952/1663 [00:01<00:00, 842.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1038/1663 [00:01<00:00, 805.12it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=18755 has no recommend results...\n",
            "user=18964 has no recommend results...\n",
            "user=19569 has no recommend results...\n",
            "user=20097 has no recommend results...\n",
            "user=20350 has no recommend results...\n",
            "user=21087 has no recommend results...\n",
            "user=21362 has no recommend results...\n",
            "user=21538 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 67%|██████▋   | 1120/1663 [00:01<00:00, 766.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1212/1663 [00:01<00:00, 794.23it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=22385 has no recommend results...\n",
            "user=22429 has no recommend results...\n",
            "user=22528 has no recommend results...\n",
            "user=22946 has no recommend results...\n",
            "user=23254 has no recommend results...\n",
            "user=24222 has no recommend results...\n",
            "user=24904 has no recommend results...\n",
            "user=25223 has no recommend results...\n",
            "user=25652 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 78%|███████▊  | 1293/1663 [00:01<00:00, 797.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1374/1663 [00:01<00:00, 791.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1482/1663 [00:01<00:00, 859.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 1580/1663 [00:01<00:00, 879.89it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=28919 has no recommend results...\n",
            "user=29271 has no recommend results...\n",
            "user=29425 has no recommend results...\n",
            "user=29535 has no recommend results...\n",
            "user=29722 has no recommend results...\n",
            "item=85662 not in item-item sim results\n",
            "user=30239 has no recommend results...\n",
            "user=30415 has no recommend results...\n",
            "user=30459 has no recommend results...\n",
            "user=31218 has no recommend results...\n",
            "user=31240 has no recommend results...\n",
            "user=31680 has no recommend results...\n",
            "user=32109 has no recommend results...\n",
            "user=33011 has no recommend results...\n",
            "user=33528 has no recommend results...\n",
            "user=33649 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\r100%|██████████| 1663/1663 [00:01<00:00, 833.20it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=34518 has no recommend results...\n",
            "user=34650 has no recommend results...\n",
            "user=34980 has no recommend results...\n",
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/41409 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 340/41409 [00:00<00:32, 1272.43it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 910/41409 [00:00<00:24, 1654.51it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1366/41409 [00:00<00:19, 2041.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1720/41409 [00:00<00:16, 2338.41it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2015/41409 [00:00<00:22, 1716.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2464/41409 [00:00<00:18, 2084.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2862/41409 [00:01<00:15, 2431.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3390/41409 [00:01<00:13, 2901.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3775/41409 [00:01<00:19, 1955.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4538/41409 [00:01<00:14, 2516.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5083/41409 [00:01<00:12, 3000.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5563/41409 [00:01<00:10, 3307.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6471/41409 [00:01<00:08, 4024.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7249/41409 [00:02<00:11, 2859.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7725/41409 [00:02<00:10, 3247.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8182/41409 [00:02<00:09, 3531.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9048/41409 [00:02<00:07, 4294.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9923/41409 [00:02<00:06, 5068.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10589/41409 [00:02<00:05, 5170.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11393/41409 [00:03<00:05, 5776.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12072/41409 [00:03<00:10, 2784.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 12953/41409 [00:03<00:08, 3500.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13856/41409 [00:03<00:06, 4258.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14972/41409 [00:03<00:05, 5227.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15792/41409 [00:03<00:04, 5797.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 16600/41409 [00:04<00:03, 6220.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17659/41409 [00:04<00:03, 7098.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 18552/41409 [00:04<00:03, 7558.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19429/41409 [00:04<00:02, 7444.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20259/41409 [00:05<00:08, 2643.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 21272/41409 [00:05<00:05, 3362.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22009/41409 [00:05<00:04, 4014.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23072/41409 [00:05<00:03, 4864.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24128/41409 [00:05<00:02, 5803.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 25108/41409 [00:05<00:02, 6577.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26003/41409 [00:05<00:02, 6868.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 27089/41409 [00:05<00:01, 7684.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28019/41409 [00:06<00:01, 7728.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 28897/41409 [00:06<00:01, 7718.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29743/41409 [00:07<00:04, 2465.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 30969/41409 [00:07<00:03, 3242.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31771/41409 [00:07<00:02, 3864.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 32542/41409 [00:07<00:01, 4468.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 33344/41409 [00:07<00:01, 5149.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 34269/41409 [00:07<00:01, 5938.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35437/41409 [00:07<00:00, 6965.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36546/41409 [00:07<00:00, 7839.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37523/41409 [00:07<00:00, 8056.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38465/41409 [00:07<00:00, 8296.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 39392/41409 [00:08<00:00, 7699.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 40239/41409 [00:08<00:00, 5674.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 41409/41409 [00:09<00:00, 4308.12it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1726 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 90/1726 [00:00<00:01, 891.70it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41401 18672\n",
            "user=760 has no recommend results...\n",
            "user=914 has no recommend results...\n",
            "user=1222 has no recommend results...\n",
            "user=1838 has no recommend results...\n",
            "user=2201 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  9%|▉         | 160/1726 [00:00<00:01, 822.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 210/1726 [00:00<00:02, 688.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 253/1726 [00:00<00:02, 544.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 302/1726 [00:00<00:02, 522.29it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=4500 has no recommend results...\n",
            "user=5149 has no recommend results...\n",
            "user=5776 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 23%|██▎       | 389/1726 [00:00<00:02, 593.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 452/1726 [00:00<00:02, 602.30it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=7613 has no recommend results...\n",
            "user=7899 has no recommend results...\n",
            "user=8735 has no recommend results...\n",
            "user=9692 has no recommend results...\n",
            "user=9758 has no recommend results...\n",
            "user=10418 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 31%|███       | 530/1726 [00:00<00:01, 643.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 594/1726 [00:00<00:02, 534.68it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=10957 has no recommend results...\n",
            "user=11012 has no recommend results...\n",
            "user=11562 has no recommend results...\n",
            "user=12046 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 38%|███▊      | 664/1726 [00:01<00:01, 570.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 731/1726 [00:01<00:01, 596.96it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=12860 has no recommend results...\n",
            "user=13828 has no recommend results...\n",
            "user=14235 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 46%|████▌     | 793/1726 [00:01<00:01, 555.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 851/1726 [00:01<00:01, 537.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 920/1726 [00:01<00:01, 574.77it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=16820 has no recommend results...\n",
            "user=16831 has no recommend results...\n",
            "user=17260 has no recommend results...\n",
            "user=17788 has no recommend results...\n",
            "user=18503 has no recommend results...\n",
            "user=19097 has no recommend results...\n",
            "user=19878 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 59%|█████▊    | 1014/1726 [00:01<00:01, 648.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1084/1726 [00:01<00:01, 632.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1192/1726 [00:01<00:00, 722.21it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=20186 has no recommend results...\n",
            "user=20824 has no recommend results...\n",
            "user=21088 has no recommend results...\n",
            "user=21231 has no recommend results...\n",
            "user=21275 has no recommend results...\n",
            "user=22419 has no recommend results...\n",
            "user=22793 has no recommend results...\n",
            "user=24377 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 76%|███████▌  | 1306/1726 [00:01<00:00, 804.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1395/1726 [00:02<00:00, 802.69it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=25378 has no recommend results...\n",
            "user=25708 has no recommend results...\n",
            "user=27006 has no recommend results...\n",
            "user=27369 has no recommend results...\n",
            "user=27501 has no recommend results...\n",
            "user=27512 has no recommend results...\n",
            "user=27831 has no recommend results...\n",
            "user=27842 has no recommend results...\n",
            "user=28128 has no recommend results...\n",
            "user=28282 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 86%|████████▋ | 1492/1726 [00:02<00:00, 841.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1595/1726 [00:02<00:00, 890.20it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=29448 has no recommend results...\n",
            "user=30427 has no recommend results...\n",
            "user=31417 has no recommend results...\n",
            "user=32165 has no recommend results...\n",
            "user=32715 has no recommend results...\n",
            "user=33210 has no recommend results...\n",
            "user=33309 has no recommend results...\n",
            "user=33507 has no recommend results...\n",
            "user=33529 has no recommend results...\n",
            "user=34332 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "100%|██████████| 1726/1726 [00:02<00:00, 715.59it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=34761 has no recommend results...\n",
            "user=35058 has no recommend results...\n",
            "user=35311 has no recommend results...\n",
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/41031 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 608/41031 [00:00<00:08, 5007.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 975/41031 [00:00<00:08, 4511.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1602/41031 [00:00<00:08, 4885.64it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1935/41031 [00:00<00:09, 4040.57it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2451/41031 [00:00<00:08, 4320.46it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2829/41031 [00:00<00:09, 3950.10it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3349/41031 [00:00<00:08, 4255.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4155/41031 [00:00<00:07, 4957.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4684/41031 [00:01<00:14, 2539.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5169/41031 [00:01<00:12, 2962.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5599/41031 [00:01<00:11, 3051.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6488/41031 [00:01<00:09, 3797.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7207/41031 [00:01<00:07, 4302.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7907/41031 [00:01<00:06, 4864.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8515/41031 [00:02<00:14, 2260.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9192/41031 [00:02<00:11, 2824.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10050/41031 [00:02<00:08, 3536.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10673/41031 [00:02<00:08, 3751.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11257/41031 [00:02<00:07, 4194.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 11918/41031 [00:02<00:06, 4710.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12770/41031 [00:03<00:05, 5420.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13667/41031 [00:03<00:04, 6145.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 14404/41031 [00:03<00:10, 2552.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15471/41031 [00:03<00:07, 3307.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16175/41031 [00:04<00:06, 3848.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 17001/41031 [00:04<00:05, 4579.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17769/41031 [00:04<00:04, 5179.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 18514/41031 [00:04<00:03, 5699.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19248/41031 [00:04<00:04, 4778.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20217/41031 [00:04<00:03, 5628.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21286/41031 [00:04<00:03, 6559.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22112/41031 [00:04<00:02, 6861.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 22931/41031 [00:05<00:02, 7165.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23737/41031 [00:05<00:07, 2465.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 24677/41031 [00:05<00:05, 3165.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25438/41031 [00:06<00:04, 3838.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26370/41031 [00:06<00:03, 4652.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27402/41031 [00:06<00:02, 5569.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28256/41031 [00:06<00:02, 5371.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 29003/41031 [00:06<00:02, 5402.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 30250/41031 [00:06<00:01, 6509.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 31199/41031 [00:06<00:01, 7147.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 32076/41031 [00:06<00:01, 7227.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 32913/41031 [00:06<00:01, 7285.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33722/41031 [00:07<00:00, 7378.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 34952/41031 [00:07<00:00, 8384.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36060/41031 [00:08<00:01, 2745.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 36942/41031 [00:08<00:01, 3459.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37793/41031 [00:08<00:00, 4208.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38678/41031 [00:08<00:00, 4984.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39482/41031 [00:08<00:00, 5173.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40215/41031 [00:08<00:00, 4461.11it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 41031/41031 [00:09<00:00, 4459.52it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1690 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 90/1690 [00:00<00:01, 855.50it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41026 18398\n",
            "user=596 has no recommend results...\n",
            "user=1355 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  9%|▉         | 152/1690 [00:00<00:02, 767.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 217/1690 [00:00<00:02, 726.80it/s]\u001b[A\u001b[A\n",
            "\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=2686 has no recommend results...\n",
            "user=2950 has no recommend results...\n",
            "user=4391 has no recommend results...\n",
            "user=4875 has no recommend results...\n",
            "user=5018 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\r 18%|█▊        | 308/1690 [00:00<00:01, 773.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 380/1690 [00:00<00:01, 737.31it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=5832 has no recommend results...\n",
            "user=6085 has no recommend results...\n",
            "user=6943 has no recommend results...\n",
            "user=8098 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 26%|██▌       | 442/1690 [00:00<00:01, 685.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 517/1690 [00:00<00:01, 702.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 590/1690 [00:00<00:01, 705.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 670/1690 [00:00<00:01, 729.52it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=9957 has no recommend results...\n",
            "user=10584 has no recommend results...\n",
            "user=11365 has no recommend results...\n",
            "user=12047 has no recommend results...\n",
            "user=12179 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 44%|████▍     | 741/1690 [00:01<00:01, 691.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 819/1690 [00:01<00:01, 709.26it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=13686 has no recommend results...\n",
            "user=14005 has no recommend results...\n",
            "user=15985 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 53%|█████▎    | 904/1690 [00:01<00:01, 745.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 979/1690 [00:01<00:01, 708.09it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=16898 has no recommend results...\n",
            "user=16986 has no recommend results...\n",
            "user=17481 has no recommend results...\n",
            "user=17778 has no recommend results...\n",
            "user=18020 has no recommend results...\n",
            "user=18207 has no recommend results...\n",
            "user=18647 has no recommend results...\n",
            "user=19450 has no recommend results...\n",
            "user=19758 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 62%|██████▏   | 1051/1690 [00:01<00:00, 660.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1118/1690 [00:01<00:00, 645.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1184/1690 [00:01<00:00, 604.34it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=21375 has no recommend results...\n",
            "user=22057 has no recommend results...\n",
            "user=22244 has no recommend results...\n",
            "user=22277 has no recommend results...\n",
            "user=22750 has no recommend results...\n",
            "user=23190 has no recommend results...\n",
            "user=23806 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 76%|███████▋  | 1291/1690 [00:01<00:00, 683.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1364/1690 [00:01<00:00, 630.31it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=24147 has no recommend results...\n",
            "user=24268 has no recommend results...\n",
            "user=24521 has no recommend results...\n",
            "user=24543 has no recommend results...\n",
            "user=25467 has no recommend results...\n",
            "user=25797 has no recommend results...\n",
            "user=26149 has no recommend results...\n",
            "user=26402 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 85%|████████▍ | 1431/1690 [00:02<00:00, 604.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1562/1690 [00:02<00:00, 719.79it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=28041 has no recommend results...\n",
            "user=28547 has no recommend results...\n",
            "user=29009 has no recommend results...\n",
            "user=29438 has no recommend results...\n",
            "user=29636 has no recommend results...\n",
            "user=29647 has no recommend results...\n",
            "user=30978 has no recommend results...\n",
            "user=31176 has no recommend results...\n",
            "user=32144 has no recommend results...\n",
            "user=32397 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "100%|██████████| 1690/1690 [00:02<00:00, 726.28it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=33398 has no recommend results...\n",
            "user=33431 has no recommend results...\n",
            "user=35103 has no recommend results...\n",
            "user=35345 has no recommend results...\n",
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/42815 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 380/42815 [00:00<00:11, 3790.04it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 662/42815 [00:00<00:13, 3151.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 1008/42815 [00:00<00:24, 1680.80it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1495/42815 [00:00<00:19, 2072.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1724/42815 [00:00<00:20, 1971.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1936/42815 [00:01<00:23, 1757.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2329/42815 [00:01<00:19, 2102.79it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2688/42815 [00:01<00:30, 1333.53it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2917/42815 [00:01<00:26, 1502.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3321/42815 [00:01<00:21, 1830.25it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3813/42815 [00:01<00:17, 2251.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4360/42815 [00:02<00:14, 2730.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4801/42815 [00:02<00:12, 3066.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5203/42815 [00:02<00:12, 3110.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5581/42815 [00:02<00:26, 1394.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5864/42815 [00:03<00:23, 1565.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6752/42815 [00:03<00:17, 2062.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7494/42815 [00:03<00:13, 2606.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7994/42815 [00:03<00:11, 2915.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8465/42815 [00:03<00:12, 2709.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9223/42815 [00:03<00:10, 3356.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9730/42815 [00:03<00:09, 3622.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10219/42815 [00:04<00:20, 1580.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10780/42815 [00:04<00:16, 1984.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11528/42815 [00:04<00:12, 2500.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12000/42815 [00:04<00:11, 2800.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12477/42815 [00:04<00:09, 3165.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13327/42815 [00:05<00:07, 3885.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13891/42815 [00:05<00:07, 4107.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14752/42815 [00:05<00:05, 4833.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15435/42815 [00:05<00:05, 5287.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16105/42815 [00:05<00:04, 5469.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16777/42815 [00:05<00:04, 5789.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17417/42815 [00:05<00:04, 5792.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18342/42815 [00:05<00:03, 6407.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 19033/42815 [00:06<00:12, 1910.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19626/42815 [00:06<00:09, 2393.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20155/42815 [00:07<00:10, 2245.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21048/42815 [00:07<00:07, 2895.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22073/42815 [00:07<00:05, 3686.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22776/42815 [00:07<00:04, 4212.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 23661/42815 [00:07<00:03, 4998.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24583/42815 [00:07<00:03, 5793.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 25516/42815 [00:07<00:02, 6532.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26353/42815 [00:07<00:02, 6492.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 27288/42815 [00:08<00:02, 7147.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28284/42815 [00:08<00:01, 7808.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29160/42815 [00:08<00:01, 7245.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29960/42815 [00:08<00:01, 6950.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30710/42815 [00:09<00:06, 1814.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 31563/42815 [00:09<00:04, 2375.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32407/42815 [00:09<00:03, 2985.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33077/42815 [00:09<00:02, 3474.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33896/42815 [00:09<00:02, 4192.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34585/42815 [00:10<00:02, 3292.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35467/42815 [00:10<00:01, 4054.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36502/42815 [00:10<00:01, 4957.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37567/42815 [00:10<00:00, 5901.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 38420/42815 [00:10<00:00, 6144.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39222/42815 [00:10<00:00, 6129.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39966/42815 [00:10<00:00, 6094.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40667/42815 [00:11<00:00, 6187.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41351/42815 [00:11<00:00, 4256.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41904/42815 [00:11<00:00, 4550.77it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 42815/42815 [00:11<00:00, 3645.82it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1675 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 35/1675 [00:00<00:04, 340.58it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42809 18821\n",
            "user=311 has no recommend results...\n",
            "user=355 has no recommend results...\n",
            "user=498 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  6%|▌         | 103/1675 [00:00<00:03, 397.04it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 132/1675 [00:00<00:04, 311.68it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=1510 has no recommend results...\n",
            "user=2247 has no recommend results...\n",
            "user=2456 has no recommend results...\n",
            "user=2929 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 10%|█         | 175/1675 [00:00<00:04, 334.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 205/1675 [00:00<00:05, 250.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 231/1675 [00:00<00:05, 252.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 290/1675 [00:00<00:04, 304.73it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=4282 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 19%|█▉        | 326/1675 [00:00<00:04, 302.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 360/1675 [00:01<00:04, 303.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 393/1675 [00:01<00:04, 297.32it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=6339 has no recommend results...\n",
            "user=7351 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 25%|██▌       | 425/1675 [00:01<00:04, 277.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 475/1675 [00:01<00:03, 310.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 539/1675 [00:01<00:03, 365.59it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=8187 has no recommend results...\n",
            "user=8627 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 35%|███▌      | 587/1675 [00:01<00:02, 393.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 656/1675 [00:01<00:02, 451.29it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=10805 has no recommend results...\n",
            "user=11421 has no recommend results...\n",
            "user=12125 has no recommend results...\n",
            "user=12169 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 42%|████▏     | 708/1675 [00:01<00:02, 360.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 792/1675 [00:02<00:02, 433.68it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=13225 has no recommend results...\n",
            "user=13434 has no recommend results...\n",
            "user=13621 has no recommend results...\n",
            "user=13797 has no recommend results...\n",
            "user=14182 has no recommend results...\n",
            "user=14787 has no recommend results...\n",
            "user=15073 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 51%|█████     | 847/1675 [00:02<00:01, 443.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 900/1675 [00:02<00:01, 416.31it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=16756 has no recommend results...\n",
            "user=18318 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 57%|█████▋    | 959/1675 [00:02<00:01, 456.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1014/1675 [00:02<00:01, 479.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 1067/1675 [00:02<00:01, 466.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1121/1675 [00:02<00:01, 484.61it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=20144 has no recommend results...\n",
            "user=20364 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 70%|██████▉   | 1172/1675 [00:02<00:01, 476.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1246/1675 [00:02<00:00, 531.18it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=23081 has no recommend results...\n",
            "user=23741 has no recommend results...\n",
            "user=24225 has no recommend results...\n",
            "user=24731 has no recommend results...\n",
            "user=25237 has no recommend results...\n",
            "user=25457 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 78%|███████▊  | 1310/1675 [00:03<00:00, 553.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1368/1675 [00:03<00:00, 525.97it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=26832 has no recommend results...\n",
            "user=27657 has no recommend results...\n",
            "user=28812 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 85%|████████▍ | 1423/1675 [00:03<00:00, 517.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 1510/1675 [00:03<00:00, 587.14it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=29945 has no recommend results...\n",
            "user=30000 has no recommend results...\n",
            "user=30088 has no recommend results...\n",
            "user=30429 has no recommend results...\n",
            "user=30473 has no recommend results...\n",
            "user=30990 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 94%|█████████▍| 1573/1675 [00:03<00:00, 314.38it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1675/1675 [00:04<00:00, 417.42it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=32717 has no recommend results...\n",
            "user=33135 has no recommend results...\n",
            "user=33641 has no recommend results...\n",
            "user=34609 has no recommend results...\n",
            "user=34796 has no recommend results...\n",
            "user=34939 has no recommend results...\n",
            "phase: 4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/42840 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 356/42840 [00:00<00:11, 3557.54it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 606/42840 [00:00<00:14, 2963.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 745/42840 [00:00<00:45, 920.95it/s] \u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 992/42840 [00:00<00:38, 1094.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1438/42840 [00:00<00:29, 1413.73it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1704/42840 [00:00<00:27, 1482.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1913/42840 [00:01<00:28, 1447.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2356/42840 [00:01<00:22, 1811.00it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2619/42840 [00:01<00:37, 1084.74it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2820/42840 [00:01<00:32, 1241.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3109/42840 [00:01<00:26, 1497.13it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3549/42840 [00:02<00:21, 1853.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4120/42840 [00:02<00:16, 2308.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4480/42840 [00:02<00:15, 2428.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4815/42840 [00:02<00:14, 2595.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5142/42840 [00:02<00:15, 2476.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5438/42840 [00:03<00:34, 1075.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5660/42840 [00:03<00:30, 1224.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6224/42840 [00:03<00:22, 1600.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6776/42840 [00:03<00:17, 2033.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7376/42840 [00:03<00:13, 2534.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7957/42840 [00:03<00:12, 2843.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8391/42840 [00:03<00:11, 2899.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8978/42840 [00:03<00:09, 3399.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9457/42840 [00:04<00:08, 3723.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 10104/42840 [00:04<00:07, 4265.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10618/42840 [00:05<00:22, 1458.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11163/42840 [00:05<00:17, 1862.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11585/42840 [00:05<00:14, 2156.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11983/42840 [00:05<00:12, 2493.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12693/42840 [00:05<00:10, 2912.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13166/42840 [00:05<00:09, 3290.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14026/42840 [00:05<00:07, 4037.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14831/42840 [00:05<00:05, 4708.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15456/42840 [00:05<00:05, 4870.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 16053/42840 [00:06<00:05, 4764.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16607/42840 [00:06<00:05, 4949.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17449/42840 [00:06<00:04, 5613.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18080/42840 [00:06<00:04, 5611.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18758/42840 [00:06<00:04, 5916.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 19389/42840 [00:07<00:16, 1448.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19984/42840 [00:07<00:12, 1844.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21014/42840 [00:07<00:08, 2446.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21654/42840 [00:08<00:07, 2926.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22669/42840 [00:08<00:05, 3721.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23461/42840 [00:08<00:04, 4424.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24273/42840 [00:08<00:03, 5062.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 25027/42840 [00:08<00:03, 5433.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25751/42840 [00:08<00:03, 5384.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26416/42840 [00:08<00:03, 5464.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 27052/42840 [00:08<00:03, 5177.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27662/42840 [00:08<00:02, 5319.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28241/42840 [00:09<00:02, 5226.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29081/42840 [00:09<00:02, 5893.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29985/42840 [00:09<00:01, 6580.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30840/42840 [00:09<00:01, 7068.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31601/42840 [00:09<00:02, 5486.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32242/42840 [00:10<00:07, 1382.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32876/42840 [00:10<00:05, 1787.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33529/42840 [00:11<00:04, 2281.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34543/42840 [00:11<00:02, 2972.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35294/42840 [00:11<00:02, 3630.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 36219/42840 [00:11<00:01, 4439.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37076/42840 [00:11<00:01, 5094.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37848/42840 [00:11<00:00, 5442.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38583/42840 [00:11<00:00, 5679.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39397/42840 [00:11<00:00, 6245.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40184/42840 [00:11<00:00, 6603.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 40929/42840 [00:12<00:00, 4650.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41533/42840 [00:12<00:00, 4558.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42087/42840 [00:12<00:00, 3927.77it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 42840/42840 [00:12<00:00, 3354.37it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1708 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 41/1708 [00:00<00:04, 395.71it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42835 18618\n",
            "user=807 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  5%|▍         | 85/1708 [00:00<00:04, 404.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 139/1708 [00:00<00:03, 437.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 182/1708 [00:00<00:03, 433.14it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=1687 has no recommend results...\n",
            "user=1830 has no recommend results...\n",
            "user=2325 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 13%|█▎        | 217/1708 [00:00<00:03, 396.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 265/1708 [00:00<00:03, 416.45it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=4448 has no recommend results...\n",
            "user=5042 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 18%|█▊        | 303/1708 [00:00<00:04, 328.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 338/1708 [00:00<00:04, 334.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 399/1708 [00:01<00:03, 372.29it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=6054 has no recommend results...\n",
            "user=6318 has no recommend results...\n",
            "user=6483 has no recommend results...\n",
            "user=7088 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 26%|██▌       | 438/1708 [00:01<00:03, 335.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 501/1708 [00:01<00:03, 386.44it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=7825 has no recommend results...\n",
            "user=9200 has no recommend results...\n",
            "user=9541 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 32%|███▏      | 544/1708 [00:01<00:03, 358.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 584/1708 [00:01<00:04, 278.41it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=9849 has no recommend results...\n",
            "user=10344 has no recommend results...\n",
            "user=10850 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 36%|███▌      | 617/1708 [00:01<00:03, 284.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 658/1708 [00:01<00:03, 305.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 692/1708 [00:01<00:03, 290.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 732/1708 [00:02<00:03, 314.40it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=12599 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 45%|████▍     | 766/1708 [00:02<00:03, 310.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 799/1708 [00:02<00:03, 298.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 863/1708 [00:02<00:02, 354.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 904/1708 [00:02<00:02, 319.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 952/1708 [00:02<00:02, 354.35it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=17230 has no recommend results...\n",
            "user=17395 has no recommend results...\n",
            "user=18132 has no recommend results...\n",
            "user=18528 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 58%|█████▊    | 996/1708 [00:02<00:01, 375.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1045/1708 [00:02<00:01, 383.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 1086/1708 [00:03<00:01, 357.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1136/1708 [00:03<00:01, 380.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1176/1708 [00:03<00:01, 379.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1216/1708 [00:03<00:01, 384.87it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=22114 has no recommend results...\n",
            "user=22653 has no recommend results...\n",
            "user=23489 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 74%|███████▎  | 1256/1708 [00:03<00:01, 384.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1296/1708 [00:03<00:01, 336.25it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=24776 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 79%|███████▉  | 1351/1708 [00:03<00:00, 377.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1394/1708 [00:03<00:00, 387.53it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=26448 has no recommend results...\n",
            "user=27339 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 84%|████████▍ | 1436/1708 [00:03<00:00, 391.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 1477/1708 [00:04<00:00, 388.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1517/1708 [00:04<00:00, 374.62it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=29649 has no recommend results...\n",
            "user=29825 has no recommend results...\n",
            "user=30034 has no recommend results...\n",
            "user=30364 has no recommend results...\n",
            "user=30617 has no recommend results...\n",
            "user=30727 has no recommend results...\n",
            "user=30804 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 92%|█████████▏| 1565/1708 [00:04<00:00, 396.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 1624/1708 [00:04<00:00, 439.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 1671/1708 [00:04<00:00, 437.38it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=32146 has no recommend results...\n",
            "user=33807 has no recommend results...\n",
            "user=34302 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\r100%|██████████| 1708/1708 [00:04<00:00, 378.59it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "1927 96350 96197\n",
            "8462 423100 423100\n",
            "519297\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EaNaFirl_o32",
        "colab_type": "code",
        "outputId": "40f7d5f9-c381-4d68-b6c4-27a2b0313e74",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "# swing\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "\n",
        "recom_item = []\n",
        "whole_click = pd.DataFrame()\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "\n",
        "     # 出现在该阶段的商品\n",
        "    phase_item_ids = set(all_click['item_id'].unique()) \n",
        "\n",
        "    pred_user_time_dict = dict(zip(click_q_time['user_id'], click_q_time['time']))\n",
        "    phase_whole_click = pd.DataFrame()\n",
        "\n",
        "    def group_apply_func(group_df):\n",
        "      u = group_df['user_id'].iloc[0]\n",
        "      if u in pred_user_time_dict:\n",
        "         u_time = pred_user_time_dict[u]\n",
        "         group_df = group_df[group_df['time'] < u_time]\n",
        "      return group_df\n",
        "\n",
        "    phase_whole_click = whole_click.groupby('user_id', group_keys=False).apply(group_apply_func)\n",
        "    print(phase_whole_click.head())\n",
        "    print('group done')\n",
        "\n",
        "    # 过滤掉不在该阶段的商品\n",
        "    phase_whole_click = phase_whole_click[phase_whole_click['item_id'].isin(phase_item_ids)]\n",
        "\n",
        "    user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, user_item_dict = swing(phase_whole_click, 'user_id', 'item_id') # get_time_aware_sim_item(whole_click, 'user_id', 'item_id', use_iif=True, ret_time=True)\n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    recom_item_phase = []\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 100)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item_phase.append([i, j[0], j[1], c])\n",
        "    recom_item.extend(recom_item_phase)\n",
        "\n",
        "    recom_item_phase_df = pd.DataFrame(recom_item_phase, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "    recom_item_phase_df[recom_item_phase_df['sim']>0].to_csv(output_path + '/baseline_swing_origin_v7_phase_{}_filter.csv'.format(c), index=False, header=None)\n",
        "    recom_item_phase_df[recom_item_phase_df['sim']>0].to_csv(drive_output_path + '/baseline_swing_origin_v7_phase_{}_filter.csv'.format(c), index=False, header=None)\n",
        "    \n",
        "    del click_train, click_test, recom_item_phase, recom_item_phase_df, phase_whole_click, item_sim_list\n",
        "    gc.collect()\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_swing_origin_v7_filter.csv', index=False, header=None)\n",
        "recom_df[recom_df['sim']>0].to_csv(drive_output_path + '/baseline_swing_origin_v7_filter.csv', index=False, header=None)\n",
        "\n",
        "\n",
        "# result = get_predict(recom_df, 'sim', top50_click)\n",
        "result = get_feat_predict(recom_df, whole_click, user_feat_df, top50_click, feat_cols=['gender','age_level', 'city_level'])\n",
        "result.to_csv(output_path + '/baseline_swing_v7_filter.csv', index=False, header=None)\n",
        "result.to_csv(drive_output_path + '/baseline_swing_v7_filter.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/1675 [00:00<?, ?it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42815 27545\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 8/1675 [00:00<00:26, 61.79it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=311 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  2%|▏         | 29/1675 [00:00<00:25, 63.87it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 44/1675 [00:00<00:22, 72.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 70/1675 [00:00<00:17, 92.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 82/1675 [00:00<00:18, 84.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 93/1675 [00:00<00:19, 80.87it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=1510 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  6%|▌         | 103/1675 [00:01<00:21, 73.05it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 114/1675 [00:01<00:19, 80.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 124/1675 [00:01<00:22, 69.04it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 132/1675 [00:01<00:31, 48.27it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 144/1675 [00:01<00:26, 58.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 156/1675 [00:01<00:22, 68.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 166/1675 [00:02<00:25, 58.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 174/1675 [00:02<00:24, 62.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 182/1675 [00:02<00:30, 49.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 189/1675 [00:02<00:43, 34.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 196/1675 [00:03<00:38, 38.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 202/1675 [00:03<00:47, 30.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 210/1675 [00:03<00:39, 37.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 218/1675 [00:03<00:35, 40.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 224/1675 [00:03<00:41, 35.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 232/1675 [00:03<00:34, 42.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 246/1675 [00:03<00:27, 52.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 262/1675 [00:04<00:21, 65.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 274/1675 [00:04<00:21, 65.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 287/1675 [00:04<00:18, 74.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 298/1675 [00:04<00:16, 82.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 310/1675 [00:04<00:15, 90.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 321/1675 [00:04<00:21, 61.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 330/1675 [00:05<00:24, 55.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 342/1675 [00:05<00:21, 61.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 350/1675 [00:05<00:22, 60.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 357/1675 [00:05<00:22, 59.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 366/1675 [00:05<00:23, 56.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 373/1675 [00:05<00:26, 48.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 388/1675 [00:06<00:22, 58.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 396/1675 [00:06<00:26, 47.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 402/1675 [00:06<00:26, 47.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 414/1675 [00:06<00:25, 49.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 420/1675 [00:06<00:36, 34.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 433/1675 [00:07<00:29, 42.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 445/1675 [00:07<00:23, 52.83it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=8187 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 27%|██▋       | 454/1675 [00:07<00:26, 45.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 467/1675 [00:07<00:21, 56.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 476/1675 [00:07<00:21, 56.59it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=8627 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 29%|██▉       | 484/1675 [00:07<00:19, 60.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 505/1675 [00:07<00:15, 76.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 519/1675 [00:08<00:14, 81.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 530/1675 [00:08<00:15, 74.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 540/1675 [00:08<00:15, 71.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 553/1675 [00:08<00:13, 81.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 563/1675 [00:08<00:13, 81.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 573/1675 [00:08<00:13, 78.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 582/1675 [00:08<00:17, 63.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 590/1675 [00:09<00:16, 65.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 603/1675 [00:09<00:14, 75.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 615/1675 [00:09<00:12, 82.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 632/1675 [00:09<00:12, 83.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 641/1675 [00:09<00:12, 84.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 656/1675 [00:09<00:10, 93.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 667/1675 [00:09<00:14, 67.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 676/1675 [00:10<00:19, 52.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 683/1675 [00:10<00:19, 49.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 692/1675 [00:10<00:17, 57.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 699/1675 [00:10<00:18, 51.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 706/1675 [00:10<00:17, 54.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 716/1675 [00:10<00:15, 63.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 732/1675 [00:10<00:12, 76.75it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=13797 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 45%|████▍     | 747/1675 [00:11<00:11, 83.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 758/1675 [00:11<00:10, 85.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 778/1675 [00:11<00:08, 101.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 791/1675 [00:11<00:08, 106.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 804/1675 [00:11<00:09, 96.08it/s] \u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 817/1675 [00:11<00:09, 94.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 828/1675 [00:11<00:10, 84.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 838/1675 [00:12<00:11, 73.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 852/1675 [00:12<00:09, 83.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 862/1675 [00:12<00:10, 74.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 871/1675 [00:12<00:13, 59.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 880/1675 [00:12<00:13, 58.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 887/1675 [00:12<00:15, 51.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 897/1675 [00:13<00:13, 58.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 911/1675 [00:13<00:11, 69.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 926/1675 [00:13<00:09, 78.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 936/1675 [00:13<00:10, 71.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 945/1675 [00:13<00:09, 75.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 955/1675 [00:13<00:08, 80.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 964/1675 [00:13<00:10, 67.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 972/1675 [00:14<00:10, 65.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 982/1675 [00:14<00:10, 67.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 996/1675 [00:14<00:09, 74.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1005/1675 [00:14<00:09, 71.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1013/1675 [00:14<00:09, 67.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1023/1675 [00:14<00:08, 74.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1035/1675 [00:14<00:08, 77.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1048/1675 [00:14<00:07, 88.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1058/1675 [00:15<00:07, 84.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 1067/1675 [00:15<00:09, 64.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1075/1675 [00:15<00:09, 65.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 1083/1675 [00:15<00:10, 56.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1096/1675 [00:15<00:08, 65.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 1110/1675 [00:15<00:07, 76.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1120/1675 [00:15<00:08, 66.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1135/1675 [00:16<00:06, 78.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1145/1675 [00:16<00:06, 76.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1160/1675 [00:16<00:06, 76.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 1169/1675 [00:16<00:06, 75.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1178/1675 [00:16<00:07, 70.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1193/1675 [00:16<00:05, 82.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1203/1675 [00:16<00:05, 82.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1213/1675 [00:17<00:06, 72.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1225/1675 [00:17<00:05, 77.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1241/1675 [00:17<00:04, 91.74it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=24731 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 75%|███████▍  | 1254/1675 [00:17<00:04, 97.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1270/1675 [00:17<00:03, 110.72it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=25457 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 77%|███████▋  | 1283/1675 [00:17<00:03, 100.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1303/1675 [00:17<00:03, 101.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 1318/1675 [00:17<00:03, 112.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 1331/1675 [00:18<00:03, 114.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 1344/1675 [00:18<00:02, 117.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1357/1675 [00:18<00:04, 75.69it/s] \u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1367/1675 [00:18<00:03, 79.22it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=27657 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 83%|████████▎ | 1382/1675 [00:18<00:03, 91.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1394/1675 [00:18<00:03, 75.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1405/1675 [00:19<00:03, 82.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1415/1675 [00:19<00:03, 74.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1433/1675 [00:19<00:03, 80.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 1446/1675 [00:19<00:02, 90.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 1473/1675 [00:19<00:01, 113.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1489/1675 [00:19<00:01, 119.93it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=29945 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 90%|████████▉ | 1506/1675 [00:19<00:01, 130.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 1522/1675 [00:19<00:01, 124.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1537/1675 [00:20<00:01, 123.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1551/1675 [00:20<00:02, 61.31it/s] \u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1562/1675 [00:20<00:01, 60.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 1571/1675 [00:20<00:01, 60.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 1580/1675 [00:21<00:01, 60.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 1590/1675 [00:21<00:01, 68.09it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=32717 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 96%|█████████▋| 1615/1675 [00:21<00:00, 86.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 1628/1675 [00:21<00:00, 78.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 1639/1675 [00:21<00:00, 63.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 1648/1675 [00:21<00:00, 61.43it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1675/1675 [00:22<00:00, 75.86it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 4\n",
            "       user_id  item_id      time\n",
            "3123         1    47611  0.983887\n",
            "19709        1    76240  0.983770\n",
            "19829        1    78142  0.983742\n",
            "20480        1    89568  0.983763\n",
            "20968        1    97795  0.983877\n",
            "group done\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/42840 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 57/42840 [00:00<01:17, 555.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 139/42840 [00:00<01:10, 609.13it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 186/42840 [00:00<01:18, 541.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 234/42840 [00:00<01:21, 520.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 275/42840 [00:00<02:06, 336.75it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 309/42840 [00:00<02:40, 264.64it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 351/42840 [00:01<02:43, 259.33it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 379/42840 [00:01<03:41, 192.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 431/42840 [00:01<02:59, 236.72it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 496/42840 [00:01<02:25, 291.00it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 559/42840 [00:01<02:01, 346.71it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 607/42840 [00:01<03:22, 208.24it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 644/42840 [00:02<05:56, 118.26it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 672/42840 [00:02<05:20, 131.48it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 764/42840 [00:02<04:02, 173.51it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 850/42840 [00:03<03:04, 227.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 902/42840 [00:03<02:51, 245.12it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 948/42840 [00:03<03:08, 221.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 986/42840 [00:03<02:46, 250.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 1023/42840 [00:04<06:02, 115.24it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 1051/42840 [00:04<05:19, 130.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1076/42840 [00:04<05:03, 137.60it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1189/42840 [00:04<03:43, 186.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1237/42840 [00:04<03:14, 213.51it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1280/42840 [00:05<03:06, 223.10it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1324/42840 [00:05<02:47, 247.35it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1390/42840 [00:05<02:24, 286.52it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1432/42840 [00:05<02:11, 314.60it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1472/42840 [00:05<02:28, 279.10it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 1507/42840 [00:05<02:47, 247.49it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 1545/42840 [00:05<02:29, 275.56it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1623/42840 [00:05<02:00, 341.42it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1681/42840 [00:06<01:45, 388.97it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1731/42840 [00:06<03:55, 174.80it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1768/42840 [00:09<15:38, 43.76it/s] \u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1795/42840 [00:09<12:06, 56.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1819/42840 [00:09<11:20, 60.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1889/42840 [00:09<08:17, 82.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1941/42840 [00:09<06:11, 110.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1978/42840 [00:09<04:56, 137.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2014/42840 [00:10<05:51, 115.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2074/42840 [00:10<04:26, 152.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2116/42840 [00:10<03:41, 184.11it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2153/42840 [00:10<03:38, 186.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2216/42840 [00:10<02:51, 236.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2259/42840 [00:10<02:31, 268.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2324/42840 [00:10<02:05, 322.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2371/42840 [00:11<02:02, 329.53it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2415/42840 [00:11<02:01, 331.38it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2513/42840 [00:11<01:37, 412.52it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2571/42840 [00:11<01:39, 404.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2636/42840 [00:12<02:48, 238.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2686/42840 [00:12<02:29, 267.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2726/42840 [00:12<02:25, 274.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2763/42840 [00:12<02:24, 276.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2797/42840 [00:12<02:18, 290.13it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2855/42840 [00:12<02:03, 324.51it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2892/42840 [00:13<05:05, 130.80it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2946/42840 [00:13<03:58, 167.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2980/42840 [00:13<03:27, 191.82it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3029/42840 [00:13<02:49, 234.54it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3067/42840 [00:13<02:31, 262.97it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3105/42840 [00:13<02:19, 284.38it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3175/42840 [00:14<01:57, 337.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3235/42840 [00:14<01:42, 387.48it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3284/42840 [00:14<03:22, 195.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3363/42840 [00:14<02:36, 252.18it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3414/42840 [00:14<02:21, 279.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3460/42840 [00:15<02:07, 308.95it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3522/42840 [00:15<01:48, 363.60it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3572/42840 [00:15<01:41, 385.74it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3621/42840 [00:15<01:35, 409.44it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 3706/42840 [00:15<01:21, 480.22it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3764/42840 [00:15<01:27, 445.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3816/42840 [00:15<01:30, 431.17it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3873/42840 [00:15<01:24, 463.77it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3951/42840 [00:15<01:13, 526.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 4010/42840 [00:16<01:43, 374.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4085/42840 [00:16<01:28, 436.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4140/42840 [00:16<01:34, 411.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4197/42840 [00:16<01:26, 444.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4249/42840 [00:16<01:43, 372.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4293/42840 [00:16<02:01, 316.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4340/42840 [00:17<01:54, 337.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4379/42840 [00:17<01:50, 349.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4454/42840 [00:17<01:42, 372.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4529/42840 [00:17<01:28, 434.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4592/42840 [00:17<01:19, 479.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4646/42840 [00:17<01:24, 450.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4696/42840 [00:18<02:57, 215.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4793/42840 [00:18<02:23, 265.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4837/42840 [00:18<02:09, 293.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4913/42840 [00:18<01:45, 358.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4969/42840 [00:19<03:23, 186.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5040/42840 [00:19<02:40, 234.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5095/42840 [00:21<09:27, 66.54it/s] \u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5132/42840 [00:21<08:50, 71.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5158/42840 [00:22<06:54, 90.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5184/42840 [00:22<05:56, 105.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5235/42840 [00:22<04:37, 135.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5298/42840 [00:22<03:34, 175.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5335/42840 [00:22<04:23, 142.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5400/42840 [00:22<03:21, 185.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5440/42840 [00:23<02:53, 215.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5478/42840 [00:23<04:14, 146.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5534/42840 [00:23<03:33, 174.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5568/42840 [00:23<03:07, 198.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5598/42840 [00:23<03:22, 183.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5626/42840 [00:24<03:15, 189.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5654/42840 [00:24<03:10, 195.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5678/42840 [00:24<04:50, 128.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5751/42840 [00:24<03:43, 165.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5842/42840 [00:24<02:48, 219.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5899/42840 [00:24<02:17, 269.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5997/42840 [00:25<01:47, 343.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 6095/42840 [00:25<01:36, 380.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 6156/42840 [00:25<01:26, 425.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6216/42840 [00:25<01:22, 443.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6273/42840 [00:25<01:30, 405.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6354/42840 [00:25<01:16, 476.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6440/42840 [00:25<01:07, 540.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6548/42840 [00:26<01:15, 478.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6605/42840 [00:26<01:34, 384.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6653/42840 [00:26<01:30, 401.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6700/42840 [00:26<01:39, 363.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6788/42840 [00:26<01:21, 440.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6865/42840 [00:26<01:11, 503.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 6989/42840 [00:26<01:00, 591.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 7062/42840 [00:27<01:02, 574.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7130/42840 [00:27<01:03, 560.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7193/42840 [00:27<01:13, 488.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7249/42840 [00:28<03:24, 173.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7290/42840 [00:28<04:18, 137.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7345/42840 [00:28<03:21, 175.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7396/42840 [00:28<02:41, 218.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7485/42840 [00:28<02:04, 282.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7565/42840 [00:29<01:50, 320.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7618/42840 [00:29<01:57, 298.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7683/42840 [00:29<01:38, 356.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7784/42840 [00:29<01:19, 442.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7850/42840 [00:29<01:20, 432.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7909/42840 [00:29<01:17, 452.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7966/42840 [00:30<03:30, 165.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 8009/42840 [00:31<06:01, 96.45it/s] \u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8057/42840 [00:31<04:36, 125.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8092/42840 [00:31<04:02, 143.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8165/42840 [00:31<03:04, 188.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8263/42840 [00:31<02:19, 248.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8323/42840 [00:32<01:58, 291.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8380/42840 [00:32<01:55, 298.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8477/42840 [00:32<01:31, 375.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8556/42840 [00:32<01:18, 439.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8685/42840 [00:32<01:05, 524.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8785/42840 [00:32<00:55, 609.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8867/42840 [00:32<01:05, 521.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8936/42840 [00:33<01:22, 410.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8993/42840 [00:33<02:03, 273.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 9057/42840 [00:33<01:43, 327.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 9106/42840 [00:33<01:36, 348.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 9153/42840 [00:33<01:41, 332.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9228/42840 [00:34<01:24, 398.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9280/42840 [00:34<01:39, 338.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9355/42840 [00:34<01:22, 404.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9409/42840 [00:34<01:19, 418.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9460/42840 [00:34<01:32, 359.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9510/42840 [00:34<01:25, 389.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9578/42840 [00:34<01:14, 446.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9630/42840 [00:35<01:21, 405.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9706/42840 [00:35<01:11, 462.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9787/42840 [00:35<01:02, 527.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9865/42840 [00:35<00:59, 549.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9926/42840 [00:35<01:11, 458.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 10001/42840 [00:35<01:03, 518.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 10077/42840 [00:35<00:57, 572.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 10142/42840 [00:36<01:35, 342.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10193/42840 [00:36<01:27, 371.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10242/42840 [00:36<01:24, 385.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10290/42840 [00:36<01:31, 356.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10333/42840 [00:36<02:12, 245.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10367/42840 [00:36<02:02, 264.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10466/42840 [00:37<01:35, 338.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10542/42840 [00:37<01:19, 405.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10602/42840 [00:37<01:23, 388.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10655/42840 [00:40<11:14, 47.73it/s] \u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10747/42840 [00:40<08:01, 66.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10867/42840 [00:40<05:44, 92.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10940/42840 [00:41<04:46, 111.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11001/42840 [00:41<03:47, 139.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11052/42840 [00:41<03:28, 152.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11136/42840 [00:41<02:37, 201.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11190/42840 [00:41<02:09, 244.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 11288/42840 [00:41<01:40, 315.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11354/42840 [00:42<01:49, 288.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11415/42840 [00:42<01:32, 339.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11470/42840 [00:42<01:42, 307.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11517/42840 [00:42<01:41, 309.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11594/42840 [00:42<01:23, 374.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11646/42840 [00:43<01:31, 342.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11691/42840 [00:43<01:37, 319.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11773/42840 [00:43<01:19, 390.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11825/42840 [00:43<01:13, 420.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11952/42840 [00:43<00:58, 525.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12026/42840 [00:43<01:13, 418.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12096/42840 [00:43<01:04, 474.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12159/42840 [00:43<01:05, 467.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 12269/42840 [00:44<00:54, 564.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12354/42840 [00:44<00:49, 615.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12429/42840 [00:44<00:49, 613.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12538/42840 [00:44<00:42, 705.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12630/42840 [00:44<00:39, 755.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12715/42840 [00:45<01:23, 360.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12779/42840 [00:45<01:12, 413.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12843/42840 [00:45<01:22, 365.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12897/42840 [00:45<01:36, 310.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12952/42840 [00:45<01:28, 339.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 13054/42840 [00:45<01:10, 421.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13120/42840 [00:45<01:03, 470.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13184/42840 [00:46<00:58, 505.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13246/42840 [00:46<01:22, 358.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13367/42840 [00:46<01:04, 454.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 13446/42840 [00:46<00:56, 520.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13520/42840 [00:46<00:57, 512.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13609/42840 [00:46<00:50, 579.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13683/42840 [00:46<00:48, 603.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13759/42840 [00:46<00:45, 636.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13896/42840 [00:47<00:38, 757.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13991/42840 [00:47<00:35, 802.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14083/42840 [00:47<00:37, 762.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14184/42840 [00:47<00:34, 819.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14273/42840 [00:47<00:40, 712.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 14352/42840 [00:47<00:47, 600.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 14430/42840 [00:47<00:45, 625.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14499/42840 [00:48<00:47, 601.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14564/42840 [00:48<00:53, 527.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14683/42840 [00:48<00:44, 632.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14759/42840 [00:48<00:45, 622.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14830/42840 [00:48<00:44, 633.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14900/42840 [00:48<00:43, 643.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14969/42840 [00:48<00:45, 617.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 15037/42840 [00:48<00:48, 574.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 15139/42840 [00:48<00:42, 659.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15212/42840 [00:49<00:58, 473.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15308/42840 [00:49<00:49, 557.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15379/42840 [00:49<00:46, 590.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15449/42840 [00:50<01:39, 276.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15502/42840 [00:50<01:35, 286.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 15549/42840 [00:50<01:44, 262.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15649/42840 [00:50<01:21, 334.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15717/42840 [00:50<01:22, 328.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15769/42840 [00:50<01:14, 361.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15829/42840 [00:50<01:05, 410.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15881/42840 [00:51<01:27, 308.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 16019/42840 [00:51<01:06, 402.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16098/42840 [00:51<01:41, 262.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16209/42840 [00:51<01:18, 340.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16288/42840 [00:52<01:04, 410.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16361/42840 [00:52<01:15, 349.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16420/42840 [00:52<01:09, 378.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16484/42840 [00:52<01:03, 417.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 16540/42840 [00:52<00:58, 448.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16636/42840 [00:52<00:49, 533.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16748/42840 [00:52<00:41, 632.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16829/42840 [00:52<00:40, 639.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16906/42840 [00:53<00:40, 639.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 17011/42840 [00:53<00:35, 723.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 17123/42840 [00:53<00:32, 795.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 17244/42840 [00:53<00:29, 881.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 17342/42840 [00:53<00:29, 851.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17434/42840 [00:53<00:32, 779.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17518/42840 [00:53<00:41, 611.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17589/42840 [00:54<00:42, 594.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 17693/42840 [00:54<00:36, 682.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 17771/42840 [00:54<00:42, 595.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17864/42840 [00:54<00:37, 666.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17940/42840 [00:54<00:40, 610.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18009/42840 [00:54<01:11, 345.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18062/42840 [00:55<01:21, 304.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18107/42840 [00:55<01:14, 334.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18170/42840 [00:55<01:03, 387.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18255/42840 [00:55<00:53, 462.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18315/42840 [00:55<00:51, 477.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18415/42840 [00:55<00:43, 565.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18485/42840 [00:55<01:00, 402.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18550/42840 [00:56<00:54, 446.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18612/42840 [00:56<00:50, 480.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 18670/42840 [00:56<00:58, 416.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18761/42840 [00:56<00:48, 497.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18824/42840 [00:56<00:47, 509.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18884/42840 [00:57<01:24, 282.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18978/42840 [00:57<01:06, 357.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 19064/42840 [00:59<04:22, 90.72it/s] \u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 19125/42840 [01:04<11:40, 33.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 19235/42840 [01:04<08:14, 47.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 19325/42840 [01:04<05:53, 66.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 19416/42840 [01:04<04:14, 92.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19493/42840 [01:04<03:06, 125.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19567/42840 [01:04<02:27, 157.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19682/42840 [01:04<01:50, 209.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19774/42840 [01:04<01:24, 271.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19921/42840 [01:05<01:04, 354.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20012/42840 [01:05<01:11, 318.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20110/42840 [01:05<00:56, 399.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20189/42840 [01:05<00:51, 437.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20262/42840 [01:05<00:46, 489.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20333/42840 [01:05<00:42, 534.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20446/42840 [01:06<00:35, 633.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20568/42840 [01:06<00:30, 738.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20662/42840 [01:06<00:29, 748.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20772/42840 [01:06<00:26, 827.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 20868/42840 [01:06<00:33, 663.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20949/42840 [01:06<00:57, 383.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21061/42840 [01:07<00:45, 477.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21138/42840 [01:07<00:50, 429.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 21216/42840 [01:07<00:43, 495.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 21286/42840 [01:07<00:39, 542.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 21399/42840 [01:07<00:33, 642.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 21481/42840 [01:07<00:31, 673.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 21563/42840 [01:08<00:52, 406.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 21626/42840 [01:08<01:05, 322.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21704/42840 [01:08<00:54, 390.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21763/42840 [01:08<00:51, 409.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21867/42840 [01:08<00:42, 492.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 21975/42840 [01:08<00:35, 588.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22086/42840 [01:08<00:30, 683.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22175/42840 [01:09<00:30, 673.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22264/42840 [01:09<00:28, 726.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22348/42840 [01:09<00:35, 582.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22429/42840 [01:09<00:34, 591.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22518/42840 [01:09<00:31, 648.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22638/42840 [01:09<00:27, 748.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22724/42840 [01:09<00:26, 760.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22808/42840 [01:10<00:36, 549.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22877/42840 [01:10<00:36, 553.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 22985/42840 [01:10<00:30, 643.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23088/42840 [01:10<00:27, 706.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23184/42840 [01:10<00:26, 754.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23268/42840 [01:10<00:27, 702.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23375/42840 [01:10<00:25, 759.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23504/42840 [01:10<00:27, 696.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 23594/42840 [01:11<00:25, 746.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 23674/42840 [01:11<00:27, 697.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23778/42840 [01:11<00:24, 773.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23899/42840 [01:11<00:21, 867.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23994/42840 [01:11<00:27, 683.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 24074/42840 [01:11<00:26, 708.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 24202/42840 [01:11<00:22, 814.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24295/42840 [01:12<00:40, 454.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24367/42840 [01:12<00:43, 425.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24465/42840 [01:12<00:36, 509.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24561/42840 [01:12<00:30, 593.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24640/42840 [01:12<00:28, 634.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24719/42840 [01:12<00:28, 644.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24794/42840 [01:12<00:27, 663.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24868/42840 [01:13<00:34, 519.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24956/42840 [01:13<00:33, 526.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 25040/42840 [01:13<00:31, 570.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 25104/42840 [01:13<01:00, 294.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 25153/42840 [01:14<00:59, 296.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25221/42840 [01:14<00:49, 353.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25271/42840 [01:14<00:51, 344.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25316/42840 [01:14<00:49, 357.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25390/42840 [01:14<00:43, 403.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25463/42840 [01:14<00:38, 453.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 25544/42840 [01:14<00:33, 520.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 25610/42840 [01:14<00:38, 450.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25720/42840 [01:15<00:31, 540.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25788/42840 [01:15<00:30, 552.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25866/42840 [01:15<00:31, 545.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 25942/42840 [01:15<00:30, 561.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26003/42840 [01:15<00:31, 539.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26090/42840 [01:15<00:27, 607.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26206/42840 [01:15<00:23, 707.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 26287/42840 [01:15<00:27, 612.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26421/42840 [01:16<00:22, 729.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26510/42840 [01:16<00:23, 687.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26591/42840 [01:16<00:30, 526.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26669/42840 [01:16<00:28, 572.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26738/42840 [01:16<00:29, 541.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26862/42840 [01:16<00:24, 640.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26944/42840 [01:16<00:23, 685.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 27048/42840 [01:17<00:20, 753.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 27162/42840 [01:17<00:18, 835.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 27257/42840 [01:17<00:20, 743.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27340/42840 [01:17<00:32, 470.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27432/42840 [01:17<00:27, 550.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27533/42840 [01:17<00:24, 631.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27618/42840 [01:17<00:23, 649.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27695/42840 [01:18<00:44, 344.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27754/42840 [01:19<01:18, 191.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27812/42840 [01:19<01:02, 238.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 27936/42840 [01:19<00:47, 315.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 28007/42840 [01:19<00:39, 371.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28095/42840 [01:19<00:32, 449.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28174/42840 [01:19<00:46, 312.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28243/42840 [01:20<00:39, 373.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28332/42840 [01:20<00:35, 413.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 28392/42840 [01:20<00:34, 419.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28489/42840 [01:20<00:28, 505.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28587/42840 [01:20<00:25, 548.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28690/42840 [01:20<00:22, 634.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28768/42840 [01:20<00:22, 628.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28864/42840 [01:20<00:20, 673.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28940/42840 [01:21<00:20, 667.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29020/42840 [01:21<00:20, 671.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29094/42840 [01:21<00:20, 670.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29164/42840 [01:21<00:20, 655.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29262/42840 [01:21<00:18, 725.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 29366/42840 [01:21<00:17, 783.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29469/42840 [01:21<00:16, 816.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29554/42840 [01:21<00:18, 706.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29630/42840 [01:21<00:19, 674.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29744/42840 [01:22<00:17, 768.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29852/42840 [01:22<00:15, 839.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29943/42840 [01:22<00:15, 859.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 30069/42840 [01:22<00:14, 885.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 30162/42840 [01:22<00:15, 831.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30276/42840 [01:22<00:13, 900.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30405/42840 [01:22<00:12, 989.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30510/42840 [01:22<00:12, 972.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████▏  | 30612/42840 [01:22<00:13, 888.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30705/42840 [01:23<00:13, 891.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30798/42840 [01:23<00:17, 684.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30894/42840 [01:23<00:15, 748.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 31011/42840 [01:23<00:14, 830.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31122/42840 [01:23<00:13, 894.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31219/42840 [01:23<00:16, 710.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31302/42840 [01:23<00:16, 717.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31382/42840 [01:24<00:42, 270.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31441/42840 [01:24<00:36, 315.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 31498/42840 [01:24<00:35, 319.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 31555/42840 [01:25<00:31, 363.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31624/42840 [01:25<00:29, 375.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31713/42840 [01:25<00:25, 442.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31804/42840 [01:25<00:21, 523.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31871/42840 [01:25<00:27, 392.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 31941/42840 [01:25<00:24, 448.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 32019/42840 [01:25<00:21, 511.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32131/42840 [01:26<00:17, 607.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32213/42840 [01:26<00:16, 657.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32325/42840 [01:26<00:14, 749.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32414/42840 [01:26<00:15, 665.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32492/42840 [01:26<00:19, 530.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32580/42840 [01:26<00:17, 601.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32652/42840 [01:26<00:16, 611.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 32722/42840 [01:26<00:17, 579.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32801/42840 [01:27<00:15, 629.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32870/42840 [01:27<00:18, 552.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32931/42840 [01:27<00:17, 555.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33011/42840 [01:27<00:16, 610.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33082/42840 [01:27<00:15, 637.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33150/42840 [01:27<00:28, 338.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33214/42840 [01:28<00:24, 392.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33323/42840 [01:28<00:19, 485.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33395/42840 [01:28<00:21, 431.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33455/42840 [01:28<00:21, 443.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33529/42840 [01:28<00:18, 495.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 33639/42840 [01:28<00:15, 592.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 33732/42840 [01:28<00:13, 665.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33813/42840 [01:34<03:22, 44.52it/s] \u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33920/42840 [01:34<02:23, 62.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33987/42840 [01:34<01:45, 83.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 34063/42840 [01:34<01:16, 114.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 34138/42840 [01:35<00:56, 152.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 34227/42840 [01:35<00:42, 203.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 34308/42840 [01:35<00:32, 261.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 34383/42840 [01:35<00:27, 313.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34503/42840 [01:35<00:20, 402.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34588/42840 [01:35<00:17, 476.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34683/42840 [01:35<00:14, 559.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34776/42840 [01:35<00:13, 599.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 34864/42840 [01:35<00:12, 659.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 34960/42840 [01:36<00:10, 724.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35091/42840 [01:36<00:09, 836.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35191/42840 [01:36<00:10, 761.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35323/42840 [01:36<00:08, 871.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35425/42840 [01:36<00:09, 804.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35536/42840 [01:36<00:08, 875.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35660/42840 [01:36<00:07, 956.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35765/42840 [01:36<00:08, 878.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▎ | 35861/42840 [01:36<00:08, 867.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 35954/42840 [01:37<00:07, 868.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 36078/42840 [01:37<00:07, 950.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 36178/42840 [01:37<00:07, 896.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 36296/42840 [01:37<00:06, 965.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 36397/42840 [01:37<00:08, 803.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36520/42840 [01:37<00:07, 896.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36619/42840 [01:37<00:07, 829.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36710/42840 [01:37<00:08, 739.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36810/42840 [01:38<00:07, 799.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36897/42840 [01:38<00:07, 775.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 36984/42840 [01:38<00:07, 791.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37067/42840 [01:38<00:07, 773.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37147/42840 [01:38<00:12, 470.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37235/42840 [01:38<00:10, 535.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37318/42840 [01:38<00:09, 596.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37390/42840 [01:39<00:09, 593.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37458/42840 [01:39<00:09, 568.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37546/42840 [01:39<00:08, 634.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37617/42840 [01:39<00:07, 654.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37688/42840 [01:39<00:08, 580.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37752/42840 [01:39<00:11, 444.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37863/42840 [01:39<00:09, 540.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 37933/42840 [01:39<00:08, 570.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38027/42840 [01:40<00:07, 642.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38103/42840 [01:40<00:08, 556.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38169/42840 [01:40<00:13, 340.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38267/42840 [01:40<00:10, 422.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38332/42840 [01:40<00:10, 424.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 38400/42840 [01:41<00:09, 475.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 38497/42840 [01:41<00:07, 559.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38583/42840 [01:41<00:06, 625.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38663/42840 [01:41<00:06, 666.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38740/42840 [01:41<00:07, 550.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 38857/42840 [01:41<00:06, 653.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 38980/42840 [01:41<00:05, 760.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 39074/42840 [01:41<00:06, 549.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████▏| 39168/42840 [01:42<00:05, 620.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39248/42840 [01:42<00:06, 554.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39359/42840 [01:42<00:05, 652.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39441/42840 [01:42<00:05, 650.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39518/42840 [01:42<00:04, 671.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39594/42840 [01:42<00:05, 636.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39664/42840 [01:42<00:05, 566.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39727/42840 [01:43<00:07, 437.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39784/42840 [01:43<00:08, 365.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39875/42840 [01:43<00:06, 442.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39959/42840 [01:43<00:06, 447.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 40040/42840 [01:43<00:05, 517.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 40126/42840 [01:43<00:04, 585.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40195/42840 [01:44<00:06, 407.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40267/42840 [01:44<00:05, 462.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40326/42840 [01:44<00:06, 412.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40401/42840 [01:44<00:05, 469.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40458/42840 [01:44<00:05, 397.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40532/42840 [01:44<00:05, 460.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40588/42840 [01:45<00:06, 358.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40635/42840 [01:46<00:24, 90.45it/s] \u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40727/42840 [01:46<00:17, 123.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40778/42840 [01:46<00:12, 159.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40829/42840 [01:46<00:10, 185.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40874/42840 [01:46<00:08, 222.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 40946/42840 [01:47<00:06, 280.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41010/42840 [01:47<00:05, 334.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41089/42840 [01:47<00:04, 396.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41167/42840 [01:47<00:03, 460.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41231/42840 [01:47<00:03, 494.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▋| 41294/42840 [01:47<00:03, 513.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41355/42840 [01:47<00:03, 452.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41409/42840 [01:47<00:03, 412.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41457/42840 [01:48<00:03, 412.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41503/42840 [01:48<00:04, 300.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41565/42840 [01:48<00:03, 355.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41610/42840 [01:48<00:03, 364.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41667/42840 [01:48<00:02, 408.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41715/42840 [01:49<00:05, 188.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41831/42840 [01:49<00:04, 251.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41904/42840 [01:49<00:03, 309.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42013/42840 [01:49<00:02, 392.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42087/42840 [01:49<00:01, 432.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42156/42840 [01:49<00:01, 432.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 42222/42840 [01:49<00:01, 463.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 42282/42840 [01:50<00:01, 496.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42342/42840 [01:50<00:01, 458.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42405/42840 [01:50<00:00, 491.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42460/42840 [01:50<00:00, 470.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 42840/42840 [01:50<00:00, 387.34it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1708 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 4/1708 [00:00<00:53, 32.06it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42837 27383\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  1%|          | 10/1708 [00:00<00:49, 34.55it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 17/1708 [00:00<00:46, 36.48it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 28/1708 [00:00<00:39, 42.94it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 41/1708 [00:00<00:33, 50.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 50/1708 [00:00<00:29, 55.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 62/1708 [00:00<00:25, 63.91it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 78/1708 [00:01<00:21, 76.01it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 88/1708 [00:01<00:24, 65.31it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 96/1708 [00:01<00:27, 59.17it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 109/1708 [00:01<00:22, 70.71it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 120/1708 [00:01<00:20, 78.55it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 133/1708 [00:01<00:17, 88.05it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 144/1708 [00:01<00:19, 78.24it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 153/1708 [00:02<00:21, 73.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 175/1708 [00:02<00:16, 90.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 187/1708 [00:02<00:17, 85.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 198/1708 [00:02<00:17, 84.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 208/1708 [00:02<00:24, 61.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 217/1708 [00:02<00:25, 59.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 226/1708 [00:03<00:22, 66.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 241/1708 [00:03<00:18, 78.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 251/1708 [00:03<00:19, 74.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 261/1708 [00:03<00:18, 80.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 274/1708 [00:03<00:16, 89.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 284/1708 [00:03<00:21, 67.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 293/1708 [00:03<00:24, 57.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 301/1708 [00:04<00:30, 46.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 307/1708 [00:04<00:28, 49.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 313/1708 [00:04<00:28, 49.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 330/1708 [00:04<00:22, 61.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 339/1708 [00:04<00:21, 64.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 355/1708 [00:04<00:17, 77.86it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=6054 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 22%|██▏       | 368/1708 [00:04<00:16, 83.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 383/1708 [00:05<00:14, 93.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 395/1708 [00:05<00:13, 96.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 406/1708 [00:05<00:19, 66.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 415/1708 [00:05<00:21, 60.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 423/1708 [00:05<00:29, 43.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 441/1708 [00:06<00:22, 55.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 451/1708 [00:06<00:19, 63.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 461/1708 [00:06<00:19, 64.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 481/1708 [00:06<00:16, 73.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 491/1708 [00:06<00:17, 70.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 501/1708 [00:06<00:16, 72.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 510/1708 [00:06<00:16, 74.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 519/1708 [00:07<00:21, 54.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 526/1708 [00:07<00:26, 45.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 536/1708 [00:07<00:23, 50.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 544/1708 [00:07<00:20, 56.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 551/1708 [00:07<00:23, 49.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 557/1708 [00:07<00:25, 44.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 563/1708 [00:08<00:26, 43.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 568/1708 [00:08<00:41, 27.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 579/1708 [00:08<00:32, 35.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 585/1708 [00:08<00:32, 34.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 592/1708 [00:08<00:31, 35.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 604/1708 [00:09<00:25, 43.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 617/1708 [00:09<00:21, 50.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 627/1708 [00:09<00:18, 59.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 643/1708 [00:09<00:17, 60.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 653/1708 [00:09<00:16, 65.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 661/1708 [00:09<00:15, 68.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 669/1708 [00:10<00:20, 50.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 676/1708 [00:10<00:19, 53.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 683/1708 [00:10<00:26, 39.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 694/1708 [00:10<00:21, 46.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 703/1708 [00:10<00:19, 51.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 719/1708 [00:10<00:15, 62.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 732/1708 [00:10<00:15, 64.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 740/1708 [00:11<00:19, 49.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 747/1708 [00:11<00:18, 53.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 758/1708 [00:11<00:15, 62.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 770/1708 [00:11<00:12, 73.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 779/1708 [00:11<00:22, 41.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 797/1708 [00:12<00:18, 50.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 807/1708 [00:12<00:15, 57.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 823/1708 [00:12<00:12, 70.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 839/1708 [00:12<00:10, 84.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 851/1708 [00:12<00:10, 78.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 862/1708 [00:12<00:09, 85.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 873/1708 [00:13<00:16, 52.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 882/1708 [00:13<00:13, 59.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 891/1708 [00:13<00:14, 57.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 899/1708 [00:13<00:17, 45.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 907/1708 [00:13<00:15, 51.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 926/1708 [00:13<00:11, 66.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 937/1708 [00:14<00:12, 63.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 946/1708 [00:14<00:11, 63.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 961/1708 [00:14<00:10, 72.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 970/1708 [00:14<00:11, 66.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 978/1708 [00:14<00:11, 63.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 998/1708 [00:14<00:09, 75.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 1013/1708 [00:14<00:08, 84.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1026/1708 [00:15<00:07, 93.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1037/1708 [00:15<00:07, 85.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 1047/1708 [00:15<00:12, 52.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1055/1708 [00:15<00:13, 47.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1066/1708 [00:15<00:11, 54.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1074/1708 [00:16<00:11, 57.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1091/1708 [00:16<00:08, 71.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1101/1708 [00:16<00:09, 63.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1112/1708 [00:16<00:09, 64.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1123/1708 [00:16<00:08, 72.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 1132/1708 [00:16<00:08, 67.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1140/1708 [00:16<00:09, 57.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1155/1708 [00:17<00:07, 70.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1164/1708 [00:17<00:07, 73.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 1173/1708 [00:17<00:08, 63.27it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=22653 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 69%|██████▉   | 1181/1708 [00:17<00:09, 54.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 1189/1708 [00:17<00:08, 59.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1202/1708 [00:17<00:07, 66.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1210/1708 [00:18<00:10, 46.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1227/1708 [00:18<00:09, 49.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1238/1708 [00:18<00:07, 59.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1246/1708 [00:18<00:07, 59.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1265/1708 [00:18<00:06, 72.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 1276/1708 [00:18<00:05, 77.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 1286/1708 [00:19<00:06, 64.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1294/1708 [00:19<00:08, 48.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1301/1708 [00:19<00:08, 47.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 1311/1708 [00:19<00:07, 55.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1325/1708 [00:19<00:05, 64.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1338/1708 [00:19<00:04, 75.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 1350/1708 [00:19<00:04, 80.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 1363/1708 [00:20<00:03, 90.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1375/1708 [00:20<00:03, 91.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 1390/1708 [00:20<00:03, 101.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1402/1708 [00:20<00:04, 76.00it/s] \u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1412/1708 [00:20<00:05, 54.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1422/1708 [00:20<00:04, 63.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1431/1708 [00:21<00:04, 66.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 1444/1708 [00:21<00:03, 72.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 1453/1708 [00:21<00:03, 64.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1463/1708 [00:21<00:03, 71.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1478/1708 [00:21<00:02, 78.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1490/1708 [00:21<00:02, 81.25it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=29825 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 88%|████████▊ | 1504/1708 [00:21<00:02, 92.35it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "user=30364 has no recommend results...\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            " 89%|████████▊ | 1515/1708 [00:22<00:02, 68.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1525/1708 [00:22<00:02, 75.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 1534/1708 [00:22<00:02, 78.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 1543/1708 [00:22<00:02, 81.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 1552/1708 [00:22<00:02, 70.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1565/1708 [00:22<00:01, 80.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1574/1708 [00:22<00:01, 74.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1583/1708 [00:23<00:01, 69.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 1601/1708 [00:23<00:01, 80.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 1624/1708 [00:23<00:00, 100.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 1638/1708 [00:23<00:00, 81.99it/s] \u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 1660/1708 [00:23<00:00, 92.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 1672/1708 [00:23<00:00, 84.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 1683/1708 [00:24<00:00, 65.32it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1708/1708 [00:24<00:00, 70.41it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "1927 96350 96197\n",
            "8462 423100 423100\n",
            "519297\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xDPzucrO0ptL",
        "colab_type": "text"
      },
      "source": [
        "## User-CF"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "L8zBlDzGOBng",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# user-cf\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "\n",
        "recom_item = []\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                          names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                          names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    user_sim_list, user_item_dict = get_sim_user(all_click, 'user_id', 'item_id', item_iif=True)  # TODO\n",
        "    print(len(user_sim_list), len(user_item_dict))\n",
        "\n",
        "    for infer_u, q_time in tqdm(zip(click_q_time['user_id'],click_q_time['time'])):\n",
        "        rank_item = user_recommend(user_sim_list, user_item_dict, infer_u, recommend_num, 100, q_time)\n",
        "        if len(rank_item) == 0:\n",
        "          print('infer_u={} not hit'.format(infer_u))\n",
        "        for j in rank_item:\n",
        "            recom_item.append([infer_u, j[0], j[1], c])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click]) \n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_usercf_origin_v5.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_usercf_v5.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l6a1-5ri5zLO",
        "colab_type": "text"
      },
      "source": [
        "## item2vec"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xG30UFA0BGg8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_user_item_times_dict(df, user_col='user_id', item_col='item_id', time_col='time'):\n",
        "    user_item_ = df.sort_values(by=[user_col, time_col])\n",
        "    user_item_ = user_item_.groupby(user_col).apply(lambda group: make_item_time_tuple(group, user_col, item_col, time_col)).reset_index().rename(columns={0: 'item_id_time_list'})\n",
        "    user_item_time_dict = dict(zip(user_item_[user_col], user_item_['item_id_time_list']))\n",
        "    return user_item_time_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1cZbCi0zhlxX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_top_similar_fast(model, indexer, item_list, k=50):\n",
        "    recommendation_items = dict()\n",
        "    for item in tqdm(item_list):\n",
        "      sim_list = model.most_similar([item], topn=k+1, indexer=indexer)\n",
        "      sim_list = sim_list[1: ] # not self\n",
        "      recommendation_items[item] = sim_list\n",
        "\n",
        "     # transform format \n",
        "    item_sim_dict = {}\n",
        "    for item, sim_item_list in recommendation_items.items():\n",
        "      item_sim_dict.setdefault(int(item), {})\n",
        "      for sim_item, sim_value in sim_item_list:\n",
        "        item_sim_dict[int(item)][int(sim_item)] = sim_value\n",
        "    return item_sim_dict"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ycU4oIy55zhf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "model.most_similar('49308', indexer=indexer)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ESMY8Y1v50P7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import time\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "    tr = whole_click.copy()\n",
        "    tr = tr.sort_values(by=['user_id', 'time'])\n",
        "    tr['item_id']  = tr['item_id'].astype(str)\n",
        "    items_all = tr['item_id'].unique()\n",
        "    tr = tr.groupby('user_id')['item_id'].apply(lambda x:list(x)).reset_index()\n",
        "    seq_list = tr['item_id'].values\n",
        "    print(seq_list.shape)\n",
        "\n",
        "    begin_time = time.time()\n",
        "    model = Word2Vec(seq_list, size=128, window=10, min_count=0, workers=40, sg=1, negative=10)\n",
        "    indexer = AnnoyIndexer(model, 200) # build index \n",
        "    end_time = time.time()\n",
        "    run_time = end_time-begin_time\n",
        "    print ('该循环程序运行时间：',round(run_time,2)) #该循环程序运行时间： 1.4201874732\n",
        "\n",
        "\n",
        "    #训练完模型后，我们需要计算用户点击过的物品相似度，一般而言，物品相似度是根据用户点击过的物品序列，计算embedding，从而计算相似度\n",
        "    item_sim_dict = get_top_similar_fast(model, indexer, items_all, k=200)\n",
        "\n",
        "    # recommend\n",
        "    user_item_times_dict = get_user_item_times_dict(whole_click)\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_test['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_dict, user_item_times_dict, i, 500, 50)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1]])\n",
        "      \n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click]) \n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_item2vec_origin_v1.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_item2vec_v1.csv', index=False, header=None)\n",
        "    "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oEzsWtdPowQL",
        "colab_type": "text"
      },
      "source": [
        "## Co-Occurrance"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XPndLL4Doxxh",
        "colab_type": "code",
        "outputId": "93946963-9ac3-478b-8379-46b67c584200",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 425
        }
      },
      "source": [
        "# co-occurrance\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    # user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, user_item_dict = co_occurrance_sim(all_click, 'user_id', 'item_id') \n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_test['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 50)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1]])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_co_occurrance_origin_v3.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_co_occurrance_v3.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=underexpose_test\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18505/18505 [00:01<00:00, 14785.37it/s]\n",
            "  8%|▊         | 127/1663 [00:00<00:01, 1261.07it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "40765 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            " 84%|████████▍ | 1400/1663 [00:00<00:00, 2092.83it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "item=84247 not in item-item sim results\n",
            "item=85662 not in item-item sim results\n",
            "item=4720 not in item-item sim results\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1663/1663 [00:00<00:00, 1813.57it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18672/18672 [00:01<00:00, 11773.05it/s]\n",
            "  7%|▋         | 126/1726 [00:00<00:01, 1253.58it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41399 18672\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1726/1726 [00:00<00:00, 1812.98it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "item=152 not in item-item sim results\n",
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18398/18398 [00:01<00:00, 13735.76it/s]\n",
            "  7%|▋         | 117/1690 [00:00<00:01, 1155.59it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41023 18398\n",
            "item=46643 not in item-item sim results\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1690/1690 [00:00<00:00, 1768.39it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 18821/18821 [00:01<00:00, 13502.89it/s]\n",
            "  5%|▌         | 84/1675 [00:00<00:01, 839.69it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42810 18821\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            " 37%|███▋      | 626/1675 [00:00<00:00, 1193.25it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "item=116254 not in item-item sim results\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            " 81%|████████  | 1359/1675 [00:00<00:00, 1805.16it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "item=76322 not in item-item sim results\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1675/1675 [00:01<00:00, 1556.93it/s]\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "id-nJimBmFxE",
        "colab_type": "text"
      },
      "source": [
        "## Bi-Graph"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "E1TnlXXFmGwB",
        "colab_type": "code",
        "outputId": "8d1a628e-4bb7-4ade-8e37-608a05dfbfd0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "# bi-graph\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "\n",
        "recom_item = []\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    item_sim_list, user_item = get_bi_sim_item(all_click, 'user_id', 'item_id')\n",
        "    print(len(item_sim_list), len(user_item))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_test['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item, i, recommend_num, 100)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1], c])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_bi_graph_origin_v5.csv', index=False, header=None)\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_bi_graph_v5.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=underexpose_test\n",
            "phase: 0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/18505 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 18505/18505 [00:00<00:00, 144830.89it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/40776 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 158/40776 [00:00<00:25, 1579.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 262/40776 [00:00<00:29, 1366.93it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 381/40776 [00:00<00:30, 1306.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 546/40776 [00:00<00:28, 1388.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 652/40776 [00:00<00:32, 1252.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 812/40776 [00:00<00:29, 1336.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 933/40776 [00:00<00:33, 1172.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1080/40776 [00:00<00:31, 1246.91it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1203/40776 [00:00<00:32, 1231.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1343/40776 [00:01<00:30, 1273.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 1470/40776 [00:01<00:33, 1185.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1616/40776 [00:01<00:31, 1255.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1744/40776 [00:01<00:35, 1112.93it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1875/40776 [00:01<00:33, 1164.27it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1997/40776 [00:01<00:32, 1180.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2118/40776 [00:01<00:36, 1063.00it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2265/40776 [00:01<00:33, 1147.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2418/40776 [00:01<00:31, 1207.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2543/40776 [00:02<00:31, 1197.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2666/40776 [00:02<00:32, 1163.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2785/40776 [00:02<00:32, 1154.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2905/40776 [00:02<00:32, 1157.63it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3048/40776 [00:02<00:30, 1226.09it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3173/40776 [00:02<00:31, 1204.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3297/40776 [00:02<00:30, 1214.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3432/40776 [00:02<00:29, 1251.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 3559/40776 [00:02<00:30, 1237.44it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3719/40776 [00:03<00:27, 1326.91it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3856/40776 [00:03<00:27, 1339.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 3992/40776 [00:03<00:27, 1340.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4128/40776 [00:03<00:28, 1302.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4281/40776 [00:03<00:26, 1363.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4425/40776 [00:03<00:26, 1372.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4564/40776 [00:03<00:26, 1351.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4700/40776 [00:03<00:27, 1305.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4832/40776 [00:03<00:27, 1285.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4962/40776 [00:03<00:27, 1286.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5092/40776 [00:04<00:27, 1280.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5221/40776 [00:04<00:28, 1259.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5364/40776 [00:04<00:27, 1306.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5496/40776 [00:04<00:28, 1218.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5649/40776 [00:04<00:27, 1297.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5820/40776 [00:04<00:24, 1398.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 5974/40776 [00:04<00:24, 1437.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6121/40776 [00:04<00:23, 1445.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6285/40776 [00:04<00:23, 1496.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6437/40776 [00:04<00:23, 1463.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6585/40776 [00:05<00:23, 1446.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 6757/40776 [00:05<00:22, 1518.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 6911/40776 [00:05<00:22, 1519.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7065/40776 [00:05<00:22, 1505.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7217/40776 [00:05<00:25, 1305.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7353/40776 [00:05<00:26, 1281.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7486/40776 [00:05<00:29, 1121.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7626/40776 [00:05<00:27, 1191.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7772/40776 [00:06<00:26, 1258.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7903/40776 [00:06<00:27, 1193.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8039/40776 [00:06<00:26, 1239.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8185/40776 [00:06<00:25, 1296.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8336/40776 [00:06<00:23, 1353.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8511/40776 [00:06<00:22, 1450.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8660/40776 [00:06<00:23, 1394.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 8803/40776 [00:06<00:24, 1290.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 8936/40776 [00:06<00:24, 1279.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9087/40776 [00:07<00:23, 1340.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9246/40776 [00:07<00:22, 1394.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9391/40776 [00:07<00:22, 1408.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9545/40776 [00:07<00:21, 1445.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9696/40776 [00:07<00:21, 1455.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9843/40776 [00:07<00:21, 1442.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9989/40776 [00:07<00:21, 1442.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10134/40776 [00:07<00:22, 1388.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10274/40776 [00:07<00:22, 1376.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10413/40776 [00:07<00:22, 1335.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10571/40776 [00:08<00:21, 1398.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 10726/40776 [00:08<00:20, 1437.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 10871/40776 [00:08<00:20, 1435.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11032/40776 [00:08<00:20, 1482.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11182/40776 [00:08<00:20, 1411.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11325/40776 [00:08<00:21, 1399.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11484/40776 [00:08<00:20, 1443.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 11648/40776 [00:08<00:19, 1496.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 11799/40776 [00:08<00:19, 1452.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 11946/40776 [00:08<00:19, 1454.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12110/40776 [00:09<00:19, 1501.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12275/40776 [00:09<00:18, 1541.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12431/40776 [00:09<00:19, 1490.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12582/40776 [00:09<00:19, 1423.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12726/40776 [00:09<00:19, 1412.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 12872/40776 [00:09<00:19, 1424.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13036/40776 [00:09<00:18, 1482.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13195/40776 [00:09<00:18, 1511.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13348/40776 [00:09<00:18, 1451.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13515/40776 [00:10<00:18, 1509.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 13683/40776 [00:10<00:17, 1553.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 13846/40776 [00:10<00:17, 1575.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14005/40776 [00:10<00:17, 1504.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14157/40776 [00:10<00:19, 1388.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 14299/40776 [00:10<00:19, 1347.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 14467/40776 [00:10<00:18, 1428.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14621/40776 [00:10<00:17, 1458.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14770/40776 [00:10<00:18, 1440.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 14926/40776 [00:11<00:17, 1474.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15088/40776 [00:11<00:16, 1514.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15241/40776 [00:11<00:17, 1478.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15390/40776 [00:11<00:17, 1467.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15538/40776 [00:11<00:17, 1422.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 15700/40776 [00:11<00:16, 1475.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 15849/40776 [00:11<00:17, 1437.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16028/40776 [00:11<00:16, 1523.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 16183/40776 [00:11<00:16, 1469.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 16345/40776 [00:11<00:16, 1464.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 16493/40776 [00:12<00:17, 1399.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 16635/40776 [00:12<00:17, 1401.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 16777/40776 [00:12<00:17, 1372.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 16918/40776 [00:12<00:17, 1382.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17068/40776 [00:12<00:16, 1414.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17227/40776 [00:12<00:16, 1462.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17389/40776 [00:12<00:15, 1505.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17544/40776 [00:12<00:15, 1517.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17697/40776 [00:12<00:15, 1473.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 17846/40776 [00:13<00:15, 1443.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 17992/40776 [00:13<00:15, 1448.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18138/40776 [00:13<00:16, 1346.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 18281/40776 [00:13<00:16, 1369.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 18422/40776 [00:13<00:16, 1381.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 18575/40776 [00:13<00:15, 1414.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 18718/40776 [00:13<00:16, 1356.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 18879/40776 [00:13<00:15, 1422.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19030/40776 [00:13<00:15, 1445.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19176/40776 [00:13<00:16, 1341.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19341/40776 [00:14<00:15, 1420.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19500/40776 [00:14<00:14, 1467.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19650/40776 [00:14<00:14, 1433.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 19802/40776 [00:14<00:14, 1458.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 19967/40776 [00:14<00:13, 1507.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20121/40776 [00:14<00:13, 1513.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 20274/40776 [00:14<00:13, 1501.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 20426/40776 [00:14<00:13, 1506.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 20578/40776 [00:14<00:13, 1507.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 20744/40776 [00:14<00:12, 1549.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 20911/40776 [00:15<00:12, 1582.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21070/40776 [00:15<00:13, 1489.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21221/40776 [00:15<00:13, 1466.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21374/40776 [00:15<00:13, 1482.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21524/40776 [00:15<00:13, 1438.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21669/40776 [00:15<00:13, 1418.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21815/40776 [00:15<00:13, 1422.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 21976/40776 [00:15<00:12, 1473.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22125/40776 [00:15<00:12, 1469.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 22284/40776 [00:16<00:12, 1503.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 22443/40776 [00:16<00:11, 1527.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 22597/40776 [00:16<00:12, 1497.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 22748/40776 [00:16<00:12, 1477.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 22897/40776 [00:16<00:12, 1467.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23045/40776 [00:16<00:12, 1443.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23208/40776 [00:16<00:11, 1492.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23358/40776 [00:16<00:12, 1427.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23511/40776 [00:16<00:11, 1454.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23658/40776 [00:16<00:11, 1436.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23825/40776 [00:17<00:11, 1497.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 23979/40776 [00:17<00:11, 1509.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 24131/40776 [00:17<00:11, 1507.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 24283/40776 [00:17<00:11, 1425.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 24427/40776 [00:17<00:11, 1415.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 24590/40776 [00:17<00:11, 1468.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 24739/40776 [00:17<00:10, 1462.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 24887/40776 [00:17<00:11, 1438.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 25036/40776 [00:17<00:10, 1446.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25182/40776 [00:18<00:11, 1398.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25323/40776 [00:18<00:11, 1398.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25464/40776 [00:18<00:10, 1392.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 25604/40776 [00:18<00:11, 1370.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 25744/40776 [00:18<00:10, 1375.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 25882/40776 [00:18<00:10, 1367.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26032/40776 [00:18<00:10, 1400.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26183/40776 [00:18<00:10, 1431.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 26337/40776 [00:18<00:09, 1453.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 26483/40776 [00:18<00:10, 1409.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 26634/40776 [00:19<00:09, 1427.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 26799/40776 [00:19<00:09, 1486.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 26959/40776 [00:19<00:09, 1516.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27120/40776 [00:19<00:08, 1542.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27275/40776 [00:19<00:08, 1513.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27437/40776 [00:19<00:08, 1543.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 27592/40776 [00:19<00:08, 1482.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 27742/40776 [00:19<00:08, 1474.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 27904/40776 [00:19<00:08, 1506.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28056/40776 [00:20<00:08, 1498.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28207/40776 [00:20<00:08, 1474.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 28355/40776 [00:20<00:08, 1467.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 28516/40776 [00:20<00:08, 1506.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 28668/40776 [00:20<00:08, 1434.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 28825/40776 [00:20<00:08, 1472.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 28974/40776 [00:20<00:08, 1453.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████▏  | 29127/40776 [00:20<00:07, 1475.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29281/40776 [00:20<00:07, 1492.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29431/40776 [00:20<00:08, 1397.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 29573/40776 [00:21<00:08, 1312.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 29707/40776 [00:21<00:08, 1311.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 29850/40776 [00:21<00:08, 1343.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 29995/40776 [00:21<00:07, 1372.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 30154/40776 [00:21<00:07, 1431.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 30314/40776 [00:21<00:07, 1474.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 30482/40776 [00:21<00:06, 1528.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 30637/40776 [00:21<00:06, 1518.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 30790/40776 [00:21<00:06, 1522.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 30958/40776 [00:21<00:06, 1562.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 31115/40776 [00:22<00:06, 1536.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31270/40776 [00:22<00:06, 1362.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31428/40776 [00:22<00:06, 1418.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31574/40776 [00:22<00:07, 1293.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 31708/40776 [00:22<00:07, 1244.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 31857/40776 [00:22<00:06, 1307.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 32023/40776 [00:22<00:06, 1395.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32167/40776 [00:22<00:06, 1359.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32306/40776 [00:23<00:06, 1297.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 32441/40776 [00:23<00:06, 1311.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 32575/40776 [00:23<00:06, 1210.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 32699/40776 [00:23<00:06, 1217.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 32826/40776 [00:23<00:06, 1232.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 32952/40776 [00:23<00:06, 1240.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 33085/40776 [00:23<00:06, 1265.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33242/40776 [00:23<00:05, 1341.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33378/40776 [00:23<00:05, 1339.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33514/40776 [00:23<00:05, 1292.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 33648/40776 [00:24<00:05, 1271.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 33802/40776 [00:24<00:05, 1340.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 33938/40776 [00:24<00:05, 1327.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▎ | 34097/40776 [00:24<00:04, 1394.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34241/40776 [00:24<00:04, 1407.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34399/40776 [00:24<00:04, 1453.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 34548/40776 [00:24<00:04, 1463.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 34696/40776 [00:24<00:04, 1465.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 34844/40776 [00:24<00:04, 1445.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 34990/40776 [00:24<00:04, 1444.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35135/40776 [00:25<00:04, 1398.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35276/40776 [00:25<00:03, 1377.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35426/40776 [00:25<00:03, 1410.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35571/40776 [00:25<00:03, 1415.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 35713/40776 [00:25<00:03, 1412.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 35858/40776 [00:25<00:03, 1422.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36001/40776 [00:25<00:03, 1417.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 36143/40776 [00:25<00:03, 1392.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36283/40776 [00:25<00:03, 1388.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36433/40776 [00:26<00:03, 1420.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 36576/40776 [00:26<00:03, 1349.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 36712/40776 [00:26<00:03, 1336.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 36847/40776 [00:26<00:03, 1277.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 36976/40776 [00:26<00:03, 1240.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37102/40776 [00:26<00:02, 1237.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████▏| 37227/40776 [00:26<00:02, 1210.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37349/40776 [00:26<00:02, 1198.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37470/40776 [00:26<00:02, 1161.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37603/40776 [00:27<00:02, 1205.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 37725/40776 [00:27<00:02, 1197.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 37846/40776 [00:27<00:02, 1166.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 37968/40776 [00:27<00:02, 1180.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38092/40776 [00:27<00:02, 1196.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 38225/40776 [00:27<00:02, 1227.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38374/40776 [00:27<00:01, 1293.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38505/40776 [00:27<00:01, 1284.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 38635/40776 [00:27<00:01, 1249.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 38761/40776 [00:27<00:01, 1209.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 38883/40776 [00:28<00:01, 1182.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39002/40776 [00:28<00:01, 1173.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39120/40776 [00:28<00:01, 1175.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39238/40776 [00:28<00:01, 1149.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39355/40776 [00:28<00:01, 1154.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39471/40776 [00:28<00:01, 1118.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39591/40776 [00:28<00:01, 1131.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39705/40776 [00:28<00:00, 1132.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 39823/40776 [00:28<00:00, 1143.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 39938/40776 [00:29<00:00, 1083.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40048/40776 [00:29<00:00, 1054.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40155/40776 [00:29<00:00, 1050.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 40261/40776 [00:29<00:00, 957.24it/s] \u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40359/40776 [00:29<00:00, 957.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40457/40776 [00:29<00:00, 929.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40566/40776 [00:29<00:00, 971.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 40665/40776 [00:29<00:00, 947.79it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 40776/40776 [00:29<00:00, 1363.06it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1663 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 6/1663 [00:00<00:29, 56.36it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "40776 18505\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  1%|          | 9/1663 [00:00<00:38, 43.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 12/1663 [00:00<00:50, 32.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 15/1663 [00:00<00:53, 30.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 19/1663 [00:00<01:06, 24.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 24/1663 [00:00<00:59, 27.43it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 28/1663 [00:01<01:02, 26.06it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 33/1663 [00:01<00:58, 27.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 36/1663 [00:01<01:00, 26.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 39/1663 [00:01<01:31, 17.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 42/1663 [00:01<01:35, 16.93it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 44/1663 [00:02<02:09, 12.49it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 50/1663 [00:02<01:40, 16.08it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 53/1663 [00:02<01:39, 16.12it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 56/1663 [00:02<01:28, 18.09it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 61/1663 [00:02<01:14, 21.60it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 67/1663 [00:02<01:04, 24.64it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 72/1663 [00:02<00:58, 27.21it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 76/1663 [00:03<01:07, 23.53it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 79/1663 [00:03<01:04, 24.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 82/1663 [00:03<01:21, 19.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 85/1663 [00:03<01:24, 18.74it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 91/1663 [00:03<01:06, 23.51it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 95/1663 [00:03<00:59, 26.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 99/1663 [00:04<01:06, 23.51it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 105/1663 [00:04<01:02, 24.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 110/1663 [00:04<00:55, 27.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 115/1663 [00:04<00:48, 31.86it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 120/1663 [00:04<00:45, 34.07it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 124/1663 [00:04<00:45, 34.05it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 128/1663 [00:04<00:51, 29.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 135/1663 [00:05<00:42, 35.60it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 141/1663 [00:05<00:52, 29.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 145/1663 [00:05<00:53, 28.33it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 149/1663 [00:05<00:50, 29.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 153/1663 [00:05<00:49, 30.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 160/1663 [00:05<00:41, 36.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 165/1663 [00:05<00:44, 33.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 169/1663 [00:06<00:52, 28.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 175/1663 [00:06<00:46, 32.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 180/1663 [00:06<00:41, 36.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 185/1663 [00:06<00:53, 27.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 189/1663 [00:06<00:49, 29.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 196/1663 [00:06<00:41, 35.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 202/1663 [00:07<00:38, 38.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 207/1663 [00:07<00:40, 35.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 212/1663 [00:07<00:39, 36.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 216/1663 [00:07<00:41, 35.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 222/1663 [00:07<00:36, 39.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 228/1663 [00:07<00:35, 40.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 234/1663 [00:07<00:34, 41.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 241/1663 [00:07<00:30, 46.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 247/1663 [00:08<00:32, 43.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 252/1663 [00:08<00:52, 26.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 260/1663 [00:08<00:42, 32.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 265/1663 [00:08<00:42, 32.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 271/1663 [00:08<00:36, 37.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 278/1663 [00:08<00:32, 43.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 285/1663 [00:09<00:29, 46.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 291/1663 [00:09<00:31, 43.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 296/1663 [00:09<00:32, 41.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 301/1663 [00:09<00:36, 37.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 306/1663 [00:09<00:35, 38.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 311/1663 [00:09<00:35, 38.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 316/1663 [00:09<00:37, 35.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 320/1663 [00:10<00:39, 33.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 326/1663 [00:10<00:35, 37.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 330/1663 [00:10<00:52, 25.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 334/1663 [00:10<00:58, 22.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 337/1663 [00:10<00:57, 23.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 344/1663 [00:10<00:46, 28.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 351/1663 [00:11<00:37, 34.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 356/1663 [00:11<00:41, 31.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 363/1663 [00:11<00:34, 37.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 371/1663 [00:11<00:29, 43.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 378/1663 [00:11<00:27, 47.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 384/1663 [00:11<00:45, 27.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 389/1663 [00:12<00:40, 31.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 394/1663 [00:12<00:42, 29.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 400/1663 [00:12<00:37, 33.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 406/1663 [00:12<00:35, 35.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 412/1663 [00:12<00:32, 38.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 420/1663 [00:12<00:27, 45.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 426/1663 [00:12<00:31, 38.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 431/1663 [00:13<00:35, 34.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 437/1663 [00:13<00:36, 33.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 447/1663 [00:13<00:30, 40.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 452/1663 [00:13<00:31, 38.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 457/1663 [00:13<00:29, 40.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 462/1663 [00:13<00:33, 36.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 466/1663 [00:14<00:33, 36.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 470/1663 [00:14<00:37, 31.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 475/1663 [00:14<00:34, 34.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 481/1663 [00:14<00:30, 38.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 486/1663 [00:14<00:28, 41.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 491/1663 [00:14<00:27, 43.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 496/1663 [00:14<00:26, 44.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 506/1663 [00:14<00:24, 46.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 512/1663 [00:15<00:23, 48.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 518/1663 [00:15<00:22, 51.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 524/1663 [00:15<00:22, 49.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 530/1663 [00:15<00:41, 27.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 536/1663 [00:15<00:35, 32.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 545/1663 [00:15<00:28, 39.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 551/1663 [00:16<00:28, 38.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 557/1663 [00:16<00:26, 42.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 563/1663 [00:16<00:24, 45.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 574/1663 [00:16<00:20, 54.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 584/1663 [00:16<00:18, 58.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 591/1663 [00:16<00:18, 59.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 598/1663 [00:16<00:22, 47.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 609/1663 [00:16<00:18, 56.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 618/1663 [00:17<00:16, 61.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 626/1663 [00:17<00:21, 48.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 633/1663 [00:17<00:25, 39.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 639/1663 [00:17<00:24, 41.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 646/1663 [00:17<00:21, 47.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 652/1663 [00:17<00:20, 49.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 660/1663 [00:18<00:18, 54.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 667/1663 [00:18<00:19, 51.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 673/1663 [00:18<00:18, 52.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 679/1663 [00:18<00:18, 53.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 687/1663 [00:18<00:17, 57.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 698/1663 [00:18<00:14, 65.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 706/1663 [00:18<00:15, 63.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 713/1663 [00:18<00:16, 56.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 720/1663 [00:19<00:17, 54.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 726/1663 [00:19<00:19, 48.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 736/1663 [00:19<00:17, 54.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 742/1663 [00:19<00:17, 52.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 748/1663 [00:19<00:18, 49.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 754/1663 [00:19<00:19, 46.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 760/1663 [00:19<00:19, 45.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 765/1663 [00:20<00:23, 37.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 776/1663 [00:20<00:19, 46.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 782/1663 [00:20<00:18, 48.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 790/1663 [00:20<00:16, 53.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 797/1663 [00:20<00:15, 56.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 804/1663 [00:20<00:17, 48.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 815/1663 [00:20<00:15, 55.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 826/1663 [00:20<00:13, 62.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 834/1663 [00:21<00:13, 61.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 842/1663 [00:21<00:12, 64.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 849/1663 [00:21<00:12, 65.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 856/1663 [00:21<00:14, 57.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 866/1663 [00:21<00:12, 64.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 875/1663 [00:21<00:11, 67.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 883/1663 [00:21<00:12, 62.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 890/1663 [00:21<00:12, 63.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 898/1663 [00:22<00:12, 63.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 912/1663 [00:22<00:09, 75.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 921/1663 [00:22<00:12, 57.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 929/1663 [00:22<00:12, 58.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 938/1663 [00:22<00:11, 63.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 948/1663 [00:22<00:10, 70.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 956/1663 [00:22<00:09, 72.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 964/1663 [00:23<00:12, 56.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 971/1663 [00:23<00:11, 58.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 978/1663 [00:23<00:12, 54.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 987/1663 [00:23<00:11, 60.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 996/1663 [00:23<00:10, 66.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1004/1663 [00:23<00:10, 62.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1011/1663 [00:23<00:11, 58.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1018/1663 [00:24<00:13, 47.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1024/1663 [00:24<00:13, 45.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1037/1663 [00:24<00:11, 56.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1047/1663 [00:24<00:09, 64.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1055/1663 [00:24<00:10, 58.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1062/1663 [00:24<00:09, 60.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1070/1663 [00:24<00:09, 64.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1082/1663 [00:24<00:07, 73.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1092/1663 [00:25<00:07, 79.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 1103/1663 [00:25<00:07, 79.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1112/1663 [00:25<00:07, 72.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1120/1663 [00:25<00:07, 71.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1128/1663 [00:25<00:08, 64.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1138/1663 [00:25<00:07, 72.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1146/1663 [00:25<00:07, 69.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 1158/1663 [00:25<00:07, 72.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1173/1663 [00:26<00:05, 84.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1184/1663 [00:26<00:05, 85.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1195/1663 [00:26<00:05, 83.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1205/1663 [00:26<00:05, 84.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1214/1663 [00:26<00:06, 72.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1227/1663 [00:26<00:05, 73.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1235/1663 [00:26<00:05, 72.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 1246/1663 [00:27<00:05, 77.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1261/1663 [00:27<00:04, 89.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 1271/1663 [00:27<00:07, 55.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 1284/1663 [00:27<00:05, 63.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1298/1663 [00:27<00:05, 71.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 1308/1663 [00:27<00:04, 76.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 1325/1663 [00:27<00:03, 91.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 1338/1663 [00:28<00:03, 96.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 1352/1663 [00:28<00:02, 105.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1369/1663 [00:28<00:02, 117.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1387/1663 [00:28<00:02, 131.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1402/1663 [00:28<00:01, 131.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 1418/1663 [00:28<00:01, 137.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1433/1663 [00:28<00:01, 139.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1448/1663 [00:28<00:01, 130.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 1462/1663 [00:28<00:01, 132.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1476/1663 [00:29<00:01, 122.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 1501/1663 [00:29<00:01, 143.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1525/1663 [00:29<00:00, 159.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 1556/1663 [00:29<00:00, 185.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 1587/1663 [00:29<00:00, 207.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 1624/1663 [00:29<00:00, 238.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1663/1663 [00:29<00:00, 55.99it/s] \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/18672 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 18672/18672 [00:00<00:00, 147225.00it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/41409 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 152/41409 [00:00<00:27, 1514.20it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 257/41409 [00:00<00:30, 1336.06it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 352/41409 [00:00<00:34, 1184.54it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 495/41409 [00:00<00:32, 1247.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 599/41409 [00:00<00:34, 1169.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 731/41409 [00:00<00:33, 1198.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 854/41409 [00:00<00:33, 1206.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 965/41409 [00:00<00:36, 1122.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1114/41409 [00:00<00:33, 1201.73it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1246/41409 [00:01<00:32, 1231.23it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1375/41409 [00:01<00:32, 1243.97it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 1499/41409 [00:01<00:32, 1216.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1621/41409 [00:01<00:32, 1211.11it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1742/41409 [00:01<00:36, 1095.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1871/41409 [00:01<00:34, 1146.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1993/41409 [00:01<00:33, 1165.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2116/41409 [00:01<00:33, 1181.84it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2236/41409 [00:01<00:34, 1126.31it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2374/41409 [00:01<00:32, 1190.64it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2495/41409 [00:02<00:33, 1148.72it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2612/41409 [00:02<00:34, 1134.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2727/41409 [00:02<00:36, 1064.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2859/41409 [00:02<00:34, 1129.32it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2979/41409 [00:02<00:33, 1143.63it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3095/41409 [00:02<00:34, 1106.15it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3240/41409 [00:02<00:32, 1188.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3378/41409 [00:02<00:30, 1235.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3515/41409 [00:02<00:29, 1272.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3645/41409 [00:03<00:29, 1266.62it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3804/41409 [00:03<00:27, 1347.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 3942/41409 [00:03<00:28, 1316.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4076/41409 [00:03<00:28, 1304.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4222/41409 [00:03<00:27, 1346.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4381/41409 [00:03<00:26, 1408.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4537/41409 [00:03<00:25, 1448.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4684/41409 [00:03<00:26, 1378.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4824/41409 [00:03<00:26, 1370.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4979/41409 [00:04<00:26, 1388.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5119/41409 [00:04<00:26, 1363.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5257/41409 [00:04<00:27, 1329.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5391/41409 [00:04<00:27, 1328.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5525/41409 [00:04<00:30, 1186.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5654/41409 [00:04<00:29, 1215.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5825/41409 [00:04<00:26, 1327.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 6000/41409 [00:04<00:24, 1431.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6149/41409 [00:04<00:25, 1405.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6316/41409 [00:04<00:23, 1473.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6471/41409 [00:05<00:24, 1448.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6619/41409 [00:05<00:24, 1407.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 6776/41409 [00:05<00:23, 1451.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 6927/41409 [00:05<00:23, 1464.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7075/41409 [00:05<00:23, 1465.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7223/41409 [00:05<00:23, 1451.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7369/41409 [00:05<00:25, 1327.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7506/41409 [00:05<00:25, 1338.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7642/41409 [00:05<00:26, 1286.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7773/41409 [00:06<00:26, 1251.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7900/41409 [00:06<00:26, 1251.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8027/41409 [00:06<00:27, 1213.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8150/41409 [00:06<00:28, 1166.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8295/41409 [00:06<00:26, 1238.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8435/41409 [00:06<00:25, 1282.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8593/41409 [00:06<00:24, 1357.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8751/41409 [00:06<00:23, 1416.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 8895/41409 [00:06<00:23, 1375.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9035/41409 [00:07<00:24, 1322.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9169/41409 [00:07<00:24, 1299.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9312/41409 [00:07<00:24, 1334.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9461/41409 [00:07<00:23, 1377.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9600/41409 [00:07<00:23, 1343.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 9744/41409 [00:07<00:23, 1370.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9896/41409 [00:07<00:22, 1408.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10038/41409 [00:07<00:23, 1326.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10185/41409 [00:07<00:22, 1357.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10323/41409 [00:07<00:24, 1280.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10453/41409 [00:08<00:25, 1222.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10591/41409 [00:08<00:24, 1265.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10720/41409 [00:08<00:24, 1231.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 10886/41409 [00:08<00:22, 1334.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11028/41409 [00:08<00:22, 1357.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11171/41409 [00:08<00:22, 1370.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11325/41409 [00:08<00:21, 1415.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11469/41409 [00:08<00:21, 1369.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11608/41409 [00:08<00:21, 1370.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11747/41409 [00:09<00:22, 1330.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 11918/41409 [00:09<00:20, 1425.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12074/41409 [00:09<00:20, 1457.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12231/41409 [00:09<00:19, 1487.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12385/41409 [00:09<00:19, 1501.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12537/41409 [00:09<00:19, 1501.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12695/41409 [00:09<00:19, 1487.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12845/41409 [00:09<00:19, 1481.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 12994/41409 [00:09<00:20, 1401.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13157/41409 [00:09<00:19, 1461.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13305/41409 [00:10<00:19, 1434.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13472/41409 [00:10<00:18, 1495.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13624/41409 [00:10<00:18, 1500.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13776/41409 [00:10<00:18, 1492.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 13931/41409 [00:10<00:18, 1508.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14097/41409 [00:10<00:17, 1544.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14253/41409 [00:10<00:17, 1522.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14406/41409 [00:10<00:17, 1519.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 14559/41409 [00:10<00:18, 1471.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14707/41409 [00:11<00:18, 1451.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14866/41409 [00:11<00:17, 1489.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 15031/41409 [00:11<00:17, 1533.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15186/41409 [00:11<00:17, 1518.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15339/41409 [00:11<00:18, 1395.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15494/41409 [00:11<00:18, 1427.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15649/41409 [00:11<00:17, 1458.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15797/41409 [00:11<00:18, 1421.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 15951/41409 [00:11<00:17, 1452.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16098/41409 [00:11<00:17, 1425.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16258/41409 [00:12<00:17, 1472.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 16407/41409 [00:12<00:17, 1394.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 16559/41409 [00:12<00:17, 1429.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 16704/41409 [00:12<00:17, 1411.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 16847/41409 [00:12<00:17, 1398.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17007/41409 [00:12<00:16, 1453.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 17169/41409 [00:12<00:16, 1497.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17326/41409 [00:12<00:15, 1516.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17479/41409 [00:12<00:16, 1432.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17634/41409 [00:13<00:16, 1465.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17791/41409 [00:13<00:15, 1494.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17942/41409 [00:13<00:15, 1466.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 18098/41409 [00:13<00:15, 1492.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18248/41409 [00:13<00:15, 1454.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18395/41409 [00:13<00:16, 1357.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 18533/41409 [00:13<00:17, 1313.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 18676/41409 [00:13<00:16, 1343.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 18812/41409 [00:13<00:17, 1322.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 18946/41409 [00:13<00:17, 1304.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19082/41409 [00:14<00:16, 1320.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 19245/41409 [00:14<00:15, 1399.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19387/41409 [00:14<00:16, 1360.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19525/41409 [00:14<00:17, 1276.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19665/41409 [00:14<00:16, 1311.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19808/41409 [00:14<00:16, 1343.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19946/41409 [00:14<00:15, 1353.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 20095/41409 [00:14<00:15, 1388.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20254/41409 [00:14<00:14, 1442.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20400/41409 [00:15<00:15, 1350.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 20554/41409 [00:15<00:14, 1398.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 20696/41409 [00:15<00:14, 1387.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 20850/41409 [00:15<00:14, 1429.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21017/41409 [00:15<00:13, 1479.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21173/41409 [00:15<00:13, 1502.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 21325/41409 [00:15<00:14, 1414.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21473/41409 [00:15<00:13, 1431.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21618/41409 [00:15<00:14, 1376.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21763/41409 [00:16<00:14, 1395.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21909/41409 [00:16<00:13, 1409.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22051/41409 [00:16<00:14, 1381.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 22207/41409 [00:16<00:13, 1428.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22367/41409 [00:16<00:12, 1475.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22516/41409 [00:16<00:12, 1472.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 22672/41409 [00:16<00:12, 1494.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 22823/41409 [00:16<00:12, 1496.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 22974/41409 [00:16<00:12, 1481.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23123/41409 [00:16<00:12, 1414.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23282/41409 [00:17<00:12, 1462.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23446/41409 [00:17<00:11, 1508.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23605/41409 [00:17<00:11, 1529.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23759/41409 [00:17<00:11, 1524.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23915/41409 [00:17<00:11, 1534.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24069/41409 [00:17<00:11, 1475.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 24230/41409 [00:17<00:11, 1509.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 24382/41409 [00:17<00:11, 1460.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 24554/41409 [00:17<00:11, 1528.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 24709/41409 [00:17<00:11, 1434.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 24855/41409 [00:18<00:11, 1405.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25001/41409 [00:18<00:11, 1419.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 25145/41409 [00:18<00:11, 1418.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 25288/41409 [00:18<00:11, 1413.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 25437/41409 [00:18<00:11, 1433.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25581/41409 [00:18<00:11, 1398.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25722/41409 [00:18<00:11, 1396.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25862/41409 [00:18<00:11, 1374.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26000/41409 [00:18<00:11, 1372.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26141/41409 [00:19<00:11, 1380.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26280/41409 [00:19<00:10, 1377.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26430/41409 [00:19<00:10, 1411.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26574/41409 [00:19<00:10, 1419.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 26731/41409 [00:19<00:10, 1460.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 26878/41409 [00:19<00:09, 1457.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 27035/41409 [00:19<00:09, 1486.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 27190/41409 [00:19<00:09, 1500.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 27352/41409 [00:19<00:09, 1532.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 27506/41409 [00:19<00:09, 1512.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27658/41409 [00:20<00:09, 1404.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27818/41409 [00:20<00:09, 1457.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 27966/41409 [00:20<00:09, 1443.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28112/41409 [00:20<00:10, 1274.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28265/41409 [00:20<00:09, 1340.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 28404/41409 [00:20<00:09, 1317.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28550/41409 [00:20<00:09, 1351.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28701/41409 [00:20<00:09, 1366.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 28840/41409 [00:20<00:09, 1355.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 28985/41409 [00:21<00:08, 1382.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 29131/41409 [00:21<00:08, 1403.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 29273/41409 [00:21<00:08, 1352.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 29416/41409 [00:21<00:08, 1373.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████▏  | 29555/41409 [00:21<00:08, 1359.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29703/41409 [00:21<00:08, 1391.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29843/41409 [00:21<00:08, 1302.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29978/41409 [00:21<00:08, 1309.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 30116/41409 [00:21<00:08, 1329.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 30264/41409 [00:21<00:08, 1370.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 30402/41409 [00:22<00:08, 1356.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 30567/41409 [00:22<00:07, 1429.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 30723/41409 [00:22<00:07, 1461.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 30885/41409 [00:22<00:07, 1503.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 31037/41409 [00:22<00:07, 1471.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 31191/41409 [00:22<00:06, 1490.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 31341/41409 [00:22<00:06, 1478.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 31502/41409 [00:22<00:06, 1513.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 31654/41409 [00:22<00:06, 1490.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31804/41409 [00:23<00:06, 1379.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31944/41409 [00:23<00:07, 1320.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32078/41409 [00:23<00:07, 1248.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 32206/41409 [00:23<00:07, 1172.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 32326/41409 [00:23<00:07, 1175.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 32479/41409 [00:23<00:07, 1262.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32627/41409 [00:23<00:06, 1319.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32762/41409 [00:23<00:06, 1294.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32894/41409 [00:23<00:06, 1300.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 33027/41409 [00:24<00:06, 1308.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 33171/41409 [00:24<00:06, 1343.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 33313/41409 [00:24<00:05, 1364.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 33456/41409 [00:24<00:05, 1381.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 33595/41409 [00:24<00:05, 1354.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 33738/41409 [00:24<00:05, 1375.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33876/41409 [00:24<00:05, 1365.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 34021/41409 [00:24<00:05, 1389.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 34161/41409 [00:24<00:05, 1304.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 34310/41409 [00:24<00:05, 1354.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 34447/41409 [00:25<00:05, 1298.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▎ | 34600/41409 [00:25<00:05, 1357.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34751/41409 [00:25<00:04, 1398.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34899/41409 [00:25<00:04, 1416.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 35048/41409 [00:25<00:04, 1435.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 35197/41409 [00:25<00:04, 1448.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 35343/41409 [00:25<00:04, 1431.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35494/41409 [00:25<00:04, 1451.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35640/41409 [00:25<00:04, 1440.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 35785/41409 [00:25<00:04, 1392.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35925/41409 [00:26<00:04, 1342.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 36079/41409 [00:26<00:03, 1392.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 36220/41409 [00:26<00:03, 1391.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36360/41409 [00:26<00:03, 1362.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36502/41409 [00:26<00:03, 1377.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36645/41409 [00:26<00:03, 1391.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36785/41409 [00:26<00:03, 1328.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36919/41409 [00:26<00:03, 1279.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 37075/41409 [00:26<00:03, 1351.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 37212/41409 [00:27<00:03, 1326.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 37347/41409 [00:27<00:03, 1317.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37488/41409 [00:27<00:02, 1343.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37624/41409 [00:27<00:02, 1284.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37762/41409 [00:27<00:02, 1306.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37894/41409 [00:27<00:02, 1270.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 38022/41409 [00:27<00:02, 1247.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 38151/41409 [00:27<00:02, 1252.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 38278/41409 [00:27<00:02, 1253.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38404/41409 [00:27<00:02, 1235.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38551/41409 [00:28<00:02, 1296.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38690/41409 [00:28<00:02, 1319.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38823/41409 [00:28<00:01, 1320.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38956/41409 [00:28<00:01, 1307.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 39088/41409 [00:28<00:01, 1310.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 39220/41409 [00:28<00:01, 1263.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 39347/41409 [00:28<00:01, 1155.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 39468/41409 [00:28<00:01, 1169.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39587/41409 [00:28<00:01, 1167.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39712/41409 [00:29<00:01, 1184.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39832/41409 [00:29<00:01, 1186.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▋| 39952/41409 [00:29<00:01, 1182.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 40071/41409 [00:29<00:01, 1170.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 40189/41409 [00:29<00:01, 1116.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 40302/41409 [00:29<00:00, 1118.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40421/41409 [00:29<00:00, 1131.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40535/41409 [00:29<00:00, 1057.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40643/41409 [00:29<00:00, 1063.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40751/41409 [00:30<00:00, 1053.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 40857/41409 [00:30<00:00, 981.23it/s] \u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40957/41409 [00:30<00:00, 842.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 41053/41409 [00:30<00:00, 870.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 41144/41409 [00:30<00:00, 837.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 41263/41409 [00:30<00:00, 918.05it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 41409/41409 [00:30<00:00, 1345.33it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1726 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 2/1726 [00:00<01:42, 16.89it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41409 18672\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 6/1726 [00:00<01:26, 19.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 10/1726 [00:00<01:54, 15.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 16/1726 [00:00<01:36, 17.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 18/1726 [00:00<01:44, 16.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 22/1726 [00:01<01:39, 17.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 26/1726 [00:01<01:22, 20.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 30/1726 [00:01<01:13, 23.00it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 36/1726 [00:01<01:05, 25.75it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 41/1726 [00:01<01:07, 25.10it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 44/1726 [00:02<01:41, 16.52it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 47/1726 [00:02<01:31, 18.31it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 50/1726 [00:02<01:22, 20.29it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 55/1726 [00:02<01:07, 24.65it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 59/1726 [00:02<01:01, 27.26it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 63/1726 [00:02<00:58, 28.22it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 68/1726 [00:02<00:51, 32.42it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 76/1726 [00:02<00:47, 34.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 80/1726 [00:03<00:48, 33.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 84/1726 [00:03<00:53, 30.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 88/1726 [00:03<01:00, 27.16it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 91/1726 [00:03<01:25, 19.09it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 95/1726 [00:03<01:14, 21.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 98/1726 [00:04<01:16, 21.29it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 101/1726 [00:04<01:27, 18.64it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 104/1726 [00:04<02:01, 13.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 107/1726 [00:04<01:45, 15.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 113/1726 [00:04<01:22, 19.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 119/1726 [00:04<01:06, 24.20it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 126/1726 [00:05<00:54, 29.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 131/1726 [00:05<01:08, 23.16it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 135/1726 [00:05<01:11, 22.20it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 139/1726 [00:05<01:19, 19.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 142/1726 [00:05<01:12, 21.71it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 146/1726 [00:06<01:08, 23.01it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 152/1726 [00:06<01:01, 25.70it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 155/1726 [00:06<01:05, 24.11it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 160/1726 [00:06<00:56, 27.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 164/1726 [00:06<01:07, 23.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 167/1726 [00:06<01:10, 22.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 170/1726 [00:07<01:05, 23.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 174/1726 [00:07<00:57, 26.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 178/1726 [00:07<00:59, 25.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 182/1726 [00:07<00:56, 27.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 185/1726 [00:07<01:25, 18.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 191/1726 [00:07<01:10, 21.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 194/1726 [00:07<01:06, 23.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 198/1726 [00:08<00:58, 25.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 202/1726 [00:08<00:56, 27.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 209/1726 [00:08<00:46, 32.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 214/1726 [00:08<00:44, 33.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 218/1726 [00:08<00:48, 31.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 222/1726 [00:08<00:52, 28.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 230/1726 [00:08<00:43, 34.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 235/1726 [00:09<00:49, 30.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 239/1726 [00:09<00:46, 31.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 243/1726 [00:09<00:44, 33.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 247/1726 [00:09<00:44, 32.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 251/1726 [00:09<00:58, 25.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 255/1726 [00:09<00:55, 26.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 262/1726 [00:09<00:46, 31.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 268/1726 [00:10<00:42, 34.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 272/1726 [00:10<00:41, 35.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 279/1726 [00:10<00:35, 40.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 284/1726 [00:10<00:49, 29.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 291/1726 [00:10<00:40, 35.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 298/1726 [00:10<00:35, 40.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 304/1726 [00:10<00:36, 38.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 309/1726 [00:11<00:44, 32.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 315/1726 [00:11<00:42, 33.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 320/1726 [00:11<00:42, 32.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 324/1726 [00:11<00:43, 31.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 329/1726 [00:11<00:39, 35.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 335/1726 [00:11<00:34, 40.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 340/1726 [00:12<00:36, 37.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 345/1726 [00:12<00:39, 34.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 349/1726 [00:12<00:40, 33.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 353/1726 [00:12<00:47, 28.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 358/1726 [00:12<00:41, 33.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 362/1726 [00:12<00:44, 30.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 366/1726 [00:12<00:45, 30.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 373/1726 [00:12<00:37, 35.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 378/1726 [00:13<00:40, 33.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 382/1726 [00:13<00:44, 30.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 388/1726 [00:13<00:41, 32.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 393/1726 [00:13<00:36, 36.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 400/1726 [00:13<00:31, 41.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 405/1726 [00:13<00:30, 43.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 410/1726 [00:14<00:38, 34.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 415/1726 [00:14<00:34, 37.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 420/1726 [00:14<00:41, 31.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 426/1726 [00:14<00:36, 35.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 431/1726 [00:14<00:37, 34.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 435/1726 [00:14<00:42, 30.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 441/1726 [00:14<00:36, 35.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 446/1726 [00:15<00:39, 32.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 450/1726 [00:15<00:44, 28.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 460/1726 [00:15<00:35, 35.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 465/1726 [00:15<00:33, 37.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 470/1726 [00:15<00:31, 40.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 475/1726 [00:15<00:30, 40.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 480/1726 [00:15<00:30, 40.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 487/1726 [00:15<00:26, 45.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 494/1726 [00:16<00:25, 49.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 501/1726 [00:16<00:24, 49.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 507/1726 [00:16<00:25, 47.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 513/1726 [00:16<00:34, 35.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 518/1726 [00:16<00:35, 34.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 522/1726 [00:16<00:42, 28.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 526/1726 [00:17<00:40, 29.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 530/1726 [00:17<00:37, 31.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 535/1726 [00:17<00:34, 34.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 539/1726 [00:17<00:34, 34.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 543/1726 [00:17<00:36, 32.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 549/1726 [00:17<00:31, 37.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 554/1726 [00:17<00:37, 31.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 558/1726 [00:17<00:35, 33.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 563/1726 [00:18<00:34, 33.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 567/1726 [00:18<00:33, 34.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 571/1726 [00:18<01:05, 17.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 576/1726 [00:18<00:52, 21.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 580/1726 [00:18<00:45, 25.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 586/1726 [00:19<00:37, 30.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 592/1726 [00:19<00:36, 31.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 596/1726 [00:19<00:43, 25.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 601/1726 [00:19<00:39, 28.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 605/1726 [00:19<00:38, 29.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 610/1726 [00:19<00:33, 33.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 614/1726 [00:19<00:34, 32.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 618/1726 [00:20<00:36, 30.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 622/1726 [00:20<00:40, 27.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 629/1726 [00:20<00:35, 31.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 635/1726 [00:20<00:30, 35.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 640/1726 [00:20<00:29, 37.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 648/1726 [00:20<00:25, 43.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 653/1726 [00:20<00:24, 42.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 662/1726 [00:20<00:21, 49.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 668/1726 [00:21<00:22, 46.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 674/1726 [00:21<00:29, 35.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 684/1726 [00:21<00:24, 42.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 694/1726 [00:21<00:21, 48.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 702/1726 [00:21<00:20, 50.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 708/1726 [00:21<00:20, 50.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 714/1726 [00:22<00:33, 30.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 719/1726 [00:22<00:34, 29.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 723/1726 [00:22<00:32, 30.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 727/1726 [00:22<00:30, 32.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 734/1726 [00:22<00:28, 35.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 741/1726 [00:22<00:25, 39.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 749/1726 [00:23<00:21, 45.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 759/1726 [00:23<00:18, 52.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 768/1726 [00:23<00:16, 58.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 776/1726 [00:23<00:15, 60.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 786/1726 [00:23<00:15, 61.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 793/1726 [00:23<00:16, 58.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 800/1726 [00:23<00:16, 56.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 809/1726 [00:23<00:14, 62.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 817/1726 [00:24<00:13, 65.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 824/1726 [00:24<00:18, 49.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 830/1726 [00:24<00:19, 46.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 836/1726 [00:24<00:18, 46.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 842/1726 [00:24<00:25, 34.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 850/1726 [00:24<00:21, 40.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 856/1726 [00:25<00:20, 41.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 861/1726 [00:25<00:22, 38.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 868/1726 [00:25<00:19, 43.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 875/1726 [00:25<00:19, 44.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 881/1726 [00:25<00:17, 47.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 887/1726 [00:25<00:16, 50.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 893/1726 [00:25<00:17, 47.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 902/1726 [00:25<00:15, 54.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 909/1726 [00:26<00:15, 51.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 915/1726 [00:26<00:16, 47.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 926/1726 [00:26<00:14, 56.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 934/1726 [00:26<00:12, 60.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 941/1726 [00:26<00:14, 55.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 948/1726 [00:26<00:13, 57.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 958/1726 [00:26<00:11, 65.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 970/1726 [00:26<00:09, 76.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 979/1726 [00:27<00:11, 67.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 992/1726 [00:27<00:09, 78.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 1002/1726 [00:27<00:09, 73.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 1011/1726 [00:27<00:10, 70.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 1019/1726 [00:27<00:09, 71.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 1027/1726 [00:27<00:12, 56.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 1034/1726 [00:28<00:13, 50.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1040/1726 [00:28<00:14, 46.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1046/1726 [00:28<00:16, 41.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1051/1726 [00:28<00:16, 40.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1062/1726 [00:28<00:13, 49.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1069/1726 [00:28<00:15, 41.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1075/1726 [00:28<00:14, 45.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1084/1726 [00:29<00:12, 51.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1092/1726 [00:29<00:11, 57.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1106/1726 [00:29<00:09, 66.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 1114/1726 [00:29<00:08, 68.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1130/1726 [00:29<00:07, 81.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1141/1726 [00:29<00:06, 87.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1151/1726 [00:29<00:06, 88.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1164/1726 [00:29<00:05, 94.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1176/1726 [00:29<00:05, 95.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1187/1726 [00:30<00:05, 93.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1197/1726 [00:30<00:05, 92.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1211/1726 [00:30<00:05, 101.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1222/1726 [00:30<00:05, 94.48it/s] \u001b[A\u001b[A\n",
            "\n",
            " 71%|███████▏  | 1232/1726 [00:30<00:05, 87.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1245/1726 [00:30<00:05, 94.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1255/1726 [00:30<00:05, 91.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1267/1726 [00:30<00:04, 94.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1277/1726 [00:31<00:04, 92.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 1287/1726 [00:31<00:05, 78.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 1296/1726 [00:31<00:05, 76.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1311/1726 [00:31<00:05, 79.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 1325/1726 [00:31<00:04, 83.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1338/1726 [00:31<00:04, 93.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1349/1726 [00:31<00:03, 96.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 1369/1726 [00:31<00:03, 112.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 1382/1726 [00:32<00:03, 112.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1396/1726 [00:32<00:02, 112.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1410/1726 [00:32<00:02, 119.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1423/1726 [00:32<00:02, 107.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1435/1726 [00:32<00:02, 103.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1451/1726 [00:32<00:02, 115.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 1464/1726 [00:32<00:02, 111.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1478/1726 [00:32<00:02, 117.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1503/1726 [00:33<00:01, 138.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 1521/1726 [00:33<00:01, 147.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1538/1726 [00:33<00:01, 147.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 1554/1726 [00:33<00:01, 135.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████▏| 1576/1726 [00:33<00:00, 152.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1601/1726 [00:33<00:00, 172.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 1627/1726 [00:33<00:00, 189.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 1650/1726 [00:33<00:00, 199.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 1672/1726 [00:33<00:00, 191.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1726/1726 [00:34<00:00, 50.70it/s] \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/18398 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 18398/18398 [00:00<00:00, 148901.96it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/41031 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 146/41031 [00:00<00:28, 1456.86it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 255/41031 [00:00<00:30, 1321.42it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 348/41031 [00:00<00:34, 1170.23it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 466/41031 [00:00<00:34, 1173.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 606/41031 [00:00<00:32, 1229.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 708/41031 [00:00<00:36, 1117.41it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 824/41031 [00:00<00:35, 1128.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 928/41031 [00:00<00:38, 1036.19it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1047/41031 [00:00<00:37, 1076.91it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1181/41031 [00:01<00:34, 1142.87it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1300/41031 [00:01<00:34, 1156.57it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1415/41031 [00:01<00:34, 1133.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1560/41031 [00:01<00:32, 1210.97it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1683/41031 [00:01<00:34, 1142.72it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1799/41031 [00:01<00:36, 1077.63it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1926/41031 [00:01<00:35, 1089.41it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2056/41031 [00:01<00:34, 1128.72it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2171/41031 [00:01<00:34, 1130.80it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2286/41031 [00:02<00:35, 1080.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2429/41031 [00:02<00:33, 1166.16it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2549/41031 [00:02<00:33, 1153.49it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2667/41031 [00:02<00:34, 1111.82it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2780/41031 [00:02<00:35, 1079.56it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2914/41031 [00:02<00:33, 1140.01it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3046/41031 [00:02<00:31, 1187.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3167/41031 [00:02<00:35, 1058.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3299/41031 [00:02<00:33, 1123.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3437/41031 [00:03<00:31, 1189.56it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3594/41031 [00:03<00:29, 1281.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3727/41031 [00:03<00:29, 1271.09it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3860/41031 [00:03<00:28, 1282.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4000/41031 [00:03<00:28, 1314.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4137/41031 [00:03<00:27, 1328.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4272/41031 [00:03<00:27, 1321.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4413/41031 [00:03<00:27, 1343.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4558/41031 [00:03<00:26, 1372.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4696/41031 [00:03<00:27, 1320.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4837/41031 [00:04<00:26, 1345.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4973/41031 [00:04<00:27, 1317.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5106/41031 [00:04<00:29, 1210.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5231/41031 [00:04<00:29, 1219.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5355/41031 [00:04<00:29, 1191.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5476/41031 [00:04<00:30, 1171.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5595/41031 [00:04<00:31, 1112.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5727/41031 [00:04<00:30, 1167.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5893/41031 [00:04<00:27, 1280.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6030/41031 [00:05<00:26, 1300.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6165/41031 [00:05<00:26, 1314.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6316/41031 [00:05<00:25, 1366.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6461/41031 [00:05<00:25, 1351.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6598/41031 [00:05<00:25, 1335.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 6748/41031 [00:05<00:24, 1380.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 6910/41031 [00:05<00:23, 1435.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7057/41031 [00:05<00:23, 1442.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7203/41031 [00:05<00:26, 1274.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7335/41031 [00:06<00:28, 1195.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7498/41031 [00:06<00:25, 1298.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7634/41031 [00:06<00:26, 1246.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7763/41031 [00:06<00:26, 1244.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 7900/41031 [00:06<00:25, 1277.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8031/41031 [00:06<00:28, 1157.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8151/41031 [00:06<00:28, 1151.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8285/41031 [00:06<00:27, 1201.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8416/41031 [00:06<00:26, 1228.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8566/41031 [00:06<00:25, 1298.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8704/41031 [00:07<00:24, 1319.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 8838/41031 [00:07<00:25, 1279.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 8968/41031 [00:07<00:25, 1273.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9097/41031 [00:07<00:25, 1241.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9237/41031 [00:07<00:24, 1282.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9381/41031 [00:07<00:24, 1315.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9514/41031 [00:07<00:24, 1283.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 9650/41031 [00:07<00:24, 1297.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9810/41031 [00:07<00:22, 1374.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 9950/41031 [00:08<00:23, 1314.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10094/41031 [00:08<00:23, 1344.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10230/41031 [00:08<00:23, 1313.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10363/41031 [00:08<00:24, 1263.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10520/41031 [00:08<00:22, 1341.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10657/41031 [00:08<00:23, 1298.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 10789/41031 [00:08<00:23, 1285.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 10924/41031 [00:08<00:23, 1296.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11055/41031 [00:08<00:23, 1284.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11205/41031 [00:08<00:22, 1341.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11341/41031 [00:09<00:23, 1270.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11470/41031 [00:09<00:24, 1210.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11601/41031 [00:09<00:23, 1237.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 11748/41031 [00:09<00:22, 1298.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 11896/41031 [00:09<00:22, 1319.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12052/41031 [00:09<00:20, 1383.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12193/41031 [00:09<00:20, 1377.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12332/41031 [00:09<00:20, 1380.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12488/41031 [00:09<00:19, 1429.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12632/41031 [00:10<00:20, 1416.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 12775/41031 [00:10<00:20, 1372.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 12914/41031 [00:10<00:21, 1326.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13051/41031 [00:10<00:20, 1336.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13191/41031 [00:10<00:20, 1354.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13351/41031 [00:10<00:19, 1415.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13500/41031 [00:10<00:19, 1434.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13651/41031 [00:10<00:18, 1454.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 13798/41031 [00:10<00:19, 1416.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 13969/41031 [00:10<00:18, 1487.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14120/41031 [00:11<00:18, 1466.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14268/41031 [00:11<00:18, 1445.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 14414/41031 [00:11<00:19, 1381.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 14554/41031 [00:11<00:19, 1346.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14693/41031 [00:11<00:19, 1358.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 14832/41031 [00:11<00:19, 1368.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 14999/41031 [00:11<00:18, 1443.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15150/41031 [00:11<00:17, 1449.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15296/41031 [00:11<00:18, 1419.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15439/41031 [00:12<00:18, 1415.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15582/41031 [00:12<00:18, 1353.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 15733/41031 [00:12<00:18, 1395.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 15874/41031 [00:12<00:18, 1336.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16009/41031 [00:12<00:19, 1314.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16180/41031 [00:12<00:17, 1410.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 16324/41031 [00:12<00:17, 1375.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 16464/41031 [00:12<00:18, 1346.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 16601/41031 [00:12<00:18, 1308.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 16754/41031 [00:12<00:17, 1366.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 16894/41031 [00:13<00:17, 1370.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17035/41031 [00:13<00:17, 1380.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17174/41031 [00:13<00:17, 1364.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17321/41031 [00:13<00:17, 1394.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17461/41031 [00:13<00:16, 1390.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17605/41031 [00:13<00:16, 1400.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 17746/41031 [00:13<00:16, 1394.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 17886/41031 [00:13<00:16, 1370.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18024/41031 [00:13<00:17, 1311.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18156/41031 [00:14<00:18, 1245.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 18282/41031 [00:14<00:19, 1182.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 18418/41031 [00:14<00:18, 1227.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 18549/41031 [00:14<00:18, 1246.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 18678/41031 [00:14<00:17, 1257.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 18805/41031 [00:14<00:18, 1213.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 18946/41031 [00:14<00:17, 1259.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 19074/41031 [00:14<00:18, 1188.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19195/41031 [00:14<00:19, 1113.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19353/41031 [00:15<00:17, 1220.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19511/41031 [00:15<00:16, 1309.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19659/41031 [00:15<00:15, 1353.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 19799/41031 [00:15<00:15, 1348.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 19957/41031 [00:15<00:14, 1406.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20101/41031 [00:15<00:15, 1353.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20247/41031 [00:15<00:15, 1382.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 20387/41031 [00:15<00:15, 1326.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 20538/41031 [00:15<00:14, 1375.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 20681/41031 [00:15<00:14, 1388.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 20851/41031 [00:16<00:13, 1466.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21000/41031 [00:16<00:13, 1449.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21155/41031 [00:16<00:13, 1476.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21304/41031 [00:16<00:13, 1456.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 21451/41031 [00:16<00:13, 1411.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21597/41031 [00:16<00:13, 1425.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21741/41031 [00:16<00:14, 1346.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 21893/41031 [00:16<00:13, 1393.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 22042/41031 [00:16<00:13, 1420.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22186/41031 [00:17<00:13, 1398.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 22341/41031 [00:17<00:13, 1419.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 22493/41031 [00:17<00:12, 1447.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 22654/41031 [00:17<00:12, 1486.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 22804/41031 [00:17<00:12, 1421.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 22953/41031 [00:17<00:12, 1441.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 23113/41031 [00:17<00:12, 1484.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23273/41031 [00:17<00:11, 1516.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23426/41031 [00:17<00:11, 1486.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 23576/41031 [00:17<00:12, 1438.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23724/41031 [00:18<00:11, 1446.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 23877/41031 [00:18<00:11, 1470.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 24025/41031 [00:18<00:11, 1434.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 24183/41031 [00:18<00:11, 1475.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 24332/41031 [00:18<00:12, 1358.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 24472/41031 [00:18<00:12, 1370.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 24619/41031 [00:18<00:11, 1394.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 24760/41031 [00:18<00:11, 1385.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 24900/41031 [00:18<00:11, 1371.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 25038/41031 [00:19<00:12, 1331.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 25180/41031 [00:19<00:11, 1357.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25317/41031 [00:19<00:11, 1359.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25466/41031 [00:19<00:11, 1395.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 25607/41031 [00:19<00:11, 1357.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 25752/41031 [00:19<00:11, 1382.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 25891/41031 [00:19<00:11, 1337.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26034/41031 [00:19<00:11, 1359.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26186/41031 [00:19<00:10, 1402.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 26340/41031 [00:19<00:10, 1441.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 26485/41031 [00:20<00:10, 1429.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 26643/41031 [00:20<00:09, 1470.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 26797/41031 [00:20<00:09, 1490.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 26949/41031 [00:20<00:09, 1494.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 27105/41031 [00:20<00:09, 1512.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 27257/41031 [00:20<00:09, 1423.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27428/41031 [00:20<00:09, 1497.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 27580/41031 [00:20<00:09, 1446.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 27727/41031 [00:20<00:09, 1344.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 27880/41031 [00:21<00:09, 1391.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28030/41031 [00:21<00:09, 1421.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 28174/41031 [00:21<00:09, 1381.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28314/41031 [00:21<00:09, 1365.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 28476/41031 [00:21<00:08, 1424.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 28620/41031 [00:21<00:08, 1412.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 28763/41031 [00:21<00:09, 1359.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 28905/41031 [00:21<00:08, 1377.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 29056/41031 [00:21<00:08, 1413.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 29211/41031 [00:21<00:08, 1450.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29361/41031 [00:22<00:07, 1464.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29509/41031 [00:22<00:07, 1452.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 29655/41031 [00:22<00:08, 1417.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 29798/41031 [00:22<00:07, 1414.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 29968/41031 [00:22<00:07, 1488.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 30119/41031 [00:22<00:07, 1491.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 30293/41031 [00:22<00:06, 1556.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 30454/41031 [00:22<00:06, 1571.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 30613/41031 [00:22<00:06, 1527.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 30767/41031 [00:22<00:06, 1523.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 30921/41031 [00:23<00:06, 1509.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 31073/41031 [00:23<00:06, 1479.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 31222/41031 [00:23<00:07, 1395.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 31363/41031 [00:23<00:06, 1389.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31503/41031 [00:23<00:07, 1326.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31640/41031 [00:23<00:07, 1334.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 31775/41031 [00:23<00:07, 1301.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 31910/41031 [00:23<00:06, 1315.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 32066/41031 [00:23<00:06, 1379.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 32206/41031 [00:24<00:06, 1312.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32339/41031 [00:24<00:06, 1274.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32468/41031 [00:24<00:06, 1270.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 32596/41031 [00:24<00:06, 1220.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 32726/41031 [00:24<00:06, 1240.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 32851/41031 [00:24<00:06, 1223.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 32994/41031 [00:24<00:06, 1278.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 33123/41031 [00:24<00:06, 1203.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 33259/41031 [00:24<00:06, 1245.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 33400/41031 [00:25<00:05, 1289.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33534/41031 [00:25<00:05, 1302.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33666/41031 [00:25<00:05, 1250.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 33793/41031 [00:25<00:05, 1250.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 33938/41031 [00:25<00:05, 1302.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 34075/41031 [00:25<00:05, 1321.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 34208/41031 [00:25<00:05, 1279.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▎ | 34355/41031 [00:25<00:05, 1329.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34509/41031 [00:25<00:04, 1386.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 34660/41031 [00:25<00:04, 1406.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 34812/41031 [00:26<00:04, 1437.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 34957/41031 [00:26<00:04, 1407.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35121/41031 [00:26<00:04, 1469.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 35270/41031 [00:26<00:04, 1408.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 35413/41031 [00:26<00:04, 1378.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35563/41031 [00:26<00:03, 1412.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35711/41031 [00:26<00:03, 1431.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 35855/41031 [00:26<00:03, 1405.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36003/41031 [00:26<00:03, 1424.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36146/41031 [00:27<00:03, 1375.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 36285/41031 [00:27<00:03, 1313.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36430/41031 [00:27<00:03, 1351.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36567/41031 [00:27<00:03, 1298.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 36699/41031 [00:27<00:03, 1240.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 36836/41031 [00:27<00:03, 1275.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 36967/41031 [00:27<00:03, 1284.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 37097/41031 [00:27<00:03, 1275.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37226/41031 [00:27<00:03, 1260.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 37353/41031 [00:27<00:02, 1240.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████▏| 37495/41031 [00:28<00:02, 1288.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37625/41031 [00:28<00:02, 1248.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37765/41031 [00:28<00:02, 1290.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 37898/41031 [00:28<00:02, 1300.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38031/41031 [00:28<00:02, 1307.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38163/41031 [00:28<00:02, 1306.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 38294/41031 [00:28<00:02, 1293.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 38424/41031 [00:28<00:02, 1261.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38556/41031 [00:28<00:01, 1276.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 38684/41031 [00:29<00:01, 1226.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 38808/41031 [00:29<00:01, 1176.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 38927/41031 [00:29<00:01, 1099.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 39040/41031 [00:29<00:01, 1107.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 39175/41031 [00:29<00:01, 1170.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39299/41031 [00:29<00:01, 1189.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 39420/41031 [00:29<00:01, 1185.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▋| 39540/41031 [00:29<00:01, 1150.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39656/41031 [00:29<00:01, 1077.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39774/41031 [00:29<00:01, 1105.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39886/41031 [00:30<00:01, 1106.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 39998/41031 [00:30<00:00, 1040.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40113/41031 [00:30<00:00, 1068.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40227/41031 [00:30<00:00, 1087.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 40337/41031 [00:30<00:00, 1086.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 40450/41031 [00:30<00:00, 1097.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40561/41031 [00:30<00:00, 924.57it/s] \u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40668/41031 [00:30<00:00, 963.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 40769/41031 [00:31<00:00, 943.67it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 40897/41031 [00:31<00:00, 1023.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 41031/41031 [00:31<00:00, 1313.23it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1690 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 3/1690 [00:00<01:05, 25.88it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "41031 18398\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  1%|          | 9/1690 [00:00<00:54, 30.83it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 12/1690 [00:00<01:00, 27.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 16/1690 [00:00<01:01, 27.17it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 19/1690 [00:00<01:05, 25.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 22/1690 [00:00<01:07, 24.55it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 25/1690 [00:00<01:23, 19.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 28/1690 [00:01<01:17, 21.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 34/1690 [00:01<01:05, 25.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 41/1690 [00:01<00:59, 27.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 46/1690 [00:01<01:03, 25.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 51/1690 [00:01<00:55, 29.68it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 55/1690 [00:01<00:55, 29.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 59/1690 [00:02<00:51, 31.65it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 63/1690 [00:02<00:58, 27.62it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 67/1690 [00:02<01:07, 24.20it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 70/1690 [00:02<01:03, 25.32it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 73/1690 [00:02<01:07, 23.79it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 79/1690 [00:02<00:56, 28.42it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 83/1690 [00:02<00:52, 30.57it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 87/1690 [00:02<00:49, 32.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 91/1690 [00:03<01:06, 23.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 94/1690 [00:03<01:23, 19.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 97/1690 [00:03<01:21, 19.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 100/1690 [00:03<01:15, 20.95it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 106/1690 [00:03<01:01, 25.83it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 110/1690 [00:04<01:04, 24.63it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 114/1690 [00:04<01:00, 25.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 117/1690 [00:04<01:14, 21.04it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 122/1690 [00:04<01:01, 25.33it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 126/1690 [00:04<01:02, 24.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 129/1690 [00:04<01:32, 16.94it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 132/1690 [00:05<01:25, 18.18it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 138/1690 [00:05<01:08, 22.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 142/1690 [00:05<01:11, 21.57it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 147/1690 [00:05<01:01, 24.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 155/1690 [00:05<01:07, 22.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 158/1690 [00:06<01:17, 19.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 166/1690 [00:06<00:59, 25.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 171/1690 [00:06<00:51, 29.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 176/1690 [00:06<00:57, 26.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 180/1690 [00:06<00:55, 27.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 184/1690 [00:06<01:00, 25.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 188/1690 [00:07<00:56, 26.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 192/1690 [00:07<00:55, 27.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 196/1690 [00:07<00:54, 27.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 201/1690 [00:07<00:47, 31.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 207/1690 [00:07<00:41, 35.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 213/1690 [00:07<00:37, 39.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 218/1690 [00:07<00:35, 41.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 224/1690 [00:07<00:31, 46.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 229/1690 [00:08<00:34, 41.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 234/1690 [00:08<00:34, 42.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 239/1690 [00:08<00:47, 30.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 244/1690 [00:08<00:42, 34.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 248/1690 [00:08<00:40, 35.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 252/1690 [00:08<00:57, 24.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 256/1690 [00:09<00:53, 26.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 260/1690 [00:09<00:55, 25.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 264/1690 [00:09<00:53, 26.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 270/1690 [00:09<00:50, 28.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 278/1690 [00:09<00:41, 33.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 284/1690 [00:09<00:36, 38.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 289/1690 [00:09<00:43, 31.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 294/1690 [00:10<00:43, 32.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 298/1690 [00:10<01:00, 23.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 302/1690 [00:10<00:58, 23.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 305/1690 [00:10<01:01, 22.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 311/1690 [00:10<00:51, 26.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 315/1690 [00:10<00:47, 29.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 322/1690 [00:11<00:39, 34.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 328/1690 [00:11<00:34, 39.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 334/1690 [00:11<00:31, 43.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 340/1690 [00:11<00:30, 43.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 345/1690 [00:11<00:29, 45.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 350/1690 [00:11<00:39, 34.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 361/1690 [00:11<00:36, 36.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 368/1690 [00:12<00:31, 41.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 376/1690 [00:12<00:27, 48.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 382/1690 [00:12<00:32, 40.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 387/1690 [00:12<00:38, 33.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 392/1690 [00:12<00:41, 31.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 396/1690 [00:12<00:40, 31.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 403/1690 [00:13<00:34, 37.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 408/1690 [00:13<00:31, 40.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 413/1690 [00:13<00:38, 33.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 419/1690 [00:13<00:34, 37.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 426/1690 [00:13<00:41, 30.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 431/1690 [00:13<00:37, 33.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 435/1690 [00:14<01:00, 20.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 443/1690 [00:14<00:48, 25.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 449/1690 [00:14<00:40, 30.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 456/1690 [00:14<00:36, 33.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 465/1690 [00:14<00:37, 32.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 473/1690 [00:15<00:32, 37.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 478/1690 [00:15<00:33, 36.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 487/1690 [00:15<00:27, 43.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 493/1690 [00:15<00:31, 37.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 498/1690 [00:15<00:30, 39.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 503/1690 [00:15<00:34, 34.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 507/1690 [00:16<00:44, 26.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 511/1690 [00:16<00:47, 24.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 518/1690 [00:16<00:38, 30.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 523/1690 [00:16<00:34, 33.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 528/1690 [00:16<00:38, 30.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 532/1690 [00:16<00:43, 26.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 536/1690 [00:17<00:39, 29.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 541/1690 [00:17<00:34, 33.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 547/1690 [00:17<00:34, 33.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 551/1690 [00:17<00:32, 35.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 556/1690 [00:17<00:30, 37.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 561/1690 [00:17<00:29, 37.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 565/1690 [00:17<00:42, 26.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 569/1690 [00:18<00:38, 29.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 576/1690 [00:18<00:31, 35.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 581/1690 [00:18<00:29, 37.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 586/1690 [00:18<00:29, 37.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 591/1690 [00:18<00:33, 32.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 596/1690 [00:18<00:36, 30.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 602/1690 [00:18<00:31, 35.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 607/1690 [00:19<00:35, 30.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 614/1690 [00:19<00:30, 35.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 623/1690 [00:19<00:24, 42.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 634/1690 [00:19<00:20, 50.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 641/1690 [00:19<00:21, 49.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 647/1690 [00:19<00:25, 40.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 658/1690 [00:19<00:21, 48.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 666/1690 [00:20<00:18, 54.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 673/1690 [00:20<00:17, 56.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 680/1690 [00:20<00:18, 55.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 687/1690 [00:20<00:18, 54.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 695/1690 [00:20<00:17, 58.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 705/1690 [00:20<00:15, 65.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 713/1690 [00:21<00:26, 36.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 719/1690 [00:21<00:27, 35.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 724/1690 [00:21<00:25, 38.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 731/1690 [00:21<00:21, 43.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 737/1690 [00:21<00:24, 38.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 742/1690 [00:21<00:22, 41.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 752/1690 [00:21<00:19, 48.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 759/1690 [00:22<00:19, 47.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 765/1690 [00:22<00:24, 38.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 775/1690 [00:22<00:19, 46.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 781/1690 [00:22<00:20, 45.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 789/1690 [00:22<00:17, 51.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 796/1690 [00:22<00:20, 43.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 802/1690 [00:23<00:25, 35.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 807/1690 [00:23<00:28, 31.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 813/1690 [00:23<00:24, 35.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 818/1690 [00:23<00:23, 37.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 823/1690 [00:23<00:21, 39.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 828/1690 [00:23<00:24, 35.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 832/1690 [00:23<00:23, 36.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 836/1690 [00:24<00:35, 24.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 841/1690 [00:24<00:31, 27.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 848/1690 [00:24<00:25, 32.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 856/1690 [00:24<00:21, 39.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 862/1690 [00:24<00:20, 40.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 867/1690 [00:24<00:21, 37.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 879/1690 [00:24<00:17, 45.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 886/1690 [00:25<00:17, 44.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 892/1690 [00:25<00:17, 46.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 898/1690 [00:25<00:19, 41.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 909/1690 [00:25<00:15, 50.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 920/1690 [00:25<00:13, 58.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 931/1690 [00:25<00:11, 66.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 940/1690 [00:25<00:11, 64.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 950/1690 [00:26<00:10, 67.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 959/1690 [00:26<00:10, 71.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 968/1690 [00:26<00:09, 75.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 977/1690 [00:26<00:09, 75.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 985/1690 [00:26<00:09, 73.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 993/1690 [00:26<00:09, 70.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 1005/1690 [00:26<00:08, 76.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 1013/1690 [00:26<00:08, 76.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1025/1690 [00:26<00:07, 85.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1035/1690 [00:27<00:09, 69.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1043/1690 [00:27<00:12, 50.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1053/1690 [00:27<00:10, 58.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1061/1690 [00:27<00:10, 62.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1069/1690 [00:27<00:09, 62.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1080/1690 [00:27<00:08, 71.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1090/1690 [00:27<00:07, 75.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1103/1690 [00:28<00:06, 86.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1115/1690 [00:28<00:06, 91.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1125/1690 [00:28<00:06, 89.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1138/1690 [00:28<00:05, 93.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1148/1690 [00:28<00:06, 80.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 1160/1690 [00:28<00:05, 88.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1170/1690 [00:28<00:06, 82.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 1179/1690 [00:28<00:06, 82.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1188/1690 [00:29<00:06, 80.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1201/1690 [00:29<00:05, 91.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1211/1690 [00:29<00:05, 82.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1220/1690 [00:29<00:05, 78.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1237/1690 [00:29<00:04, 93.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1249/1690 [00:29<00:04, 98.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 1260/1690 [00:29<00:04, 88.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 1272/1690 [00:29<00:04, 95.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1283/1690 [00:30<00:04, 96.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 1299/1690 [00:30<00:03, 107.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1315/1690 [00:30<00:03, 112.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 1330/1690 [00:30<00:02, 120.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 1343/1690 [00:30<00:03, 115.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 1355/1690 [00:30<00:03, 101.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1370/1690 [00:30<00:02, 108.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1386/1690 [00:30<00:02, 116.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1402/1690 [00:30<00:02, 122.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1416/1690 [00:31<00:02, 127.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 1433/1690 [00:31<00:01, 136.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1451/1690 [00:31<00:01, 134.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1465/1690 [00:31<00:01, 131.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 1483/1690 [00:31<00:01, 140.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 1498/1690 [00:31<00:01, 136.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 1515/1690 [00:31<00:01, 144.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 1532/1690 [00:31<00:01, 150.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1548/1690 [00:31<00:01, 141.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1572/1690 [00:32<00:00, 160.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 1594/1690 [00:32<00:00, 170.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 1618/1690 [00:32<00:00, 185.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1690/1690 [00:32<00:00, 52.01it/s] \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/18821 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 18821/18821 [00:00<00:00, 147264.24it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/42815 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 121/42815 [00:00<00:35, 1205.26it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 232/42815 [00:00<00:36, 1174.69it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 310/42815 [00:00<00:41, 1018.29it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 383/42815 [00:00<00:46, 906.22it/s] \u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 494/42815 [00:00<00:44, 958.31it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 617/42815 [00:00<00:41, 1025.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 710/42815 [00:00<00:47, 882.62it/s] \u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 836/42815 [00:00<00:43, 969.22it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 934/42815 [00:00<00:44, 932.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 1028/42815 [00:01<00:45, 920.80it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1138/42815 [00:01<00:43, 967.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1259/42815 [00:01<00:40, 1015.82it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1362/42815 [00:01<00:42, 974.07it/s] \u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1465/42815 [00:01<00:41, 989.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 1565/42815 [00:01<00:43, 945.06it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1675/42815 [00:01<00:41, 979.79it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1775/42815 [00:01<00:48, 838.90it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1864/42815 [00:01<00:50, 812.90it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1965/42815 [00:02<00:47, 859.42it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2062/42815 [00:02<00:45, 887.56it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2192/42815 [00:02<00:41, 978.93it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2295/42815 [00:02<00:41, 966.86it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2410/42815 [00:02<00:40, 998.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2526/42815 [00:02<00:38, 1040.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2646/42815 [00:02<00:37, 1083.38it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2757/42815 [00:02<00:40, 1000.02it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2860/42815 [00:02<00:39, 1001.32it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2962/42815 [00:03<00:40, 982.46it/s] \u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3076/42815 [00:03<00:38, 1023.26it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3188/42815 [00:03<00:37, 1050.31it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3295/42815 [00:03<00:39, 1011.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3398/42815 [00:03<00:41, 951.86it/s] \u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3508/42815 [00:03<00:39, 983.53it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3634/42815 [00:03<00:37, 1052.32it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3764/42815 [00:03<00:34, 1115.79it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3879/42815 [00:03<00:35, 1086.06it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 4003/42815 [00:03<00:34, 1125.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4118/42815 [00:04<00:35, 1101.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4250/42815 [00:04<00:33, 1157.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4368/42815 [00:04<00:35, 1085.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4485/42815 [00:04<00:34, 1107.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4612/42815 [00:04<00:33, 1150.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4732/42815 [00:04<00:32, 1158.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4849/42815 [00:04<00:35, 1072.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4961/42815 [00:04<00:34, 1083.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5086/42815 [00:04<00:33, 1128.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5206/42815 [00:05<00:33, 1139.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5322/42815 [00:05<00:35, 1047.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5437/42815 [00:05<00:34, 1075.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5547/42815 [00:05<00:35, 1045.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5653/42815 [00:05<00:36, 1004.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5755/42815 [00:05<00:38, 956.13it/s] \u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5853/42815 [00:05<00:38, 948.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5974/42815 [00:05<00:36, 1011.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 6118/42815 [00:05<00:33, 1109.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6272/42815 [00:06<00:30, 1210.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6399/42815 [00:06<00:31, 1169.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6527/42815 [00:06<00:30, 1200.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6668/42815 [00:06<00:28, 1256.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6797/42815 [00:06<00:29, 1209.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6921/42815 [00:06<00:31, 1139.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 7063/42815 [00:06<00:29, 1209.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7208/42815 [00:06<00:27, 1273.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7342/42815 [00:06<00:27, 1282.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7473/42815 [00:07<00:27, 1266.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7602/42815 [00:07<00:33, 1058.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7725/42815 [00:07<00:31, 1103.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7864/42815 [00:07<00:30, 1128.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7981/42815 [00:07<00:31, 1091.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8096/42815 [00:07<00:31, 1107.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8219/42815 [00:07<00:30, 1140.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8335/42815 [00:07<00:34, 989.37it/s] \u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8439/42815 [00:07<00:34, 998.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8557/42815 [00:08<00:32, 1046.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8665/42815 [00:08<00:33, 1032.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8793/42815 [00:08<00:31, 1095.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8933/42815 [00:08<00:28, 1170.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 9054/42815 [00:08<00:28, 1173.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 9194/42815 [00:08<00:27, 1229.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9320/42815 [00:08<00:28, 1169.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9440/42815 [00:08<00:30, 1104.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9553/42815 [00:08<00:33, 1006.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9659/42815 [00:09<00:32, 1022.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9791/42815 [00:09<00:30, 1091.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9904/42815 [00:09<00:30, 1090.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 10026/42815 [00:09<00:29, 1126.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 10166/42815 [00:09<00:27, 1190.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10293/42815 [00:09<00:26, 1210.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10416/42815 [00:09<00:26, 1203.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10548/42815 [00:09<00:26, 1227.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10672/42815 [00:09<00:27, 1164.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10790/42815 [00:10<00:27, 1150.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10923/42815 [00:10<00:26, 1193.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11044/42815 [00:10<00:27, 1175.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11174/42815 [00:10<00:26, 1210.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 11311/42815 [00:10<00:25, 1248.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11437/42815 [00:10<00:25, 1246.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11563/42815 [00:10<00:25, 1211.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11688/42815 [00:10<00:25, 1219.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11811/42815 [00:10<00:25, 1208.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11933/42815 [00:10<00:27, 1140.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12049/42815 [00:11<00:27, 1104.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12161/42815 [00:11<00:29, 1039.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 12285/42815 [00:11<00:28, 1089.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12432/42815 [00:11<00:25, 1179.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12554/42815 [00:11<00:25, 1182.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12682/42815 [00:11<00:24, 1208.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12826/42815 [00:11<00:23, 1269.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12958/42815 [00:11<00:23, 1282.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13099/42815 [00:11<00:22, 1316.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13232/42815 [00:11<00:22, 1301.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13364/42815 [00:12<00:23, 1278.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13493/42815 [00:12<00:25, 1172.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13626/42815 [00:12<00:24, 1214.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13750/42815 [00:12<00:23, 1220.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13892/42815 [00:12<00:22, 1270.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14032/42815 [00:12<00:22, 1300.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14175/42815 [00:12<00:21, 1334.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14312/42815 [00:12<00:21, 1341.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 14449/42815 [00:12<00:21, 1348.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14585/42815 [00:13<00:21, 1332.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14733/42815 [00:13<00:20, 1372.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14871/42815 [00:13<00:20, 1346.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 15007/42815 [00:13<00:20, 1338.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 15142/42815 [00:13<00:22, 1242.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15273/42815 [00:13<00:21, 1255.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15402/42815 [00:13<00:21, 1265.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 15530/42815 [00:13<00:21, 1265.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15663/42815 [00:13<00:21, 1283.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15792/42815 [00:14<00:21, 1234.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15917/42815 [00:14<00:21, 1238.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 16053/42815 [00:14<00:21, 1271.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16181/42815 [00:14<00:21, 1218.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16306/42815 [00:14<00:21, 1223.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16434/42815 [00:14<00:21, 1237.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 16559/42815 [00:14<00:22, 1175.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16682/42815 [00:14<00:21, 1189.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16815/42815 [00:14<00:21, 1226.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 16948/42815 [00:14<00:20, 1252.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 17074/42815 [00:15<00:21, 1219.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 17197/42815 [00:15<00:20, 1221.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 17332/42815 [00:15<00:20, 1253.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17475/42815 [00:15<00:19, 1296.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17606/42815 [00:15<00:19, 1273.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 17752/42815 [00:15<00:18, 1324.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17886/42815 [00:15<00:19, 1272.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18015/42815 [00:15<00:19, 1275.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18144/42815 [00:15<00:19, 1273.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18272/42815 [00:15<00:20, 1215.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18395/42815 [00:16<00:21, 1153.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18526/42815 [00:16<00:20, 1196.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 18653/42815 [00:16<00:19, 1216.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18776/42815 [00:16<00:20, 1159.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18894/42815 [00:16<00:21, 1117.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 19010/42815 [00:16<00:21, 1129.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 19124/42815 [00:16<00:21, 1116.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 19264/42815 [00:16<00:19, 1188.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 19389/42815 [00:16<00:19, 1205.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19511/42815 [00:17<00:19, 1180.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19634/42815 [00:17<00:19, 1194.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19755/42815 [00:17<00:20, 1149.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 19871/42815 [00:17<00:22, 1041.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20003/42815 [00:17<00:20, 1111.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20135/42815 [00:17<00:19, 1164.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20272/42815 [00:17<00:18, 1218.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20400/42815 [00:17<00:18, 1233.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20530/42815 [00:17<00:17, 1250.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20680/42815 [00:18<00:16, 1315.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 20814/42815 [00:18<00:17, 1258.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20949/42815 [00:18<00:17, 1284.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21079/42815 [00:18<00:17, 1255.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 21207/42815 [00:18<00:17, 1261.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 21355/42815 [00:18<00:16, 1319.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 21489/42815 [00:18<00:16, 1323.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21633/42815 [00:18<00:15, 1356.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21770/42815 [00:18<00:15, 1342.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21905/42815 [00:18<00:15, 1311.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 22045/42815 [00:19<00:15, 1336.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22180/42815 [00:19<00:15, 1297.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22320/42815 [00:19<00:15, 1325.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22454/42815 [00:19<00:16, 1255.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22581/42815 [00:19<00:16, 1205.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22725/42815 [00:19<00:15, 1265.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22854/42815 [00:19<00:15, 1269.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 22983/42815 [00:19<00:15, 1270.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23117/42815 [00:19<00:15, 1289.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23248/42815 [00:20<00:15, 1295.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23393/42815 [00:20<00:14, 1331.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23543/42815 [00:20<00:14, 1376.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 23682/42815 [00:20<00:14, 1309.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23815/42815 [00:20<00:14, 1282.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23959/42815 [00:20<00:14, 1325.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 24095/42815 [00:20<00:14, 1332.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24230/42815 [00:20<00:14, 1325.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24364/42815 [00:20<00:13, 1320.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24497/42815 [00:20<00:14, 1278.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24630/42815 [00:21<00:14, 1291.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24773/42815 [00:21<00:13, 1329.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24907/42815 [00:21<00:13, 1299.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 25058/42815 [00:21<00:13, 1351.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25195/42815 [00:21<00:14, 1212.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25320/42815 [00:21<00:15, 1116.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25436/42815 [00:21<00:15, 1117.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 25571/42815 [00:21<00:14, 1178.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25692/42815 [00:21<00:14, 1164.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25811/42815 [00:22<00:15, 1103.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 25945/42815 [00:22<00:14, 1154.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26063/42815 [00:22<00:15, 1109.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26176/42815 [00:22<00:15, 1102.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 26317/42815 [00:22<00:13, 1179.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26462/42815 [00:22<00:13, 1247.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26590/42815 [00:22<00:13, 1222.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26720/42815 [00:22<00:12, 1241.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26852/42815 [00:22<00:12, 1256.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26988/42815 [00:23<00:12, 1280.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 27132/42815 [00:23<00:11, 1323.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 27266/42815 [00:23<00:11, 1321.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27402/42815 [00:23<00:11, 1329.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27536/42815 [00:23<00:11, 1315.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27678/42815 [00:23<00:11, 1344.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27813/42815 [00:23<00:11, 1336.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 27947/42815 [00:23<00:11, 1328.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28083/42815 [00:23<00:11, 1337.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28229/42815 [00:23<00:10, 1370.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▋   | 28367/42815 [00:24<00:11, 1294.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28521/42815 [00:24<00:10, 1353.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28675/42815 [00:24<00:10, 1331.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28810/42815 [00:24<00:11, 1243.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28954/42815 [00:24<00:10, 1296.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29101/42815 [00:24<00:10, 1343.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29238/42815 [00:24<00:10, 1262.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 29367/42815 [00:24<00:10, 1241.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29503/42815 [00:24<00:10, 1269.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29655/42815 [00:25<00:09, 1331.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29790/42815 [00:25<00:09, 1310.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29938/42815 [00:25<00:09, 1355.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 30075/42815 [00:25<00:09, 1334.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30211/42815 [00:25<00:09, 1341.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30346/42815 [00:25<00:09, 1343.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30498/42815 [00:25<00:08, 1390.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30638/42815 [00:25<00:09, 1278.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30769/42815 [00:25<00:09, 1238.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30906/42815 [00:25<00:09, 1272.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31047/42815 [00:26<00:08, 1309.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31180/42815 [00:26<00:08, 1295.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31311/42815 [00:26<00:08, 1299.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31460/42815 [00:26<00:08, 1350.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31597/42815 [00:26<00:08, 1307.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31730/42815 [00:26<00:08, 1312.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31874/42815 [00:26<00:08, 1344.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 32010/42815 [00:26<00:08, 1327.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32168/42815 [00:26<00:07, 1390.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32309/42815 [00:27<00:08, 1306.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32442/42815 [00:27<00:08, 1210.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32566/42815 [00:27<00:08, 1148.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 32691/42815 [00:27<00:08, 1176.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32811/42815 [00:27<00:08, 1152.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32935/42815 [00:27<00:08, 1175.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33060/42815 [00:27<00:08, 1193.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33181/42815 [00:27<00:08, 1172.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33317/42815 [00:27<00:07, 1220.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33460/42815 [00:27<00:07, 1276.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33590/42815 [00:28<00:07, 1215.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 33714/42815 [00:28<00:07, 1176.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33833/42815 [00:28<00:07, 1171.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33952/42815 [00:28<00:07, 1110.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 34068/42815 [00:28<00:07, 1124.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 34183/42815 [00:28<00:07, 1118.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 34314/42815 [00:28<00:07, 1168.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 34432/42815 [00:28<00:07, 1080.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34543/42815 [00:29<00:08, 1026.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34666/42815 [00:29<00:07, 1079.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34777/42815 [00:29<00:07, 1056.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 34892/42815 [00:29<00:07, 1082.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35002/42815 [00:29<00:07, 1038.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35108/42815 [00:29<00:07, 1037.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35213/42815 [00:29<00:07, 1029.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35351/42815 [00:29<00:06, 1113.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35465/42815 [00:29<00:06, 1119.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35579/42815 [00:29<00:06, 1120.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35720/42815 [00:30<00:05, 1193.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 35862/42815 [00:30<00:05, 1249.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 35990/42815 [00:30<00:05, 1205.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 36135/42815 [00:30<00:05, 1263.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 36264/42815 [00:30<00:05, 1265.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36397/42815 [00:30<00:05, 1282.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36527/42815 [00:30<00:04, 1277.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36677/42815 [00:30<00:04, 1328.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36811/42815 [00:30<00:04, 1275.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 36940/42815 [00:30<00:04, 1238.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37086/42815 [00:31<00:04, 1295.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37222/42815 [00:31<00:04, 1313.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37355/42815 [00:31<00:04, 1298.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37498/42815 [00:31<00:03, 1333.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37633/42815 [00:31<00:03, 1334.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37768/42815 [00:31<00:04, 1247.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 37895/42815 [00:31<00:04, 1222.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38019/42815 [00:31<00:04, 1187.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38139/42815 [00:31<00:04, 1150.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38256/42815 [00:32<00:04, 1087.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 38367/42815 [00:32<00:04, 1043.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 38484/42815 [00:32<00:04, 1076.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38593/42815 [00:32<00:04, 1052.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38700/42815 [00:32<00:03, 1056.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 38807/42815 [00:32<00:03, 1032.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 38917/42815 [00:32<00:03, 1051.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 39023/42815 [00:32<00:03, 980.78it/s] \u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████▏| 39144/42815 [00:32<00:03, 1037.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39253/42815 [00:33<00:03, 1052.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39383/42815 [00:33<00:03, 1113.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39504/42815 [00:33<00:02, 1140.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39620/42815 [00:33<00:02, 1109.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39765/42815 [00:33<00:02, 1191.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39887/42815 [00:33<00:02, 1115.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 40010/42815 [00:33<00:02, 1146.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 40127/42815 [00:33<00:02, 1149.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40244/42815 [00:33<00:02, 1143.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40363/42815 [00:33<00:02, 1157.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40480/42815 [00:34<00:02, 1133.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40594/42815 [00:34<00:02, 1061.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40716/42815 [00:34<00:01, 1101.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40828/42815 [00:34<00:01, 1069.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 40939/42815 [00:34<00:01, 1080.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41048/42815 [00:34<00:01, 1017.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41152/42815 [00:34<00:01, 993.56it/s] \u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▋| 41253/42815 [00:34<00:01, 927.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41348/42815 [00:35<00:01, 853.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41465/42815 [00:35<00:01, 925.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41561/42815 [00:35<00:01, 922.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41662/42815 [00:35<00:01, 941.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41781/42815 [00:35<00:01, 1002.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41884/42815 [00:35<00:00, 965.05it/s] \u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41987/42815 [00:35<00:00, 977.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42092/42815 [00:35<00:00, 998.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 42193/42815 [00:35<00:00, 958.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42290/42815 [00:35<00:00, 867.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42380/42815 [00:36<00:00, 815.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42464/42815 [00:36<00:00, 801.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42546/42815 [00:36<00:00, 757.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 42644/42815 [00:36<00:00, 812.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 42728/42815 [00:36<00:00, 808.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 42815/42815 [00:36<00:00, 1167.41it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1675 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 5/1675 [00:00<00:37, 44.74it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42815 18821\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  1%|          | 10/1675 [00:00<00:36, 45.11it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 13/1675 [00:00<01:01, 26.82it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 16/1675 [00:00<01:39, 16.73it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 18/1675 [00:01<02:51,  9.66it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 21/1675 [00:01<02:26, 11.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 24/1675 [00:01<02:01, 13.57it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 26/1675 [00:01<02:03, 13.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 30/1675 [00:01<01:49, 14.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 34/1675 [00:02<01:43, 15.89it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 36/1675 [00:02<01:57, 13.97it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 38/1675 [00:02<01:53, 14.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 40/1675 [00:02<01:52, 14.53it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 42/1675 [00:02<01:46, 15.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 46/1675 [00:02<01:30, 17.91it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 49/1675 [00:02<01:48, 15.00it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 52/1675 [00:03<01:34, 17.19it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 54/1675 [00:03<01:36, 16.74it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 56/1675 [00:03<01:36, 16.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 58/1675 [00:03<02:22, 11.35it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 60/1675 [00:03<02:40, 10.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 63/1675 [00:04<02:09, 12.48it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 67/1675 [00:04<01:45, 15.22it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 72/1675 [00:04<01:24, 18.93it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 75/1675 [00:04<01:34, 16.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 78/1675 [00:04<01:42, 15.55it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 81/1675 [00:04<01:55, 13.80it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 85/1675 [00:05<01:33, 16.95it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 90/1675 [00:05<01:19, 19.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 93/1675 [00:05<01:18, 20.19it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 96/1675 [00:05<01:14, 21.08it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 99/1675 [00:05<01:16, 20.54it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 103/1675 [00:05<01:07, 23.30it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 107/1675 [00:05<01:04, 24.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 111/1675 [00:06<01:20, 19.44it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 114/1675 [00:06<01:23, 18.79it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 119/1675 [00:06<01:08, 22.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 122/1675 [00:06<01:07, 22.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 125/1675 [00:06<01:04, 24.13it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 130/1675 [00:06<00:54, 28.36it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 137/1675 [00:06<00:45, 34.14it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 142/1675 [00:07<00:57, 26.63it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 146/1675 [00:07<01:08, 22.45it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 150/1675 [00:07<00:59, 25.77it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 154/1675 [00:07<01:08, 22.35it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 157/1675 [00:07<01:09, 21.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 160/1675 [00:08<01:28, 17.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 163/1675 [00:08<01:23, 18.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 167/1675 [00:08<01:26, 17.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 169/1675 [00:08<02:00, 12.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 172/1675 [00:09<01:45, 14.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 174/1675 [00:09<01:42, 14.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 176/1675 [00:09<01:42, 14.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 178/1675 [00:09<02:26, 10.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 180/1675 [00:09<02:08, 11.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 185/1675 [00:09<01:40, 14.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 190/1675 [00:10<01:25, 17.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 195/1675 [00:10<01:10, 20.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 199/1675 [00:10<01:00, 24.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 203/1675 [00:10<01:03, 23.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 206/1675 [00:10<01:09, 21.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 209/1675 [00:10<01:05, 22.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 212/1675 [00:10<01:16, 19.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 215/1675 [00:11<01:18, 18.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 218/1675 [00:11<01:41, 14.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 220/1675 [00:11<02:00, 12.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 224/1675 [00:11<01:36, 14.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 229/1675 [00:11<01:19, 18.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 232/1675 [00:12<01:11, 20.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 235/1675 [00:12<01:35, 15.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 239/1675 [00:12<01:19, 18.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 243/1675 [00:12<01:09, 20.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 247/1675 [00:12<00:59, 24.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 255/1675 [00:12<00:47, 29.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 260/1675 [00:13<01:07, 20.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 267/1675 [00:13<00:53, 26.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 272/1675 [00:13<00:53, 26.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 279/1675 [00:13<00:44, 31.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 284/1675 [00:13<00:39, 35.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 289/1675 [00:14<00:46, 29.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 293/1675 [00:14<00:54, 25.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 297/1675 [00:14<01:12, 19.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 303/1675 [00:14<01:01, 22.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 307/1675 [00:14<00:57, 23.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 310/1675 [00:15<01:01, 22.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 316/1675 [00:15<00:50, 26.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 320/1675 [00:15<01:01, 22.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 323/1675 [00:15<01:07, 20.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 326/1675 [00:15<01:17, 17.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 329/1675 [00:16<01:27, 15.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 333/1675 [00:16<01:11, 18.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 337/1675 [00:16<01:01, 21.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 343/1675 [00:16<00:50, 26.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 347/1675 [00:16<00:57, 23.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 352/1675 [00:16<00:50, 26.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 356/1675 [00:16<00:45, 28.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 363/1675 [00:16<00:38, 34.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 368/1675 [00:17<00:35, 37.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 373/1675 [00:17<00:34, 37.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 378/1675 [00:17<00:39, 32.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 384/1675 [00:17<00:34, 37.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 392/1675 [00:17<00:28, 44.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 398/1675 [00:17<00:27, 46.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 405/1675 [00:17<00:29, 43.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 411/1675 [00:18<00:27, 45.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 416/1675 [00:18<00:33, 38.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 421/1675 [00:18<00:39, 31.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 427/1675 [00:18<00:35, 35.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 434/1675 [00:18<00:30, 40.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 439/1675 [00:19<00:54, 22.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 443/1675 [00:19<00:49, 24.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 448/1675 [00:19<00:42, 28.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 452/1675 [00:19<00:39, 30.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 456/1675 [00:19<00:55, 22.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 463/1675 [00:19<00:43, 27.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 470/1675 [00:19<00:36, 33.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 476/1675 [00:20<00:33, 36.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 481/1675 [00:20<00:31, 38.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 487/1675 [00:20<00:27, 43.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 494/1675 [00:20<00:32, 36.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 499/1675 [00:21<01:00, 19.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 503/1675 [00:21<00:54, 21.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 507/1675 [00:21<00:50, 22.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 512/1675 [00:21<00:43, 26.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 516/1675 [00:21<00:39, 29.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 520/1675 [00:21<00:55, 20.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 526/1675 [00:22<00:46, 24.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 531/1675 [00:22<00:41, 27.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 535/1675 [00:22<00:52, 21.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 538/1675 [00:22<00:49, 22.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 541/1675 [00:22<00:49, 23.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 546/1675 [00:22<00:41, 27.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 550/1675 [00:22<00:38, 29.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 554/1675 [00:23<00:39, 28.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 561/1675 [00:23<00:32, 34.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 566/1675 [00:23<00:38, 28.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 571/1675 [00:23<00:33, 32.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 575/1675 [00:23<00:35, 30.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 581/1675 [00:23<00:30, 35.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 586/1675 [00:24<00:51, 21.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 590/1675 [00:24<00:45, 23.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 597/1675 [00:24<00:37, 28.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 604/1675 [00:24<00:31, 34.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 609/1675 [00:24<00:40, 26.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 615/1675 [00:25<00:33, 31.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 620/1675 [00:25<00:32, 32.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 626/1675 [00:25<00:34, 29.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 631/1675 [00:25<00:30, 33.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 637/1675 [00:25<00:33, 31.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 644/1675 [00:25<00:28, 36.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 649/1675 [00:26<00:30, 33.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 654/1675 [00:26<00:29, 34.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 659/1675 [00:26<00:26, 37.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 664/1675 [00:26<00:32, 30.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 668/1675 [00:26<00:31, 32.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 672/1675 [00:26<00:31, 31.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 676/1675 [00:26<00:37, 26.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 680/1675 [00:27<00:34, 29.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 684/1675 [00:27<00:35, 28.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 689/1675 [00:27<00:31, 31.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 694/1675 [00:27<00:28, 34.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 698/1675 [00:27<00:34, 28.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 707/1675 [00:27<00:27, 34.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 712/1675 [00:27<00:25, 37.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 722/1675 [00:27<00:21, 45.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 728/1675 [00:28<00:29, 32.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 733/1675 [00:28<00:29, 32.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 739/1675 [00:28<00:26, 35.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 744/1675 [00:28<00:26, 35.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 752/1675 [00:28<00:26, 35.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 756/1675 [00:29<00:36, 25.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 763/1675 [00:29<00:30, 30.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 768/1675 [00:29<00:27, 32.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 776/1675 [00:29<00:22, 39.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 782/1675 [00:29<00:22, 38.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 789/1675 [00:29<00:21, 41.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 795/1675 [00:29<00:19, 45.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 801/1675 [00:30<00:20, 41.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 807/1675 [00:30<00:19, 44.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 814/1675 [00:30<00:18, 46.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 820/1675 [00:30<00:17, 48.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 826/1675 [00:30<00:20, 40.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 831/1675 [00:30<00:21, 39.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 839/1675 [00:30<00:19, 43.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 844/1675 [00:31<00:25, 32.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 848/1675 [00:31<00:30, 27.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 852/1675 [00:31<00:27, 29.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 858/1675 [00:31<00:23, 34.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 863/1675 [00:31<00:24, 33.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 869/1675 [00:31<00:21, 37.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 874/1675 [00:31<00:20, 39.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 879/1675 [00:32<00:24, 32.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 887/1675 [00:32<00:20, 38.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 892/1675 [00:32<00:20, 38.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 897/1675 [00:32<00:23, 33.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 908/1675 [00:32<00:18, 42.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 919/1675 [00:32<00:14, 50.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 927/1675 [00:32<00:13, 54.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 934/1675 [00:33<00:12, 57.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 941/1675 [00:33<00:12, 58.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 948/1675 [00:33<00:13, 55.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 955/1675 [00:33<00:14, 49.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 961/1675 [00:33<00:17, 39.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 970/1675 [00:33<00:15, 45.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 977/1675 [00:33<00:14, 49.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 983/1675 [00:34<00:16, 42.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 988/1675 [00:34<00:15, 44.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 994/1675 [00:34<00:14, 48.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 1001/1675 [00:34<00:12, 52.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1010/1675 [00:34<00:11, 55.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1016/1675 [00:34<00:12, 53.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 1027/1675 [00:34<00:10, 63.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1035/1675 [00:34<00:09, 65.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1043/1675 [00:35<00:10, 59.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1050/1675 [00:35<00:13, 47.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 1065/1675 [00:35<00:10, 59.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1074/1675 [00:35<00:09, 64.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 1083/1675 [00:35<00:10, 57.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1093/1675 [00:35<00:09, 62.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1101/1675 [00:36<00:10, 56.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1109/1675 [00:36<00:09, 61.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1121/1675 [00:36<00:07, 71.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1131/1675 [00:36<00:09, 60.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1142/1675 [00:36<00:07, 69.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▊   | 1151/1675 [00:36<00:07, 67.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1159/1675 [00:36<00:08, 63.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 1168/1675 [00:36<00:07, 68.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1176/1675 [00:37<00:07, 66.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1184/1675 [00:37<00:08, 59.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1192/1675 [00:37<00:07, 61.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1201/1675 [00:37<00:08, 58.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1208/1675 [00:37<00:09, 47.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1214/1675 [00:37<00:11, 41.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1226/1675 [00:38<00:08, 50.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1239/1675 [00:38<00:07, 60.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 1250/1675 [00:38<00:06, 67.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 1260/1675 [00:38<00:05, 74.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1271/1675 [00:38<00:04, 80.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 1281/1675 [00:38<00:05, 77.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 1290/1675 [00:38<00:05, 74.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1299/1675 [00:38<00:05, 72.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1311/1675 [00:39<00:04, 77.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 1320/1675 [00:39<00:05, 65.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 1335/1675 [00:39<00:04, 77.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1356/1675 [00:39<00:03, 95.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1369/1675 [00:39<00:03, 82.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1380/1675 [00:39<00:03, 80.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1397/1675 [00:39<00:02, 95.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1413/1675 [00:40<00:02, 104.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 1426/1675 [00:40<00:02, 98.16it/s] \u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1441/1675 [00:40<00:02, 108.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1454/1675 [00:40<00:02, 96.26it/s] \u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 1472/1675 [00:40<00:01, 109.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 1485/1675 [00:40<00:01, 113.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1498/1675 [00:40<00:01, 114.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 1521/1675 [00:40<00:01, 134.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1537/1675 [00:41<00:01, 133.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1552/1675 [00:41<00:00, 132.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 1571/1675 [00:41<00:00, 141.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 1593/1675 [00:41<00:00, 157.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 1611/1675 [00:41<00:00, 163.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1675/1675 [00:41<00:00, 39.92it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 4\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 0/18618 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 18618/18618 [00:00<00:00, 146161.49it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/42840 [00:00<?, ?it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 114/42840 [00:00<00:38, 1121.62it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 209/42840 [00:00<00:40, 1060.20it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 274/42840 [00:00<00:47, 890.95it/s] \u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 351/42840 [00:00<00:50, 841.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 421/42840 [00:00<00:53, 788.31it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 523/42840 [00:00<00:50, 845.75it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 599/42840 [00:00<00:54, 772.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 671/42840 [00:00<00:59, 706.82it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 798/42840 [00:00<00:51, 814.75it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 884/42840 [00:01<00:52, 805.88it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 968/42840 [00:01<00:53, 785.35it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 1049/42840 [00:01<00:53, 775.10it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1175/42840 [00:01<00:47, 875.28it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1268/42840 [00:01<00:48, 852.37it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1370/42840 [00:01<00:46, 890.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 1463/42840 [00:01<00:49, 839.07it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 1574/42840 [00:01<00:45, 902.94it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1689/42840 [00:01<00:42, 964.76it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1790/42840 [00:02<00:51, 789.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 1877/42840 [00:02<00:51, 795.49it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 1983/42840 [00:02<00:47, 859.57it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 2075/42840 [00:02<00:48, 844.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2193/42840 [00:02<00:44, 918.08it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 2300/42840 [00:02<00:42, 958.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2400/42840 [00:02<00:43, 932.23it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2519/42840 [00:02<00:40, 992.22it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 2632/42840 [00:02<00:39, 1027.73it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▋         | 2738/42840 [00:03<00:42, 947.40it/s] \u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2846/42840 [00:03<00:40, 982.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 2947/42840 [00:03<00:42, 940.58it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3049/42840 [00:03<00:41, 957.23it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 3174/42840 [00:03<00:38, 1029.03it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3280/42840 [00:03<00:40, 986.88it/s] \u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3382/42840 [00:03<00:39, 995.07it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3484/42840 [00:03<00:39, 998.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 3600/42840 [00:03<00:37, 1040.96it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 3726/42840 [00:04<00:35, 1096.21it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3838/42840 [00:04<00:36, 1081.11it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 3952/42840 [00:04<00:36, 1079.20it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 4065/42840 [00:04<00:35, 1091.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4175/42840 [00:04<00:36, 1066.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 4283/42840 [00:04<00:40, 944.17it/s] \u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 4400/42840 [00:04<00:38, 997.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4513/42840 [00:04<00:37, 1030.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4619/42840 [00:04<00:36, 1036.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 4725/42840 [00:05<00:38, 978.28it/s] \u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 4833/42840 [00:05<00:37, 1006.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 4961/42840 [00:05<00:35, 1074.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5071/42840 [00:05<00:35, 1070.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5180/42840 [00:05<00:40, 922.03it/s] \u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 5288/42840 [00:05<00:39, 960.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5388/42840 [00:05<00:39, 952.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5486/42840 [00:05<00:40, 921.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5581/42840 [00:05<00:41, 893.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 5672/42840 [00:06<00:42, 881.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 5794/42840 [00:06<00:38, 961.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 5924/42840 [00:06<00:35, 1043.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 6073/42840 [00:06<00:32, 1145.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 6194/42840 [00:06<00:33, 1105.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 6312/42840 [00:06<00:32, 1127.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6440/42840 [00:06<00:31, 1166.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 6572/42840 [00:06<00:30, 1203.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6695/42840 [00:06<00:32, 1109.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 6823/42840 [00:06<00:31, 1151.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 6969/42840 [00:07<00:29, 1228.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7102/42840 [00:07<00:28, 1255.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7230/42840 [00:07<00:29, 1207.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7353/42840 [00:07<00:32, 1077.96it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 7477/42840 [00:07<00:31, 1121.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7609/42840 [00:07<00:30, 1141.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7726/42840 [00:07<00:31, 1123.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 7841/42840 [00:07<00:31, 1123.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 7955/42840 [00:07<00:31, 1110.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8067/42840 [00:08<00:34, 1012.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8172/42840 [00:08<00:33, 1022.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 8288/42840 [00:08<00:32, 1056.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8396/42840 [00:08<00:34, 992.49it/s] \u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 8527/42840 [00:08<00:32, 1069.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 8685/42840 [00:08<00:29, 1161.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8806/42840 [00:08<00:28, 1174.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 8927/42840 [00:08<00:30, 1116.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 9042/42840 [00:08<00:31, 1088.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 9153/42840 [00:09<00:32, 1046.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9260/42840 [00:09<00:32, 1021.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9373/42840 [00:09<00:31, 1051.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9480/42840 [00:09<00:34, 969.04it/s] \u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 9601/42840 [00:09<00:32, 1029.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9727/42840 [00:09<00:30, 1089.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9853/42840 [00:09<00:29, 1132.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 9969/42840 [00:09<00:29, 1105.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 10098/42840 [00:09<00:28, 1154.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10216/42840 [00:10<00:31, 1050.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10326/42840 [00:10<00:30, 1049.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 10450/42840 [00:10<00:29, 1095.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10565/42840 [00:10<00:29, 1109.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 10684/42840 [00:10<00:28, 1130.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 10817/42840 [00:10<00:27, 1183.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 10937/42840 [00:10<00:27, 1160.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11055/42840 [00:10<00:28, 1118.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 11173/42840 [00:10<00:27, 1134.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 11295/42840 [00:11<00:27, 1136.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11410/42840 [00:11<00:29, 1066.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11518/42840 [00:11<00:31, 983.26it/s] \u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11619/42840 [00:11<00:32, 947.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 11716/42840 [00:11<00:33, 936.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11844/42840 [00:11<00:30, 1018.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 11976/42840 [00:11<00:28, 1091.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12093/42840 [00:11<00:27, 1112.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 12207/42840 [00:11<00:27, 1103.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12347/42840 [00:11<00:26, 1151.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12475/42840 [00:12<00:25, 1187.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 12613/42840 [00:12<00:24, 1236.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 12739/42840 [00:12<00:25, 1200.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12861/42840 [00:12<00:27, 1108.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 12975/42840 [00:12<00:27, 1091.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13103/42840 [00:12<00:26, 1140.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13219/42840 [00:12<00:25, 1141.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 13339/42840 [00:12<00:25, 1158.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 13466/42840 [00:12<00:24, 1184.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13586/42840 [00:13<00:26, 1124.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13701/42840 [00:13<00:25, 1131.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 13834/42840 [00:13<00:24, 1183.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 13986/42840 [00:13<00:22, 1266.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14116/42840 [00:13<00:23, 1244.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 14243/42840 [00:13<00:23, 1238.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 14369/42840 [00:13<00:23, 1229.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14505/42840 [00:13<00:22, 1264.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14633/42840 [00:13<00:22, 1266.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 14761/42840 [00:13<00:22, 1267.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 14889/42840 [00:14<00:22, 1231.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 15027/42840 [00:14<00:21, 1271.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 15155/42840 [00:14<00:22, 1220.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15292/42840 [00:14<00:21, 1260.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 15421/42840 [00:14<00:21, 1267.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 15549/42840 [00:14<00:22, 1196.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15670/42840 [00:14<00:22, 1186.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15790/42840 [00:14<00:24, 1095.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 15902/42840 [00:14<00:25, 1072.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 16054/42840 [00:15<00:22, 1175.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16176/42840 [00:15<00:22, 1178.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16298/42840 [00:15<00:22, 1189.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 16419/42840 [00:15<00:22, 1162.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▊      | 16548/42840 [00:15<00:21, 1197.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16676/42840 [00:15<00:21, 1217.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 16799/42840 [00:15<00:22, 1171.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 16932/42840 [00:15<00:21, 1214.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 17066/42840 [00:15<00:20, 1249.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 17200/42840 [00:16<00:20, 1272.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 17329/42840 [00:16<00:20, 1222.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17453/42840 [00:16<00:21, 1173.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 17578/42840 [00:16<00:21, 1157.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 17711/42840 [00:16<00:20, 1202.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17833/42840 [00:16<00:21, 1166.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 17951/42840 [00:16<00:21, 1132.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18066/42840 [00:16<00:23, 1043.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 18173/42840 [00:16<00:23, 1042.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18292/42840 [00:17<00:22, 1079.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18428/42840 [00:17<00:21, 1150.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 18546/42840 [00:17<00:21, 1153.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 18663/42840 [00:17<00:21, 1134.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18796/42840 [00:17<00:20, 1182.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 18916/42840 [00:17<00:22, 1087.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 19056/42840 [00:17<00:20, 1162.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 19176/42840 [00:17<00:22, 1072.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 19318/42840 [00:17<00:20, 1157.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 19456/42840 [00:17<00:19, 1214.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19582/42840 [00:18<00:18, 1224.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 19720/42840 [00:18<00:18, 1253.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▋     | 19857/42840 [00:18<00:17, 1284.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 19988/42840 [00:18<00:19, 1159.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20130/42840 [00:18<00:18, 1225.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 20256/42840 [00:18<00:19, 1166.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20376/42840 [00:18<00:19, 1158.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20505/42840 [00:18<00:18, 1189.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 20632/42840 [00:18<00:18, 1210.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▊     | 20778/42840 [00:19<00:17, 1274.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 20908/42840 [00:19<00:17, 1259.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21045/42840 [00:19<00:16, 1288.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 21175/42840 [00:19<00:17, 1223.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 21316/42840 [00:19<00:16, 1273.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 21449/42840 [00:19<00:16, 1289.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 21580/42840 [00:19<00:17, 1238.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21706/42840 [00:19<00:18, 1169.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21825/42840 [00:19<00:18, 1152.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 21942/42840 [00:20<00:18, 1147.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22072/42840 [00:20<00:17, 1188.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22214/42840 [00:20<00:16, 1245.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22340/42840 [00:20<00:16, 1247.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 22466/42840 [00:20<00:16, 1240.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22618/42840 [00:20<00:15, 1310.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22751/42840 [00:20<00:16, 1244.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 22878/42840 [00:20<00:16, 1194.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 23003/42840 [00:20<00:16, 1208.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23129/42840 [00:20<00:16, 1222.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 23253/42840 [00:21<00:16, 1220.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23391/42840 [00:21<00:15, 1263.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 23519/42840 [00:21<00:15, 1267.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 23647/42840 [00:21<00:15, 1248.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 23773/42840 [00:21<00:15, 1250.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 23917/42840 [00:21<00:14, 1301.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 24048/42840 [00:21<00:15, 1248.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 24194/42840 [00:21<00:14, 1296.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24325/42840 [00:21<00:15, 1211.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24449/42840 [00:22<00:16, 1084.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 24562/42840 [00:22<00:17, 1037.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24669/42840 [00:22<00:17, 1036.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24775/42840 [00:22<00:18, 984.20it/s] \u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24876/42840 [00:22<00:18, 956.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 24984/42840 [00:22<00:18, 988.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▊    | 25085/42840 [00:22<00:18, 955.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25182/42840 [00:22<00:18, 934.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25292/42840 [00:22<00:17, 976.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 25418/42840 [00:23<00:16, 1045.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 25542/42840 [00:23<00:15, 1095.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 25671/42840 [00:23<00:15, 1144.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25789/42840 [00:23<00:14, 1153.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 25906/42840 [00:23<00:14, 1146.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26022/42840 [00:23<00:15, 1116.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 26145/42840 [00:23<00:14, 1147.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████▏   | 26271/42840 [00:23<00:14, 1175.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26400/42840 [00:23<00:13, 1207.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26522/42840 [00:23<00:14, 1103.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 26658/42840 [00:24<00:13, 1166.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26778/42840 [00:24<00:13, 1174.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 26905/42840 [00:24<00:13, 1201.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 27042/42840 [00:24<00:12, 1246.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 27169/42840 [00:24<00:12, 1243.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 27295/42840 [00:24<00:12, 1229.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27431/42840 [00:24<00:12, 1261.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 27575/42840 [00:24<00:11, 1309.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27707/42840 [00:24<00:12, 1198.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 27830/42840 [00:25<00:12, 1195.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 27976/42840 [00:25<00:11, 1259.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28120/42840 [00:25<00:11, 1307.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28253/42840 [00:25<00:11, 1249.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 28380/42840 [00:25<00:12, 1203.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28528/42840 [00:25<00:11, 1272.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28659/42840 [00:25<00:11, 1281.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 28794/42840 [00:25<00:10, 1298.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 28926/42840 [00:25<00:10, 1304.20it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29061/42840 [00:25<00:10, 1317.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29194/42840 [00:26<00:10, 1271.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 29332/42840 [00:26<00:10, 1302.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29463/42840 [00:26<00:10, 1272.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29591/42840 [00:26<00:10, 1266.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 29723/42840 [00:26<00:10, 1280.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 29861/42840 [00:26<00:09, 1302.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 30004/42840 [00:26<00:09, 1337.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 30139/42840 [00:26<00:09, 1275.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30275/42840 [00:26<00:09, 1297.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 30423/42840 [00:27<00:09, 1342.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████▏  | 30559/42840 [00:27<00:09, 1316.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30704/42840 [00:27<00:08, 1352.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30841/42840 [00:27<00:08, 1354.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 30991/42840 [00:27<00:08, 1394.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31132/42840 [00:27<00:08, 1353.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31269/42840 [00:27<00:08, 1290.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 31400/42840 [00:27<00:09, 1196.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▎  | 31522/42840 [00:27<00:10, 1128.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31638/42840 [00:28<00:09, 1128.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31762/42840 [00:28<00:09, 1158.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 31880/42840 [00:28<00:09, 1161.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 32003/42840 [00:28<00:09, 1176.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▍  | 32122/42840 [00:28<00:09, 1118.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 32242/42840 [00:28<00:09, 1140.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32387/42840 [00:28<00:08, 1218.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32511/42840 [00:28<00:08, 1174.67it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 32631/42840 [00:28<00:09, 1127.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 32746/42840 [00:28<00:08, 1121.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32860/42840 [00:29<00:09, 1069.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 32969/42840 [00:29<00:09, 1072.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33078/42840 [00:29<00:09, 1062.07it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 33185/42840 [00:29<00:09, 1039.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33301/42840 [00:29<00:08, 1072.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33409/42840 [00:29<00:09, 1009.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 33529/42840 [00:29<00:08, 1050.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▊  | 33661/42840 [00:29<00:08, 1117.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33775/42840 [00:29<00:08, 1120.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 33900/42840 [00:30<00:07, 1155.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 34017/42840 [00:30<00:08, 1086.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 34131/42840 [00:30<00:07, 1101.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 34272/42840 [00:30<00:07, 1178.84it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 34393/42840 [00:30<00:07, 1106.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34519/42840 [00:30<00:07, 1144.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34652/42840 [00:30<00:06, 1193.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 34778/42840 [00:30<00:06, 1210.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████▏ | 34901/42840 [00:30<00:06, 1179.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35035/42840 [00:30<00:06, 1220.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35164/42840 [00:31<00:06, 1237.88it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 35289/42840 [00:31<00:06, 1221.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35412/42840 [00:31<00:06, 1195.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35538/42840 [00:31<00:06, 1213.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 35664/42840 [00:31<00:05, 1224.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▎ | 35789/42840 [00:31<00:05, 1223.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 35912/42840 [00:31<00:06, 1151.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 36051/42840 [00:31<00:05, 1212.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 36174/42840 [00:31<00:05, 1214.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▍ | 36309/42840 [00:32<00:05, 1251.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36436/42840 [00:32<00:05, 1211.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 36569/42840 [00:32<00:05, 1244.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36695/42840 [00:32<00:05, 1189.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36816/42840 [00:32<00:05, 1177.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 36936/42840 [00:32<00:04, 1181.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 37055/42840 [00:32<00:05, 1138.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37170/42840 [00:32<00:05, 1078.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37280/42840 [00:32<00:05, 1069.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 37388/42840 [00:33<00:05, 1062.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37506/42840 [00:33<00:04, 1094.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37617/42840 [00:33<00:04, 1073.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37738/42840 [00:33<00:04, 1104.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 37868/42840 [00:33<00:04, 1154.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 37985/42840 [00:33<00:04, 1147.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38101/42840 [00:33<00:04, 1101.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38213/42840 [00:33<00:04, 1060.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 38325/42840 [00:33<00:04, 1072.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|████████▉ | 38434/42840 [00:33<00:04, 1075.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38560/42840 [00:34<00:03, 1123.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 38674/42840 [00:34<00:03, 1094.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 38785/42840 [00:34<00:03, 1081.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 38919/42840 [00:34<00:03, 1146.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████ | 39043/42840 [00:34<00:03, 1164.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 91%|█████████▏| 39161/42840 [00:34<00:03, 1134.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39276/42840 [00:34<00:03, 1091.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39399/42840 [00:34<00:03, 1128.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39513/42840 [00:34<00:03, 1104.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 39625/42840 [00:35<00:02, 1099.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39736/42840 [00:35<00:02, 1055.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39843/42840 [00:35<00:02, 1031.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 39955/42840 [00:35<00:02, 1055.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▎| 40062/42840 [00:35<00:02, 1043.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40167/42840 [00:35<00:02, 1044.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40272/42840 [00:35<00:02, 1039.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40377/42840 [00:35<00:02, 981.58it/s] \u001b[A\u001b[A\n",
            "\n",
            " 94%|█████████▍| 40476/42840 [00:35<00:02, 886.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40567/42840 [00:36<00:02, 865.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 40656/42840 [00:36<00:02, 815.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40767/42840 [00:36<00:02, 885.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▌| 40859/42840 [00:36<00:02, 880.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 40950/42840 [00:36<00:02, 881.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41040/42840 [00:36<00:02, 853.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41127/42840 [00:36<00:02, 823.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▌| 41217/42840 [00:36<00:01, 841.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▋| 41310/42840 [00:36<00:01, 866.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41403/42840 [00:36<00:01, 884.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41493/42840 [00:37<00:01, 843.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41579/42840 [00:37<00:01, 761.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41658/42840 [00:37<00:01, 742.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 97%|█████████▋| 41734/42840 [00:37<00:01, 705.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41839/42840 [00:37<00:01, 780.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41921/42840 [00:37<00:01, 724.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 41997/42840 [00:37<00:01, 722.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42072/42840 [00:37<00:01, 697.45it/s]\u001b[A\u001b[A\n",
            "\n",
            " 98%|█████████▊| 42147/42840 [00:38<00:00, 712.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▊| 42228/42840 [00:38<00:00, 737.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42310/42840 [00:38<00:00, 754.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42387/42840 [00:38<00:00, 699.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42459/42840 [00:38<00:00, 671.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 99%|█████████▉| 42546/42840 [00:38<00:00, 716.94it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 42626/42840 [00:38<00:00, 738.98it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|█████████▉| 42702/42840 [00:38<00:00, 729.05it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 42840/42840 [00:38<00:00, 1100.56it/s]\n",
            "\n",
            "\n",
            "  0%|          | 0/1708 [00:00<?, ?it/s]\u001b[A\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42840 18618\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "\n",
            "  0%|          | 1/1708 [00:00<04:54,  5.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  0%|          | 5/1708 [00:00<03:52,  7.32it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 10/1708 [00:00<02:53,  9.78it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 12/1708 [00:00<04:02,  6.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 16/1708 [00:01<03:19,  8.49it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 19/1708 [00:01<02:38, 10.68it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|          | 21/1708 [00:01<02:24, 11.66it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 23/1708 [00:01<02:55,  9.59it/s]\u001b[A\u001b[A\n",
            "\n",
            "  1%|▏         | 25/1708 [00:01<02:49,  9.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 29/1708 [00:02<02:14, 12.49it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 31/1708 [00:02<02:55,  9.53it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 35/1708 [00:02<02:15, 12.34it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 38/1708 [00:02<02:04, 13.42it/s]\u001b[A\u001b[A\n",
            "\n",
            "  2%|▏         | 41/1708 [00:02<01:54, 14.50it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 43/1708 [00:03<02:09, 12.85it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 45/1708 [00:03<01:58, 14.04it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 47/1708 [00:03<02:42, 10.19it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 49/1708 [00:03<02:44, 10.09it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 51/1708 [00:03<02:27, 11.23it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 53/1708 [00:03<02:15, 12.21it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 55/1708 [00:04<03:24,  8.07it/s]\u001b[A\u001b[A\n",
            "\n",
            "  3%|▎         | 58/1708 [00:04<02:42, 10.15it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 61/1708 [00:04<02:12, 12.46it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▎         | 63/1708 [00:04<02:28, 11.09it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 65/1708 [00:04<02:16, 12.04it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 67/1708 [00:05<02:04, 13.15it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 71/1708 [00:05<01:42, 15.92it/s]\u001b[A\u001b[A\n",
            "\n",
            "  4%|▍         | 76/1708 [00:05<01:23, 19.54it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 79/1708 [00:05<02:01, 13.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▍         | 82/1708 [00:06<02:34, 10.54it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 88/1708 [00:06<02:02, 13.23it/s]\u001b[A\u001b[A\n",
            "\n",
            "  5%|▌         | 92/1708 [00:06<01:38, 16.43it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 95/1708 [00:06<02:02, 13.15it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 102/1708 [00:06<01:38, 16.24it/s]\u001b[A\u001b[A\n",
            "\n",
            "  6%|▌         | 106/1708 [00:07<01:41, 15.84it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 112/1708 [00:07<01:43, 15.47it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 117/1708 [00:07<01:22, 19.35it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 123/1708 [00:07<01:06, 23.99it/s]\u001b[A\u001b[A\n",
            "\n",
            "  7%|▋         | 127/1708 [00:08<01:10, 22.29it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 131/1708 [00:08<01:21, 19.40it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 136/1708 [00:08<01:07, 23.17it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 140/1708 [00:08<01:09, 22.52it/s]\u001b[A\u001b[A\n",
            "\n",
            "  8%|▊         | 144/1708 [00:08<01:01, 25.61it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▊         | 148/1708 [00:09<01:22, 18.97it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 151/1708 [00:09<01:34, 16.41it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 156/1708 [00:09<01:15, 20.43it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 159/1708 [00:09<01:18, 19.81it/s]\u001b[A\u001b[A\n",
            "\n",
            "  9%|▉         | 162/1708 [00:09<01:12, 21.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 165/1708 [00:09<01:11, 21.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|▉         | 168/1708 [00:09<01:12, 21.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 172/1708 [00:10<01:02, 24.43it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 175/1708 [00:10<02:43,  9.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 10%|█         | 179/1708 [00:11<02:11, 11.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 182/1708 [00:11<02:04, 12.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 185/1708 [00:11<01:54, 13.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 187/1708 [00:11<02:28, 10.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 189/1708 [00:12<02:55,  8.64it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█         | 191/1708 [00:12<02:27, 10.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 193/1708 [00:12<02:19, 10.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 11%|█▏        | 195/1708 [00:12<02:03, 12.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 197/1708 [00:12<02:55,  8.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 200/1708 [00:13<02:31,  9.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 202/1708 [00:13<02:13, 11.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 204/1708 [00:13<02:04, 12.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 206/1708 [00:13<01:50, 13.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 208/1708 [00:13<01:48, 13.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 12%|█▏        | 212/1708 [00:13<01:28, 16.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 215/1708 [00:13<01:30, 16.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 217/1708 [00:13<01:26, 17.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 220/1708 [00:14<01:22, 18.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 222/1708 [00:14<01:40, 14.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 224/1708 [00:14<01:36, 15.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 226/1708 [00:14<01:37, 15.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 13%|█▎        | 229/1708 [00:14<01:31, 16.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▎        | 233/1708 [00:14<01:16, 19.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 236/1708 [00:14<01:14, 19.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 241/1708 [00:15<01:03, 23.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 244/1708 [00:15<01:00, 24.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 14%|█▍        | 247/1708 [00:15<00:57, 25.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 252/1708 [00:15<00:54, 26.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▍        | 255/1708 [00:15<00:55, 26.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 259/1708 [00:15<01:05, 22.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 15%|█▌        | 262/1708 [00:15<01:03, 22.71it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 266/1708 [00:16<01:06, 21.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 269/1708 [00:16<01:50, 12.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 272/1708 [00:16<01:40, 14.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▌        | 275/1708 [00:16<01:27, 16.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 16%|█▋        | 278/1708 [00:17<01:28, 16.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 284/1708 [00:17<01:10, 20.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 287/1708 [00:17<01:19, 17.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 294/1708 [00:17<01:03, 22.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 17%|█▋        | 298/1708 [00:17<01:00, 23.40it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 302/1708 [00:17<00:56, 25.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 306/1708 [00:17<00:56, 24.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 309/1708 [00:18<01:11, 19.46it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 312/1708 [00:18<01:07, 20.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 18%|█▊        | 315/1708 [00:18<01:04, 21.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▊        | 318/1708 [00:18<01:10, 19.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 323/1708 [00:18<00:57, 23.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 327/1708 [00:19<01:09, 19.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 19%|█▉        | 330/1708 [00:19<01:18, 17.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 334/1708 [00:19<01:05, 21.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|█▉        | 338/1708 [00:19<00:56, 24.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 342/1708 [00:19<01:00, 22.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 345/1708 [00:19<00:57, 23.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 20%|██        | 349/1708 [00:20<01:07, 20.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 352/1708 [00:20<01:06, 20.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 356/1708 [00:20<01:01, 21.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 359/1708 [00:20<01:01, 22.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██        | 362/1708 [00:20<01:07, 20.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 21%|██▏       | 366/1708 [00:20<00:57, 23.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 369/1708 [00:20<00:53, 24.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 372/1708 [00:21<00:58, 22.87it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 376/1708 [00:21<00:51, 25.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 379/1708 [00:21<01:02, 21.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 22%|██▏       | 382/1708 [00:21<01:01, 21.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 386/1708 [00:21<00:59, 22.25it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 389/1708 [00:21<00:57, 23.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 392/1708 [00:22<01:15, 17.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 23%|██▎       | 398/1708 [00:22<01:03, 20.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▎       | 404/1708 [00:22<00:53, 24.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 408/1708 [00:22<01:12, 17.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 413/1708 [00:22<00:58, 22.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 24%|██▍       | 417/1708 [00:22<00:53, 24.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▍       | 422/1708 [00:23<00:46, 27.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 428/1708 [00:23<00:38, 33.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 25%|██▌       | 433/1708 [00:23<00:37, 33.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 438/1708 [00:23<00:35, 36.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 443/1708 [00:23<00:38, 32.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▌       | 447/1708 [00:23<00:36, 34.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 26%|██▋       | 451/1708 [00:23<00:41, 30.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 455/1708 [00:24<00:45, 27.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 459/1708 [00:24<00:43, 28.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 463/1708 [00:24<00:45, 27.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 27%|██▋       | 467/1708 [00:24<00:44, 27.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 470/1708 [00:24<00:53, 22.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 473/1708 [00:24<00:55, 22.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 476/1708 [00:24<00:57, 21.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 479/1708 [00:25<01:00, 20.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 482/1708 [00:25<00:58, 20.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 28%|██▊       | 486/1708 [00:25<00:58, 20.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▊       | 489/1708 [00:25<01:03, 19.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 494/1708 [00:25<00:54, 22.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 497/1708 [00:25<00:50, 23.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 29%|██▉       | 500/1708 [00:26<00:56, 21.50it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 504/1708 [00:26<01:00, 19.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 507/1708 [00:26<00:56, 21.29it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|██▉       | 510/1708 [00:26<01:07, 17.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 513/1708 [00:26<01:01, 19.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 516/1708 [00:26<01:02, 19.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 30%|███       | 519/1708 [00:27<01:13, 16.16it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 521/1708 [00:27<01:26, 13.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 525/1708 [00:27<01:10, 16.81it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███       | 531/1708 [00:27<00:56, 20.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 31%|███▏      | 538/1708 [00:27<00:44, 26.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 543/1708 [00:27<00:49, 23.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 548/1708 [00:28<00:43, 26.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 32%|███▏      | 552/1708 [00:28<00:46, 24.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 556/1708 [00:28<00:47, 24.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 561/1708 [00:28<00:39, 28.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 565/1708 [00:28<00:45, 25.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 33%|███▎      | 569/1708 [00:28<00:51, 21.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▎      | 573/1708 [00:29<00:46, 24.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 577/1708 [00:29<00:43, 26.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 583/1708 [00:29<00:36, 31.17it/s]\u001b[A\u001b[A\n",
            "\n",
            " 34%|███▍      | 587/1708 [00:29<00:35, 31.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 591/1708 [00:29<00:40, 27.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▍      | 595/1708 [00:29<00:39, 28.35it/s]\u001b[A\u001b[A\n",
            "\n",
            " 35%|███▌      | 603/1708 [00:29<00:31, 35.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 608/1708 [00:29<00:30, 36.60it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 613/1708 [00:30<00:40, 27.01it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▌      | 617/1708 [00:30<00:46, 23.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 36%|███▋      | 621/1708 [00:30<00:45, 23.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 626/1708 [00:30<00:39, 27.08it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 632/1708 [00:30<00:37, 28.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 636/1708 [00:31<00:49, 21.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 37%|███▋      | 639/1708 [00:31<00:47, 22.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 648/1708 [00:31<00:36, 29.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 38%|███▊      | 655/1708 [00:31<00:30, 34.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 39%|███▉      | 667/1708 [00:31<00:26, 39.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|███▉      | 677/1708 [00:31<00:21, 47.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 684/1708 [00:32<00:24, 41.56it/s]\u001b[A\u001b[A\n",
            "\n",
            " 40%|████      | 690/1708 [00:32<00:32, 31.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 695/1708 [00:32<00:31, 32.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████      | 702/1708 [00:32<00:26, 37.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 41%|████▏     | 707/1708 [00:32<00:33, 30.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 711/1708 [00:33<00:35, 27.95it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 715/1708 [00:33<00:41, 23.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 42%|████▏     | 722/1708 [00:33<00:35, 28.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 731/1708 [00:33<00:30, 31.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 735/1708 [00:33<00:36, 26.57it/s]\u001b[A\u001b[A\n",
            "\n",
            " 43%|████▎     | 739/1708 [00:34<00:36, 26.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▎     | 746/1708 [00:34<00:30, 32.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 754/1708 [00:34<00:24, 38.73it/s]\u001b[A\u001b[A\n",
            "\n",
            " 44%|████▍     | 760/1708 [00:34<00:22, 42.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▍     | 766/1708 [00:34<00:25, 36.41it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 771/1708 [00:34<00:34, 27.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 45%|████▌     | 775/1708 [00:35<00:35, 26.30it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 784/1708 [00:35<00:28, 31.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 46%|████▌     | 789/1708 [00:35<00:29, 30.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 795/1708 [00:35<00:27, 32.78it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 803/1708 [00:35<00:23, 39.02it/s]\u001b[A\u001b[A\n",
            "\n",
            " 47%|████▋     | 808/1708 [00:35<00:23, 38.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 813/1708 [00:35<00:25, 34.97it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 818/1708 [00:36<00:24, 36.19it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 822/1708 [00:36<00:32, 27.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 48%|████▊     | 827/1708 [00:36<00:27, 31.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 834/1708 [00:36<00:24, 36.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 839/1708 [00:36<00:32, 26.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 49%|████▉     | 843/1708 [00:36<00:30, 28.13it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 847/1708 [00:37<00:34, 25.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|████▉     | 851/1708 [00:37<00:31, 27.11it/s]\u001b[A\u001b[A\n",
            "\n",
            " 50%|█████     | 859/1708 [00:37<00:28, 30.26it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 864/1708 [00:37<00:25, 33.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 868/1708 [00:37<00:36, 22.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████     | 872/1708 [00:38<00:40, 20.69it/s]\u001b[A\u001b[A\n",
            "\n",
            " 51%|█████▏    | 878/1708 [00:38<00:34, 24.34it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 883/1708 [00:38<00:28, 28.47it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 887/1708 [00:38<00:31, 25.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 52%|█████▏    | 892/1708 [00:38<00:27, 29.99it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 899/1708 [00:38<00:22, 35.76it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 906/1708 [00:38<00:20, 39.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 53%|█████▎    | 912/1708 [00:39<00:19, 41.79it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▎    | 917/1708 [00:39<00:23, 33.55it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 922/1708 [00:39<00:29, 26.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 54%|█████▍    | 929/1708 [00:39<00:24, 32.10it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▍    | 936/1708 [00:39<00:20, 37.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 941/1708 [00:39<00:22, 34.21it/s]\u001b[A\u001b[A\n",
            "\n",
            " 55%|█████▌    | 946/1708 [00:40<00:21, 35.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 953/1708 [00:40<00:21, 34.82it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▌    | 957/1708 [00:40<00:23, 31.51it/s]\u001b[A\u001b[A\n",
            "\n",
            " 56%|█████▋    | 961/1708 [00:40<00:26, 28.36it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 968/1708 [00:40<00:21, 33.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 975/1708 [00:40<00:18, 39.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 57%|█████▋    | 980/1708 [00:40<00:17, 40.59it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 985/1708 [00:41<00:18, 39.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 994/1708 [00:41<00:15, 44.68it/s]\u001b[A\u001b[A\n",
            "\n",
            " 58%|█████▊    | 999/1708 [00:41<00:16, 43.48it/s]\u001b[A\u001b[A\n",
            "\n",
            " 59%|█████▉    | 1011/1708 [00:41<00:12, 53.72it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|█████▉    | 1018/1708 [00:41<00:12, 54.74it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1025/1708 [00:41<00:12, 53.61it/s]\u001b[A\u001b[A\n",
            "\n",
            " 60%|██████    | 1032/1708 [00:41<00:13, 49.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 61%|██████    | 1040/1708 [00:42<00:13, 50.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1051/1708 [00:42<00:11, 59.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1059/1708 [00:42<00:10, 59.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 62%|██████▏   | 1066/1708 [00:42<00:10, 59.77it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1074/1708 [00:42<00:10, 62.91it/s]\u001b[A\u001b[A\n",
            "\n",
            " 63%|██████▎   | 1081/1708 [00:42<00:10, 59.90it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▎   | 1088/1708 [00:42<00:10, 58.05it/s]\u001b[A\u001b[A\n",
            "\n",
            " 64%|██████▍   | 1097/1708 [00:42<00:09, 64.00it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▍   | 1107/1708 [00:43<00:09, 63.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 65%|██████▌   | 1114/1708 [00:43<00:09, 64.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1121/1708 [00:43<00:09, 63.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 66%|██████▌   | 1128/1708 [00:43<00:09, 58.15it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1139/1708 [00:43<00:08, 64.80it/s]\u001b[A\u001b[A\n",
            "\n",
            " 67%|██████▋   | 1148/1708 [00:43<00:08, 69.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1157/1708 [00:43<00:07, 73.89it/s]\u001b[A\u001b[A\n",
            "\n",
            " 68%|██████▊   | 1167/1708 [00:43<00:06, 77.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1176/1708 [00:43<00:07, 72.06it/s]\u001b[A\u001b[A\n",
            "\n",
            " 69%|██████▉   | 1185/1708 [00:44<00:06, 75.66it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|██████▉   | 1193/1708 [00:44<00:07, 73.52it/s]\u001b[A\u001b[A\n",
            "\n",
            " 70%|███████   | 1201/1708 [00:44<00:08, 58.49it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████   | 1208/1708 [00:44<00:11, 42.03it/s]\u001b[A\u001b[A\n",
            "\n",
            " 71%|███████▏  | 1217/1708 [00:44<00:11, 44.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1228/1708 [00:44<00:09, 52.12it/s]\u001b[A\u001b[A\n",
            "\n",
            " 72%|███████▏  | 1235/1708 [00:45<00:08, 53.62it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1243/1708 [00:45<00:07, 58.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 73%|███████▎  | 1254/1708 [00:45<00:06, 68.04it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1262/1708 [00:45<00:06, 64.18it/s]\u001b[A\u001b[A\n",
            "\n",
            " 74%|███████▍  | 1270/1708 [00:45<00:07, 59.83it/s]\u001b[A\u001b[A\n",
            "\n",
            " 75%|███████▌  | 1281/1708 [00:45<00:06, 65.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▌  | 1294/1708 [00:45<00:05, 76.98it/s]\u001b[A\u001b[A\n",
            "\n",
            " 76%|███████▋  | 1304/1708 [00:45<00:05, 73.85it/s]\u001b[A\u001b[A\n",
            "\n",
            " 77%|███████▋  | 1319/1708 [00:46<00:04, 86.65it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1330/1708 [00:46<00:05, 70.27it/s]\u001b[A\u001b[A\n",
            "\n",
            " 78%|███████▊  | 1339/1708 [00:46<00:11, 33.23it/s]\u001b[A\u001b[A\n",
            "\n",
            " 79%|███████▉  | 1350/1708 [00:47<00:08, 41.37it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|███████▉  | 1361/1708 [00:47<00:07, 48.86it/s]\u001b[A\u001b[A\n",
            "\n",
            " 80%|████████  | 1370/1708 [00:47<00:06, 55.31it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1378/1708 [00:47<00:06, 52.28it/s]\u001b[A\u001b[A\n",
            "\n",
            " 81%|████████  | 1385/1708 [00:47<00:06, 53.14it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1393/1708 [00:47<00:05, 57.33it/s]\u001b[A\u001b[A\n",
            "\n",
            " 82%|████████▏ | 1400/1708 [00:47<00:05, 57.39it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1413/1708 [00:47<00:04, 68.38it/s]\u001b[A\u001b[A\n",
            "\n",
            " 83%|████████▎ | 1422/1708 [00:48<00:03, 71.53it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1431/1708 [00:48<00:04, 66.63it/s]\u001b[A\u001b[A\n",
            "\n",
            " 84%|████████▍ | 1442/1708 [00:48<00:03, 74.93it/s]\u001b[A\u001b[A\n",
            "\n",
            " 85%|████████▌ | 1455/1708 [00:48<00:02, 85.22it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▌ | 1465/1708 [00:48<00:02, 85.24it/s]\u001b[A\u001b[A\n",
            "\n",
            " 86%|████████▋ | 1475/1708 [00:48<00:02, 86.32it/s]\u001b[A\u001b[A\n",
            "\n",
            " 87%|████████▋ | 1489/1708 [00:48<00:02, 95.42it/s]\u001b[A\u001b[A\n",
            "\n",
            " 88%|████████▊ | 1501/1708 [00:48<00:02, 98.92it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▊ | 1513/1708 [00:48<00:01, 101.75it/s]\u001b[A\u001b[A\n",
            "\n",
            " 89%|████████▉ | 1524/1708 [00:49<00:01, 103.70it/s]\u001b[A\u001b[A\n",
            "\n",
            " 90%|█████████ | 1545/1708 [00:49<00:01, 119.44it/s]\u001b[A\u001b[A\n",
            "\n",
            " 92%|█████████▏| 1563/1708 [00:49<00:01, 132.09it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1580/1708 [00:49<00:00, 139.58it/s]\u001b[A\u001b[A\n",
            "\n",
            " 93%|█████████▎| 1595/1708 [00:49<00:00, 132.94it/s]\u001b[A\u001b[A\n",
            "\n",
            " 95%|█████████▍| 1622/1708 [00:49<00:00, 156.54it/s]\u001b[A\u001b[A\n",
            "\n",
            " 96%|█████████▋| 1647/1708 [00:49<00:00, 175.27it/s]\u001b[A\u001b[A\n",
            "\n",
            "100%|██████████| 1708/1708 [00:49<00:00, 34.26it/s] \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "423100\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kK1MCFuxDIpW",
        "colab_type": "code",
        "outputId": "7c7320ce-2054-4def-cc8f-d186e29c8ffd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "# bi-graph\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "\n",
        "recom_item = []\n",
        "whole_click = pd.DataFrame()\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_q_time = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "\n",
        "    # 出现在该阶段的商品\n",
        "    phase_item_ids = set(all_click['item_id'].unique()) \n",
        "\n",
        "    pred_user_time_dict = dict(zip(click_q_time['user_id'], click_q_time['time']))\n",
        "    phase_whole_click = pd.DataFrame()\n",
        "\n",
        "    def group_apply_func(group_df):\n",
        "      u = group_df['user_id'].iloc[0]\n",
        "      if u in pred_user_time_dict:\n",
        "         u_time = pred_user_time_dict[u]\n",
        "         group_df = group_df[group_df['time'] < u_time]\n",
        "      return group_df\n",
        "\n",
        "    phase_whole_click = whole_click.groupby('user_id', group_keys=False).apply(group_apply_func)\n",
        "    print(phase_whole_click.head())\n",
        "    print('group done')\n",
        "\n",
        "    # 过滤掉不在该阶段的商品\n",
        "    phase_whole_click = phase_whole_click[phase_whole_click['item_id'].isin(phase_item_ids)]\n",
        "\n",
        "    user_item_dict = get_user_item_time_dict(all_click, )\n",
        "    item_sim_list, _ = get_bi_sim_item(phase_whole_click, 'user_id', 'item_id')\n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    recom_item_phase = []\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_q_time['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 100)\n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, 0.0)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item_phase.append([i, j[0], j[1], c])\n",
        "    recom_item.extend(recom_item_phase)\n",
        "\n",
        "    recom_item_phase_df = pd.DataFrame(recom_item_phase, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "    recom_item_phase_df[recom_item_phase_df['sim']>0].to_csv(output_path + '/baseline_bi_graph_origin_v7_phase_{}_filter.csv'.format(c), index=False, header=None)\n",
        "    recom_item_phase_df[recom_item_phase_df['sim']>0].to_csv(drive_output_path + '/baseline_bi_graph_origin_v7_phase_{}_filter.csv'.format(c), index=False, header=None)\n",
        "    \n",
        "    del click_train, click_test, recom_item_phase, recom_item_phase_df, phase_whole_click, item_sim_list\n",
        "    gc.collect()\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim', 'phase'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_bi_graph_origin_v7_filter.csv', index=False, header=None)\n",
        "recom_df[recom_df['sim']>0].to_csv(drive_output_path + '/baseline_bi_graph_origin_v7_filter.csv', index=False, header=None)\n",
        "\n",
        "\n",
        "result = get_predict(recom_df, 'sim', top50_click)\n",
        "result.to_csv(output_path + '/baseline_bi_graph_v7_filter.csv', index=False, header=None)\n",
        "result.to_csv(drive_output_path + '/baseline_bi_graph_v7_filter.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\n",
            " 80%|███████▉  | 34214/42840 [05:14<01:09, 123.93it/s]\u001b[A\n",
            " 80%|███████▉  | 34238/42840 [05:14<00:59, 143.88it/s]\u001b[A\n",
            " 80%|███████▉  | 34255/42840 [05:14<01:00, 142.68it/s]\u001b[A\n",
            " 80%|███████▉  | 34271/42840 [05:14<00:59, 143.92it/s]\u001b[A\n",
            " 80%|████████  | 34287/42840 [05:14<00:59, 144.63it/s]\u001b[A\n",
            " 80%|████████  | 34303/42840 [05:15<01:14, 114.93it/s]\u001b[A\n",
            " 80%|████████  | 34316/42840 [05:15<01:14, 113.70it/s]\u001b[A\n",
            " 80%|████████  | 34329/42840 [05:15<01:22, 103.60it/s]\u001b[A\n",
            " 80%|████████  | 34341/42840 [05:15<01:26, 98.05it/s] \u001b[A\n",
            " 80%|████████  | 34354/42840 [05:15<01:23, 102.09it/s]\u001b[A\n",
            " 80%|████████  | 34365/42840 [05:15<01:29, 94.66it/s] \u001b[A\n",
            " 80%|████████  | 34375/42840 [05:15<01:50, 76.47it/s]\u001b[A\n",
            " 80%|████████  | 34387/42840 [05:16<01:43, 82.00it/s]\u001b[A\n",
            " 80%|████████  | 34399/42840 [05:16<01:33, 90.42it/s]\u001b[A\n",
            " 80%|████████  | 34411/42840 [05:16<01:27, 96.62it/s]\u001b[A\n",
            " 80%|████████  | 34422/42840 [05:16<01:27, 96.20it/s]\u001b[A\n",
            " 80%|████████  | 34433/42840 [05:16<01:27, 96.01it/s]\u001b[A\n",
            " 80%|████████  | 34450/42840 [05:16<01:17, 107.96it/s]\u001b[A\n",
            " 80%|████████  | 34464/42840 [05:16<01:13, 114.09it/s]\u001b[A\n",
            " 80%|████████  | 34477/42840 [05:16<01:10, 118.01it/s]\u001b[A\n",
            " 81%|████████  | 34493/42840 [05:16<01:05, 127.55it/s]\u001b[A\n",
            " 81%|████████  | 34507/42840 [05:17<01:04, 129.50it/s]\u001b[A\n",
            " 81%|████████  | 34521/42840 [05:17<01:14, 111.61it/s]\u001b[A\n",
            " 81%|████████  | 34534/42840 [05:17<01:12, 114.87it/s]\u001b[A\n",
            " 81%|████████  | 34550/42840 [05:17<01:07, 123.16it/s]\u001b[A\n",
            " 81%|████████  | 34567/42840 [05:17<01:02, 132.27it/s]\u001b[A\n",
            " 81%|████████  | 34581/42840 [05:17<01:14, 110.89it/s]\u001b[A\n",
            " 81%|████████  | 34601/42840 [05:17<01:04, 127.30it/s]\u001b[A\n",
            " 81%|████████  | 34616/42840 [05:17<01:03, 129.86it/s]\u001b[A\n",
            " 81%|████████  | 34631/42840 [05:18<01:02, 132.05it/s]\u001b[A\n",
            " 81%|████████  | 34645/42840 [05:18<01:04, 128.03it/s]\u001b[A\n",
            " 81%|████████  | 34659/42840 [05:18<01:08, 118.99it/s]\u001b[A\n",
            " 81%|████████  | 34672/42840 [05:18<01:10, 115.48it/s]\u001b[A\n",
            " 81%|████████  | 34688/42840 [05:18<01:04, 125.96it/s]\u001b[A\n",
            " 81%|████████  | 34702/42840 [05:18<01:16, 106.90it/s]\u001b[A\n",
            " 81%|████████  | 34719/42840 [05:18<01:07, 120.27it/s]\u001b[A\n",
            " 81%|████████  | 34733/42840 [05:18<01:09, 116.19it/s]\u001b[A\n",
            " 81%|████████  | 34747/42840 [05:19<01:08, 118.24it/s]\u001b[A\n",
            " 81%|████████  | 34762/42840 [05:19<01:05, 124.11it/s]\u001b[A\n",
            " 81%|████████  | 34776/42840 [05:19<01:06, 121.58it/s]\u001b[A\n",
            " 81%|████████  | 34794/42840 [05:19<01:00, 132.64it/s]\u001b[A\n",
            " 81%|████████▏ | 34809/42840 [05:19<00:58, 136.66it/s]\u001b[A\n",
            " 81%|████████▏ | 34824/42840 [05:19<01:03, 125.93it/s]\u001b[A\n",
            " 81%|████████▏ | 34839/42840 [05:19<01:00, 131.68it/s]\u001b[A\n",
            " 81%|████████▏ | 34853/42840 [05:19<01:03, 125.49it/s]\u001b[A\n",
            " 81%|████████▏ | 34866/42840 [05:19<01:12, 109.91it/s]\u001b[A\n",
            " 81%|████████▏ | 34878/42840 [05:20<01:11, 111.42it/s]\u001b[A\n",
            " 81%|████████▏ | 34890/42840 [05:20<01:17, 103.07it/s]\u001b[A\n",
            " 81%|████████▏ | 34905/42840 [05:20<01:10, 113.07it/s]\u001b[A\n",
            " 82%|████████▏ | 34917/42840 [05:20<01:12, 110.03it/s]\u001b[A\n",
            " 82%|████████▏ | 34929/42840 [05:20<01:10, 112.65it/s]\u001b[A\n",
            " 82%|████████▏ | 34951/42840 [05:20<01:00, 130.66it/s]\u001b[A\n",
            " 82%|████████▏ | 34971/42840 [05:20<00:54, 145.09it/s]\u001b[A\n",
            " 82%|████████▏ | 34987/42840 [05:20<00:58, 134.24it/s]\u001b[A\n",
            " 82%|████████▏ | 35005/42840 [05:20<00:54, 144.75it/s]\u001b[A\n",
            " 82%|████████▏ | 35021/42840 [05:21<01:01, 127.52it/s]\u001b[A\n",
            " 82%|████████▏ | 35035/42840 [05:21<01:02, 125.29it/s]\u001b[A\n",
            " 82%|████████▏ | 35050/42840 [05:21<00:59, 130.26it/s]\u001b[A\n",
            " 82%|████████▏ | 35072/42840 [05:21<00:53, 144.77it/s]\u001b[A\n",
            " 82%|████████▏ | 35094/42840 [05:21<00:48, 161.27it/s]\u001b[A\n",
            " 82%|████████▏ | 35112/42840 [05:21<00:48, 159.12it/s]\u001b[A\n",
            " 82%|████████▏ | 35129/42840 [05:21<01:14, 103.58it/s]\u001b[A\n",
            " 82%|████████▏ | 35145/42840 [05:22<01:07, 114.25it/s]\u001b[A\n",
            " 82%|████████▏ | 35159/42840 [05:22<01:12, 106.49it/s]\u001b[A\n",
            " 82%|████████▏ | 35178/42840 [05:22<01:03, 120.21it/s]\u001b[A\n",
            " 82%|████████▏ | 35192/42840 [05:22<01:02, 122.44it/s]\u001b[A\n",
            " 82%|████████▏ | 35206/42840 [05:22<01:10, 108.75it/s]\u001b[A\n",
            " 82%|████████▏ | 35221/42840 [05:22<01:04, 118.19it/s]\u001b[A\n",
            " 82%|████████▏ | 35234/42840 [05:22<01:04, 118.74it/s]\u001b[A\n",
            " 82%|████████▏ | 35248/42840 [05:22<01:01, 123.17it/s]\u001b[A\n",
            " 82%|████████▏ | 35263/42840 [05:23<00:58, 129.14it/s]\u001b[A\n",
            " 82%|████████▏ | 35277/42840 [05:23<00:58, 128.31it/s]\u001b[A\n",
            " 82%|████████▏ | 35291/42840 [05:23<01:01, 123.74it/s]\u001b[A\n",
            " 82%|████████▏ | 35305/42840 [05:23<00:59, 125.95it/s]\u001b[A\n",
            " 82%|████████▏ | 35324/42840 [05:23<00:53, 140.02it/s]\u001b[A\n",
            " 82%|████████▏ | 35340/42840 [05:23<00:51, 145.35it/s]\u001b[A\n",
            " 83%|████████▎ | 35356/42840 [05:23<00:58, 127.61it/s]\u001b[A\n",
            " 83%|████████▎ | 35370/42840 [05:23<00:58, 126.91it/s]\u001b[A\n",
            " 83%|████████▎ | 35384/42840 [05:24<01:09, 107.40it/s]\u001b[A\n",
            " 83%|████████▎ | 35396/42840 [05:24<01:25, 87.34it/s] \u001b[A\n",
            " 83%|████████▎ | 35409/42840 [05:24<01:17, 95.61it/s]\u001b[A\n",
            " 83%|████████▎ | 35420/42840 [05:24<01:17, 95.64it/s]\u001b[A\n",
            " 83%|████████▎ | 35438/42840 [05:24<01:06, 110.82it/s]\u001b[A\n",
            " 83%|████████▎ | 35452/42840 [05:24<01:02, 118.11it/s]\u001b[A\n",
            " 83%|████████▎ | 35471/42840 [05:24<00:55, 132.47it/s]\u001b[A\n",
            " 83%|████████▎ | 35486/42840 [05:24<00:55, 133.26it/s]\u001b[A\n",
            " 83%|████████▎ | 35501/42840 [05:25<01:00, 121.83it/s]\u001b[A\n",
            " 83%|████████▎ | 35518/42840 [05:25<00:55, 132.38it/s]\u001b[A\n",
            " 83%|████████▎ | 35533/42840 [05:25<00:57, 128.12it/s]\u001b[A\n",
            " 83%|████████▎ | 35547/42840 [05:25<00:55, 131.29it/s]\u001b[A\n",
            " 83%|████████▎ | 35561/42840 [05:25<00:57, 126.74it/s]\u001b[A\n",
            " 83%|████████▎ | 35576/42840 [05:25<00:55, 131.34it/s]\u001b[A\n",
            " 83%|████████▎ | 35590/42840 [05:25<00:56, 129.44it/s]\u001b[A\n",
            " 83%|████████▎ | 35606/42840 [05:25<00:53, 135.58it/s]\u001b[A\n",
            " 83%|████████▎ | 35625/42840 [05:25<00:48, 148.26it/s]\u001b[A\n",
            " 83%|████████▎ | 35644/42840 [05:25<00:45, 156.64it/s]\u001b[A\n",
            " 83%|████████▎ | 35661/42840 [05:26<00:52, 137.67it/s]\u001b[A\n",
            " 83%|████████▎ | 35676/42840 [05:26<01:00, 118.62it/s]\u001b[A\n",
            " 83%|████████▎ | 35689/42840 [05:26<01:09, 102.61it/s]\u001b[A\n",
            " 83%|████████▎ | 35701/42840 [05:26<01:17, 92.41it/s] \u001b[A\n",
            " 83%|████████▎ | 35718/42840 [05:26<01:07, 105.90it/s]\u001b[A\n",
            " 83%|████████▎ | 35735/42840 [05:26<01:02, 113.31it/s]\u001b[A\n",
            " 83%|████████▎ | 35753/42840 [05:26<00:58, 120.59it/s]\u001b[A\n",
            " 83%|████████▎ | 35766/42840 [05:27<00:57, 123.11it/s]\u001b[A\n",
            " 84%|████████▎ | 35779/42840 [05:27<00:58, 120.24it/s]\u001b[A\n",
            " 84%|████████▎ | 35792/42840 [05:27<01:08, 103.53it/s]\u001b[A\n",
            " 84%|████████▎ | 35804/42840 [05:27<01:10, 99.87it/s] \u001b[A\n",
            " 84%|████████▎ | 35818/42840 [05:27<01:04, 108.61it/s]\u001b[A\n",
            " 84%|████████▎ | 35830/42840 [05:27<01:06, 105.28it/s]\u001b[A\n",
            " 84%|████████▎ | 35841/42840 [05:27<01:11, 98.36it/s] \u001b[A\n",
            " 84%|████████▎ | 35854/42840 [05:27<01:08, 102.56it/s]\u001b[A\n",
            " 84%|████████▎ | 35865/42840 [05:28<01:06, 104.52it/s]\u001b[A\n",
            " 84%|████████▍ | 35882/42840 [05:28<00:59, 117.49it/s]\u001b[A\n",
            " 84%|████████▍ | 35895/42840 [05:28<01:13, 94.07it/s] \u001b[A\n",
            " 84%|████████▍ | 35906/42840 [05:28<01:15, 91.98it/s]\u001b[A\n",
            " 84%|████████▍ | 35923/42840 [05:28<01:05, 105.36it/s]\u001b[A\n",
            " 84%|████████▍ | 35938/42840 [05:28<01:00, 113.31it/s]\u001b[A\n",
            " 84%|████████▍ | 35951/42840 [05:28<01:00, 114.16it/s]\u001b[A\n",
            " 84%|████████▍ | 35964/42840 [05:28<00:58, 117.68it/s]\u001b[A\n",
            " 84%|████████▍ | 35981/42840 [05:29<00:53, 129.16it/s]\u001b[A\n",
            " 84%|████████▍ | 35995/42840 [05:29<00:56, 122.19it/s]\u001b[A\n",
            " 84%|████████▍ | 36008/42840 [05:29<00:56, 120.53it/s]\u001b[A\n",
            " 84%|████████▍ | 36024/42840 [05:29<00:52, 129.48it/s]\u001b[A\n",
            " 84%|████████▍ | 36038/42840 [05:29<00:53, 126.76it/s]\u001b[A\n",
            " 84%|████████▍ | 36052/42840 [05:29<00:53, 126.09it/s]\u001b[A\n",
            " 84%|████████▍ | 36069/42840 [05:29<00:50, 135.04it/s]\u001b[A\n",
            " 84%|████████▍ | 36083/42840 [05:29<00:51, 131.31it/s]\u001b[A\n",
            " 84%|████████▍ | 36097/42840 [05:29<00:52, 128.36it/s]\u001b[A\n",
            " 84%|████████▍ | 36111/42840 [05:30<00:56, 119.14it/s]\u001b[A\n",
            " 84%|████████▍ | 36124/42840 [05:30<00:55, 120.90it/s]\u001b[A\n",
            " 84%|████████▍ | 36137/42840 [05:30<01:00, 109.92it/s]\u001b[A\n",
            " 84%|████████▍ | 36149/42840 [05:30<01:02, 107.68it/s]\u001b[A\n",
            " 84%|████████▍ | 36161/42840 [05:30<01:00, 110.41it/s]\u001b[A\n",
            " 84%|████████▍ | 36173/42840 [05:30<01:08, 97.82it/s] \u001b[A\n",
            " 84%|████████▍ | 36185/42840 [05:30<01:06, 99.66it/s]\u001b[A\n",
            " 85%|████████▍ | 36202/42840 [05:30<00:59, 112.20it/s]\u001b[A\n",
            " 85%|████████▍ | 36215/42840 [05:31<00:57, 115.17it/s]\u001b[A\n",
            " 85%|████████▍ | 36228/42840 [05:31<00:58, 113.16it/s]\u001b[A\n",
            " 85%|████████▍ | 36240/42840 [05:31<00:57, 115.09it/s]\u001b[A\n",
            " 85%|████████▍ | 36252/42840 [05:31<00:56, 116.05it/s]\u001b[A\n",
            " 85%|████████▍ | 36270/42840 [05:31<00:51, 128.24it/s]\u001b[A\n",
            " 85%|████████▍ | 36284/42840 [05:31<00:49, 131.31it/s]\u001b[A\n",
            " 85%|████████▍ | 36299/42840 [05:31<00:57, 113.28it/s]\u001b[A\n",
            " 85%|████████▍ | 36316/42840 [05:31<00:53, 121.43it/s]\u001b[A\n",
            " 85%|████████▍ | 36336/42840 [05:31<00:49, 131.78it/s]\u001b[A\n",
            " 85%|████████▍ | 36350/42840 [05:32<00:55, 117.73it/s]\u001b[A\n",
            " 85%|████████▍ | 36363/42840 [05:32<00:57, 113.07it/s]\u001b[A\n",
            " 85%|████████▍ | 36375/42840 [05:32<01:05, 98.68it/s] \u001b[A\n",
            " 85%|████████▍ | 36388/42840 [05:32<01:01, 105.01it/s]\u001b[A\n",
            " 85%|████████▍ | 36408/42840 [05:32<00:52, 122.27it/s]\u001b[A\n",
            " 85%|████████▌ | 36424/42840 [05:32<00:50, 127.82it/s]\u001b[A\n",
            " 85%|████████▌ | 36438/42840 [05:32<00:53, 119.34it/s]\u001b[A\n",
            " 85%|████████▌ | 36451/42840 [05:32<00:52, 122.27it/s]\u001b[A\n",
            " 85%|████████▌ | 36464/42840 [05:33<00:53, 118.96it/s]\u001b[A\n",
            " 85%|████████▌ | 36477/42840 [05:33<00:52, 120.10it/s]\u001b[A\n",
            " 85%|████████▌ | 36491/42840 [05:33<00:53, 119.58it/s]\u001b[A\n",
            " 85%|████████▌ | 36505/42840 [05:33<00:51, 123.28it/s]\u001b[A\n",
            " 85%|████████▌ | 36521/42840 [05:33<00:50, 124.79it/s]\u001b[A\n",
            " 85%|████████▌ | 36536/42840 [05:33<00:48, 131.00it/s]\u001b[A\n",
            " 85%|████████▌ | 36550/42840 [05:33<00:57, 108.64it/s]\u001b[A\n",
            " 85%|████████▌ | 36566/42840 [05:33<00:53, 118.12it/s]\u001b[A\n",
            " 85%|████████▌ | 36579/42840 [05:34<00:51, 120.90it/s]\u001b[A\n",
            " 85%|████████▌ | 36592/42840 [05:34<01:07, 93.13it/s] \u001b[A\n",
            " 85%|████████▌ | 36610/42840 [05:34<00:58, 107.10it/s]\u001b[A\n",
            " 85%|████████▌ | 36624/42840 [05:34<00:54, 114.10it/s]\u001b[A\n",
            " 86%|████████▌ | 36639/42840 [05:34<00:50, 121.65it/s]\u001b[A\n",
            " 86%|████████▌ | 36653/42840 [05:34<01:01, 100.15it/s]\u001b[A\n",
            " 86%|████████▌ | 36665/42840 [05:34<00:59, 103.09it/s]\u001b[A\n",
            " 86%|████████▌ | 36677/42840 [05:35<01:07, 90.84it/s] \u001b[A\n",
            " 86%|████████▌ | 36688/42840 [05:35<01:07, 90.73it/s]\u001b[A\n",
            " 86%|████████▌ | 36699/42840 [05:35<01:05, 93.32it/s]\u001b[A\n",
            " 86%|████████▌ | 36718/42840 [05:35<00:56, 108.52it/s]\u001b[A\n",
            " 86%|████████▌ | 36731/42840 [05:35<00:57, 106.37it/s]\u001b[A\n",
            " 86%|████████▌ | 36743/42840 [05:35<00:56, 108.20it/s]\u001b[A\n",
            " 86%|████████▌ | 36757/42840 [05:35<00:53, 113.79it/s]\u001b[A\n",
            " 86%|████████▌ | 36772/42840 [05:35<00:49, 122.63it/s]\u001b[A\n",
            " 86%|████████▌ | 36786/42840 [05:35<00:48, 123.92it/s]\u001b[A\n",
            " 86%|████████▌ | 36804/42840 [05:36<00:44, 136.67it/s]\u001b[A\n",
            " 86%|████████▌ | 36819/42840 [05:36<00:58, 103.80it/s]\u001b[A\n",
            " 86%|████████▌ | 36832/42840 [05:36<01:16, 79.04it/s] \u001b[A\n",
            " 86%|████████▌ | 36844/42840 [05:36<01:08, 87.54it/s]\u001b[A\n",
            " 86%|████████▌ | 36860/42840 [05:36<01:00, 99.29it/s]\u001b[A\n",
            " 86%|████████▌ | 36872/42840 [05:36<00:57, 103.65it/s]\u001b[A\n",
            " 86%|████████▌ | 36885/42840 [05:36<00:54, 108.78it/s]\u001b[A\n",
            " 86%|████████▌ | 36904/42840 [05:37<00:47, 123.72it/s]\u001b[A\n",
            " 86%|████████▌ | 36918/42840 [05:37<00:47, 123.69it/s]\u001b[A\n",
            " 86%|████████▌ | 36932/42840 [05:37<00:53, 110.91it/s]\u001b[A\n",
            " 86%|████████▋ | 36950/42840 [05:37<00:47, 123.01it/s]\u001b[A\n",
            " 86%|████████▋ | 36964/42840 [05:37<00:51, 114.02it/s]\u001b[A\n",
            " 86%|████████▋ | 36977/42840 [05:37<00:52, 112.03it/s]\u001b[A\n",
            " 86%|████████▋ | 36989/42840 [05:37<00:54, 107.41it/s]\u001b[A\n",
            " 86%|████████▋ | 37001/42840 [05:37<00:53, 110.02it/s]\u001b[A\n",
            " 86%|████████▋ | 37015/42840 [05:38<00:51, 114.10it/s]\u001b[A\n",
            " 86%|████████▋ | 37030/42840 [05:38<00:48, 120.23it/s]\u001b[A\n",
            " 86%|████████▋ | 37043/42840 [05:38<00:49, 117.79it/s]\u001b[A\n",
            " 86%|████████▋ | 37055/42840 [05:38<00:55, 103.74it/s]\u001b[A\n",
            " 87%|████████▋ | 37066/42840 [05:38<00:58, 98.84it/s] \u001b[A\n",
            " 87%|████████▋ | 37077/42840 [05:38<01:21, 70.74it/s]\u001b[A\n",
            " 87%|████████▋ | 37086/42840 [05:38<01:16, 74.85it/s]\u001b[A\n",
            " 87%|████████▋ | 37097/42840 [05:38<01:09, 82.47it/s]\u001b[A\n",
            " 87%|████████▋ | 37108/42840 [05:39<01:04, 88.88it/s]\u001b[A\n",
            " 87%|████████▋ | 37119/42840 [05:39<01:01, 93.23it/s]\u001b[A\n",
            " 87%|████████▋ | 37136/42840 [05:39<00:53, 107.45it/s]\u001b[A\n",
            " 87%|████████▋ | 37148/42840 [05:39<01:08, 83.36it/s] \u001b[A\n",
            " 87%|████████▋ | 37169/42840 [05:39<00:56, 101.00it/s]\u001b[A\n",
            " 87%|████████▋ | 37182/42840 [05:39<00:53, 106.23it/s]\u001b[A\n",
            " 87%|████████▋ | 37197/42840 [05:39<00:50, 112.71it/s]\u001b[A\n",
            " 87%|████████▋ | 37210/42840 [05:39<00:51, 110.37it/s]\u001b[A\n",
            " 87%|████████▋ | 37223/42840 [05:40<00:56, 99.71it/s] \u001b[A\n",
            " 87%|████████▋ | 37235/42840 [05:40<00:54, 102.60it/s]\u001b[A\n",
            " 87%|████████▋ | 37246/42840 [05:40<00:54, 103.12it/s]\u001b[A\n",
            " 87%|████████▋ | 37258/42840 [05:40<00:52, 106.18it/s]\u001b[A\n",
            " 87%|████████▋ | 37270/42840 [05:40<00:53, 104.52it/s]\u001b[A\n",
            " 87%|████████▋ | 37281/42840 [05:40<00:57, 97.25it/s] \u001b[A\n",
            " 87%|████████▋ | 37294/42840 [05:40<00:54, 102.08it/s]\u001b[A\n",
            " 87%|████████▋ | 37305/42840 [05:40<00:54, 101.53it/s]\u001b[A\n",
            " 87%|████████▋ | 37318/42840 [05:41<00:52, 105.35it/s]\u001b[A\n",
            " 87%|████████▋ | 37331/42840 [05:41<00:50, 108.47it/s]\u001b[A\n",
            " 87%|████████▋ | 37342/42840 [05:41<00:54, 100.39it/s]\u001b[A\n",
            " 87%|████████▋ | 37353/42840 [05:41<01:01, 89.39it/s] \u001b[A\n",
            " 87%|████████▋ | 37363/42840 [05:41<01:00, 90.54it/s]\u001b[A\n",
            " 87%|████████▋ | 37373/42840 [05:41<00:58, 93.04it/s]\u001b[A\n",
            " 87%|████████▋ | 37387/42840 [05:41<00:53, 102.39it/s]\u001b[A\n",
            " 87%|████████▋ | 37398/42840 [05:41<00:56, 96.01it/s] \u001b[A\n",
            " 87%|████████▋ | 37408/42840 [05:41<00:58, 93.53it/s]\u001b[A\n",
            " 87%|████████▋ | 37418/42840 [05:42<01:00, 89.17it/s]\u001b[A\n",
            " 87%|████████▋ | 37431/42840 [05:42<00:59, 90.47it/s]\u001b[A\n",
            " 87%|████████▋ | 37448/42840 [05:42<00:51, 104.77it/s]\u001b[A\n",
            " 87%|████████▋ | 37460/42840 [05:42<00:50, 106.41it/s]\u001b[A\n",
            " 87%|████████▋ | 37472/42840 [05:42<00:50, 106.34it/s]\u001b[A\n",
            " 87%|████████▋ | 37484/42840 [05:42<00:48, 109.40it/s]\u001b[A\n",
            " 88%|████████▊ | 37496/42840 [05:42<00:54, 98.75it/s] \u001b[A\n",
            " 88%|████████▊ | 37507/42840 [05:42<00:53, 99.56it/s]\u001b[A\n",
            " 88%|████████▊ | 37520/42840 [05:43<00:50, 106.35it/s]\u001b[A\n",
            " 88%|████████▊ | 37540/42840 [05:43<00:42, 123.58it/s]\u001b[A\n",
            " 88%|████████▊ | 37554/42840 [05:43<00:47, 110.74it/s]\u001b[A\n",
            " 88%|████████▊ | 37567/42840 [05:43<00:51, 102.22it/s]\u001b[A\n",
            " 88%|████████▊ | 37583/42840 [05:43<00:46, 111.92it/s]\u001b[A\n",
            " 88%|████████▊ | 37596/42840 [05:43<00:48, 108.69it/s]\u001b[A\n",
            " 88%|████████▊ | 37621/42840 [05:43<00:46, 113.45it/s]\u001b[A\n",
            " 88%|████████▊ | 37640/42840 [05:43<00:40, 128.84it/s]\u001b[A\n",
            " 88%|████████▊ | 37654/42840 [05:44<00:41, 125.80it/s]\u001b[A\n",
            " 88%|████████▊ | 37668/42840 [05:44<00:41, 125.51it/s]\u001b[A\n",
            " 88%|████████▊ | 37682/42840 [05:44<00:46, 111.64it/s]\u001b[A\n",
            " 88%|████████▊ | 37694/42840 [05:44<01:03, 81.11it/s] \u001b[A\n",
            " 88%|████████▊ | 37713/42840 [05:44<00:52, 97.16it/s]\u001b[A\n",
            " 88%|████████▊ | 37726/42840 [05:44<00:50, 101.43it/s]\u001b[A\n",
            " 88%|████████▊ | 37738/42840 [05:44<00:48, 105.09it/s]\u001b[A\n",
            " 88%|████████▊ | 37750/42840 [05:45<00:48, 105.55it/s]\u001b[A\n",
            " 88%|████████▊ | 37771/42840 [05:45<00:40, 123.64it/s]\u001b[A\n",
            " 88%|████████▊ | 37786/42840 [05:45<00:42, 118.93it/s]\u001b[A\n",
            " 88%|████████▊ | 37800/42840 [05:45<00:41, 121.00it/s]\u001b[A\n",
            " 88%|████████▊ | 37815/42840 [05:45<00:40, 125.44it/s]\u001b[A\n",
            " 88%|████████▊ | 37829/42840 [05:45<00:40, 124.84it/s]\u001b[A\n",
            " 88%|████████▊ | 37842/42840 [05:45<00:42, 116.59it/s]\u001b[A\n",
            " 88%|████████▊ | 37855/42840 [05:45<00:43, 114.19it/s]\u001b[A\n",
            " 88%|████████▊ | 37868/42840 [05:45<00:42, 117.99it/s]\u001b[A\n",
            " 88%|████████▊ | 37882/42840 [05:46<00:40, 121.56it/s]\u001b[A\n",
            " 88%|████████▊ | 37895/42840 [05:46<00:49, 99.09it/s] \u001b[A\n",
            " 88%|████████▊ | 37906/42840 [05:46<00:49, 99.40it/s]\u001b[A\n",
            " 89%|████████▊ | 37924/42840 [05:46<00:43, 113.01it/s]\u001b[A\n",
            " 89%|████████▊ | 37937/42840 [05:46<00:48, 101.33it/s]\u001b[A\n",
            " 89%|████████▊ | 37956/42840 [05:46<00:41, 117.77it/s]\u001b[A\n",
            " 89%|████████▊ | 37970/42840 [05:46<00:40, 119.65it/s]\u001b[A\n",
            " 89%|████████▊ | 37984/42840 [05:46<00:42, 113.70it/s]\u001b[A\n",
            " 89%|████████▊ | 37997/42840 [05:47<00:41, 116.82it/s]\u001b[A\n",
            " 89%|████████▊ | 38013/42840 [05:47<00:37, 127.09it/s]\u001b[A\n",
            " 89%|████████▉ | 38027/42840 [05:47<00:42, 113.16it/s]\u001b[A\n",
            " 89%|████████▉ | 38040/42840 [05:47<00:43, 111.30it/s]\u001b[A\n",
            " 89%|████████▉ | 38052/42840 [05:47<00:42, 111.60it/s]\u001b[A\n",
            " 89%|████████▉ | 38064/42840 [05:47<00:50, 95.01it/s] \u001b[A\n",
            " 89%|████████▉ | 38075/42840 [05:47<00:52, 91.46it/s]\u001b[A\n",
            " 89%|████████▉ | 38085/42840 [05:48<01:02, 75.64it/s]\u001b[A\n",
            " 89%|████████▉ | 38095/42840 [05:48<00:59, 79.81it/s]\u001b[A\n",
            " 89%|████████▉ | 38106/42840 [05:48<01:14, 63.30it/s]\u001b[A\n",
            " 89%|████████▉ | 38117/42840 [05:48<01:05, 71.98it/s]\u001b[A\n",
            " 89%|████████▉ | 38126/42840 [05:48<01:02, 74.96it/s]\u001b[A\n",
            " 89%|████████▉ | 38142/42840 [05:48<00:55, 83.95it/s]\u001b[A\n",
            " 89%|████████▉ | 38152/42840 [05:48<01:03, 74.31it/s]\u001b[A\n",
            " 89%|████████▉ | 38161/42840 [05:49<01:00, 77.25it/s]\u001b[A\n",
            " 89%|████████▉ | 38179/42840 [05:49<00:50, 92.41it/s]\u001b[A\n",
            " 89%|████████▉ | 38199/42840 [05:49<00:42, 109.25it/s]\u001b[A\n",
            " 89%|████████▉ | 38213/42840 [05:49<00:39, 116.35it/s]\u001b[A\n",
            " 89%|████████▉ | 38230/42840 [05:49<00:36, 124.86it/s]\u001b[A\n",
            " 89%|████████▉ | 38244/42840 [05:49<00:36, 124.77it/s]\u001b[A\n",
            " 89%|████████▉ | 38258/42840 [05:49<00:45, 101.65it/s]\u001b[A\n",
            " 89%|████████▉ | 38275/42840 [05:49<00:40, 112.66it/s]\u001b[A\n",
            " 89%|████████▉ | 38289/42840 [05:49<00:38, 117.45it/s]\u001b[A\n",
            " 89%|████████▉ | 38311/42840 [05:50<00:33, 135.18it/s]\u001b[A\n",
            " 89%|████████▉ | 38327/42840 [05:50<00:51, 86.89it/s] \u001b[A\n",
            " 89%|████████▉ | 38341/42840 [05:50<00:46, 95.76it/s]\u001b[A\n",
            " 90%|████████▉ | 38354/42840 [05:50<00:43, 102.54it/s]\u001b[A\n",
            " 90%|████████▉ | 38367/42840 [05:50<00:45, 98.84it/s] \u001b[A\n",
            " 90%|████████▉ | 38379/42840 [05:50<00:44, 101.12it/s]\u001b[A\n",
            " 90%|████████▉ | 38391/42840 [05:51<00:44, 99.94it/s] \u001b[A\n",
            " 90%|████████▉ | 38402/42840 [05:51<00:55, 80.68it/s]\u001b[A\n",
            " 90%|████████▉ | 38412/42840 [05:51<00:53, 82.98it/s]\u001b[A\n",
            " 90%|████████▉ | 38422/42840 [05:51<00:50, 86.71it/s]\u001b[A\n",
            " 90%|████████▉ | 38433/42840 [05:51<00:47, 92.26it/s]\u001b[A\n",
            " 90%|████████▉ | 38443/42840 [05:51<00:48, 89.98it/s]\u001b[A\n",
            " 90%|████████▉ | 38458/42840 [05:51<00:43, 99.69it/s]\u001b[A\n",
            " 90%|████████▉ | 38469/42840 [05:51<00:44, 98.12it/s]\u001b[A\n",
            " 90%|████████▉ | 38490/42840 [05:51<00:37, 116.24it/s]\u001b[A\n",
            " 90%|████████▉ | 38504/42840 [05:52<00:39, 109.27it/s]\u001b[A\n",
            " 90%|████████▉ | 38521/42840 [05:52<00:37, 116.43it/s]\u001b[A\n",
            " 90%|████████▉ | 38539/42840 [05:52<00:34, 123.30it/s]\u001b[A\n",
            " 90%|████████▉ | 38553/42840 [05:52<00:37, 114.40it/s]\u001b[A\n",
            " 90%|█████████ | 38566/42840 [05:52<00:41, 101.91it/s]\u001b[A\n",
            " 90%|█████████ | 38577/42840 [05:52<00:42, 99.26it/s] \u001b[A\n",
            " 90%|█████████ | 38590/42840 [05:52<00:40, 105.91it/s]\u001b[A\n",
            " 90%|█████████ | 38602/42840 [05:53<00:39, 108.24it/s]\u001b[A\n",
            " 90%|█████████ | 38617/42840 [05:53<00:36, 115.85it/s]\u001b[A\n",
            " 90%|█████████ | 38630/42840 [05:53<00:41, 100.36it/s]\u001b[A\n",
            " 90%|█████████ | 38651/42840 [05:53<00:35, 118.76it/s]\u001b[A\n",
            " 90%|█████████ | 38666/42840 [05:53<00:36, 114.42it/s]\u001b[A\n",
            " 90%|█████████ | 38679/42840 [05:53<00:40, 103.20it/s]\u001b[A\n",
            " 90%|█████████ | 38693/42840 [05:53<00:37, 111.02it/s]\u001b[A\n",
            " 90%|█████████ | 38706/42840 [05:54<00:50, 82.44it/s] \u001b[A\n",
            " 90%|█████████ | 38716/42840 [05:54<00:47, 86.23it/s]\u001b[A\n",
            " 90%|█████████ | 38728/42840 [05:54<00:43, 94.03it/s]\u001b[A\n",
            " 90%|█████████ | 38740/42840 [05:54<00:41, 98.28it/s]\u001b[A\n",
            " 90%|█████████ | 38751/42840 [05:54<00:41, 99.21it/s]\u001b[A\n",
            " 90%|█████████ | 38763/42840 [05:54<00:39, 104.27it/s]\u001b[A\n",
            " 91%|█████████ | 38774/42840 [05:54<00:40, 100.27it/s]\u001b[A\n",
            " 91%|█████████ | 38792/42840 [05:54<00:35, 114.38it/s]\u001b[A\n",
            " 91%|█████████ | 38811/42840 [05:54<00:31, 129.41it/s]\u001b[A\n",
            " 91%|█████████ | 38826/42840 [05:55<00:31, 127.37it/s]\u001b[A\n",
            " 91%|█████████ | 38840/42840 [05:55<00:34, 114.89it/s]\u001b[A\n",
            " 91%|█████████ | 38853/42840 [05:55<00:34, 116.54it/s]\u001b[A\n",
            " 91%|█████████ | 38867/42840 [05:55<00:32, 122.34it/s]\u001b[A\n",
            " 91%|█████████ | 38880/42840 [05:55<00:39, 101.53it/s]\u001b[A\n",
            " 91%|█████████ | 38894/42840 [05:55<00:35, 110.35it/s]\u001b[A\n",
            " 91%|█████████ | 38906/42840 [05:55<00:36, 107.23it/s]\u001b[A\n",
            " 91%|█████████ | 38921/42840 [05:55<00:33, 116.95it/s]\u001b[A\n",
            " 91%|█████████ | 38939/42840 [05:55<00:30, 129.69it/s]\u001b[A\n",
            " 91%|█████████ | 38953/42840 [05:56<00:30, 127.68it/s]\u001b[A\n",
            " 91%|█████████ | 38967/42840 [05:56<00:30, 126.62it/s]\u001b[A\n",
            " 91%|█████████ | 38981/42840 [05:56<00:31, 123.47it/s]\u001b[A\n",
            " 91%|█████████ | 38994/42840 [05:56<00:40, 95.09it/s] \u001b[A\n",
            " 91%|█████████ | 39008/42840 [05:56<00:36, 104.10it/s]\u001b[A\n",
            " 91%|█████████ | 39021/42840 [05:56<00:34, 109.36it/s]\u001b[A\n",
            " 91%|█████████ | 39033/42840 [05:56<00:35, 106.85it/s]\u001b[A\n",
            " 91%|█████████ | 39045/42840 [05:57<00:38, 99.69it/s] \u001b[A\n",
            " 91%|█████████ | 39056/42840 [05:57<00:50, 75.26it/s]\u001b[A\n",
            " 91%|█████████ | 39070/42840 [05:57<00:44, 85.39it/s]\u001b[A\n",
            " 91%|█████████ | 39083/42840 [05:57<00:40, 93.63it/s]\u001b[A\n",
            " 91%|█████████▏| 39096/42840 [05:57<00:37, 99.70it/s]\u001b[A\n",
            " 91%|█████████▏| 39109/42840 [05:57<00:34, 106.99it/s]\u001b[A\n",
            " 91%|█████████▏| 39121/42840 [05:57<00:33, 109.45it/s]\u001b[A\n",
            " 91%|█████████▏| 39133/42840 [05:57<00:33, 109.49it/s]\u001b[A\n",
            " 91%|█████████▏| 39145/42840 [05:58<00:37, 98.92it/s] \u001b[A\n",
            " 91%|█████████▏| 39156/42840 [05:58<00:36, 101.85it/s]\u001b[A\n",
            " 91%|█████████▏| 39167/42840 [05:58<00:37, 99.09it/s] \u001b[A\n",
            " 91%|█████████▏| 39178/42840 [05:58<00:39, 92.71it/s]\u001b[A\n",
            " 91%|█████████▏| 39189/42840 [05:58<00:38, 95.36it/s]\u001b[A\n",
            " 92%|█████████▏| 39202/42840 [05:58<00:36, 100.33it/s]\u001b[A\n",
            " 92%|█████████▏| 39213/42840 [05:58<00:35, 101.07it/s]\u001b[A\n",
            " 92%|█████████▏| 39224/42840 [05:58<00:42, 85.81it/s] \u001b[A\n",
            " 92%|█████████▏| 39236/42840 [05:58<00:38, 93.30it/s]\u001b[A\n",
            " 92%|█████████▏| 39247/42840 [05:59<00:37, 95.54it/s]\u001b[A\n",
            " 92%|█████████▏| 39257/42840 [05:59<00:37, 94.37it/s]\u001b[A\n",
            " 92%|█████████▏| 39271/42840 [05:59<00:34, 104.46it/s]\u001b[A\n",
            " 92%|█████████▏| 39283/42840 [05:59<00:32, 108.64it/s]\u001b[A\n",
            " 92%|█████████▏| 39300/42840 [05:59<00:29, 119.27it/s]\u001b[A\n",
            " 92%|█████████▏| 39313/42840 [05:59<00:30, 116.75it/s]\u001b[A\n",
            " 92%|█████████▏| 39326/42840 [05:59<00:31, 112.28it/s]\u001b[A\n",
            " 92%|█████████▏| 39338/42840 [05:59<00:30, 114.30it/s]\u001b[A\n",
            " 92%|█████████▏| 39354/42840 [05:59<00:27, 125.01it/s]\u001b[A\n",
            " 92%|█████████▏| 39368/42840 [06:00<00:26, 129.05it/s]\u001b[A\n",
            " 92%|█████████▏| 39382/42840 [06:00<00:30, 112.11it/s]\u001b[A\n",
            " 92%|█████████▏| 39394/42840 [06:00<00:31, 108.88it/s]\u001b[A\n",
            " 92%|█████████▏| 39406/42840 [06:00<00:35, 96.81it/s] \u001b[A\n",
            " 92%|█████████▏| 39417/42840 [06:00<00:40, 84.92it/s]\u001b[A\n",
            " 92%|█████████▏| 39431/42840 [06:00<00:35, 95.30it/s]\u001b[A\n",
            " 92%|█████████▏| 39449/42840 [06:00<00:31, 107.34it/s]\u001b[A\n",
            " 92%|█████████▏| 39463/42840 [06:00<00:29, 113.60it/s]\u001b[A\n",
            " 92%|█████████▏| 39478/42840 [06:01<00:28, 116.77it/s]\u001b[A\n",
            " 92%|█████████▏| 39491/42840 [06:01<00:28, 118.46it/s]\u001b[A\n",
            " 92%|█████████▏| 39504/42840 [06:01<00:32, 102.19it/s]\u001b[A\n",
            " 92%|█████████▏| 39515/42840 [06:01<00:32, 102.31it/s]\u001b[A\n",
            " 92%|█████████▏| 39526/42840 [06:01<00:39, 83.04it/s] \u001b[A\n",
            " 92%|█████████▏| 39536/42840 [06:01<00:42, 78.46it/s]\u001b[A\n",
            " 92%|█████████▏| 39550/42840 [06:01<00:36, 90.35it/s]\u001b[A\n",
            " 92%|█████████▏| 39562/42840 [06:02<00:34, 95.57it/s]\u001b[A\n",
            " 92%|█████████▏| 39581/42840 [06:02<00:29, 110.65it/s]\u001b[A\n",
            " 92%|█████████▏| 39594/42840 [06:02<00:29, 111.46it/s]\u001b[A\n",
            " 92%|█████████▏| 39607/42840 [06:02<00:28, 113.03it/s]\u001b[A\n",
            " 92%|█████████▏| 39620/42840 [06:02<00:35, 89.72it/s] \u001b[A\n",
            " 93%|█████████▎| 39631/42840 [06:02<00:39, 80.92it/s]\u001b[A\n",
            " 93%|█████████▎| 39641/42840 [06:02<00:37, 84.58it/s]\u001b[A\n",
            " 93%|█████████▎| 39655/42840 [06:02<00:34, 93.45it/s]\u001b[A\n",
            " 93%|█████████▎| 39666/42840 [06:03<00:35, 88.22it/s]\u001b[A\n",
            " 93%|█████████▎| 39676/42840 [06:03<00:35, 88.00it/s]\u001b[A\n",
            " 93%|█████████▎| 39687/42840 [06:03<00:33, 92.91it/s]\u001b[A\n",
            " 93%|█████████▎| 39697/42840 [06:03<00:38, 82.39it/s]\u001b[A\n",
            " 93%|█████████▎| 39710/42840 [06:03<00:34, 91.78it/s]\u001b[A\n",
            " 93%|█████████▎| 39723/42840 [06:03<00:31, 98.65it/s]\u001b[A\n",
            " 93%|█████████▎| 39734/42840 [06:03<00:46, 66.24it/s]\u001b[A\n",
            " 93%|█████████▎| 39743/42840 [06:04<00:45, 68.47it/s]\u001b[A\n",
            " 93%|█████████▎| 39757/42840 [06:04<00:38, 80.52it/s]\u001b[A\n",
            " 93%|█████████▎| 39773/42840 [06:04<00:32, 93.29it/s]\u001b[A\n",
            " 93%|█████████▎| 39785/42840 [06:04<00:43, 69.67it/s]\u001b[A\n",
            " 93%|█████████▎| 39801/42840 [06:04<00:38, 79.19it/s]\u001b[A\n",
            " 93%|█████████▎| 39816/42840 [06:04<00:32, 92.23it/s]\u001b[A\n",
            " 93%|█████████▎| 39828/42840 [06:04<00:31, 95.54it/s]\u001b[A\n",
            " 93%|█████████▎| 39841/42840 [06:05<00:29, 102.61it/s]\u001b[A\n",
            " 93%|█████████▎| 39855/42840 [06:05<00:26, 111.36it/s]\u001b[A\n",
            " 93%|█████████▎| 39868/42840 [06:05<00:27, 107.28it/s]\u001b[A\n",
            " 93%|█████████▎| 39882/42840 [06:05<00:26, 113.35it/s]\u001b[A\n",
            " 93%|█████████▎| 39898/42840 [06:05<00:23, 122.70it/s]\u001b[A\n",
            " 93%|█████████▎| 39913/42840 [06:05<00:22, 129.47it/s]\u001b[A\n",
            " 93%|█████████▎| 39927/42840 [06:05<00:23, 126.35it/s]\u001b[A\n",
            " 93%|█████████▎| 39941/42840 [06:05<00:27, 107.31it/s]\u001b[A\n",
            " 93%|█████████▎| 39953/42840 [06:06<00:32, 88.62it/s] \u001b[A\n",
            " 93%|█████████▎| 39963/42840 [06:06<00:44, 64.49it/s]\u001b[A\n",
            " 93%|█████████▎| 39976/42840 [06:06<00:38, 74.79it/s]\u001b[A\n",
            " 93%|█████████▎| 39986/42840 [06:06<00:36, 77.79it/s]\u001b[A\n",
            " 93%|█████████▎| 39998/42840 [06:06<00:35, 80.56it/s]\u001b[A\n",
            " 93%|█████████▎| 40008/42840 [06:06<00:33, 85.25it/s]\u001b[A\n",
            " 93%|█████████▎| 40018/42840 [06:06<00:32, 87.84it/s]\u001b[A\n",
            " 93%|█████████▎| 40032/42840 [06:07<00:28, 97.62it/s]\u001b[A\n",
            " 93%|█████████▎| 40043/42840 [06:07<00:29, 94.37it/s]\u001b[A\n",
            " 93%|█████████▎| 40055/42840 [06:07<00:27, 100.52it/s]\u001b[A\n",
            " 94%|█████████▎| 40071/42840 [06:07<00:25, 110.73it/s]\u001b[A\n",
            " 94%|█████████▎| 40083/42840 [06:07<00:29, 93.86it/s] \u001b[A\n",
            " 94%|█████████▎| 40096/42840 [06:07<00:26, 102.09it/s]\u001b[A\n",
            " 94%|█████████▎| 40110/42840 [06:07<00:24, 110.01it/s]\u001b[A\n",
            " 94%|█████████▎| 40122/42840 [06:07<00:27, 100.28it/s]\u001b[A\n",
            " 94%|█████████▎| 40133/42840 [06:08<00:27, 96.99it/s] \u001b[A\n",
            " 94%|█████████▎| 40144/42840 [06:08<00:27, 97.38it/s]\u001b[A\n",
            " 94%|█████████▎| 40156/42840 [06:08<00:26, 102.29it/s]\u001b[A\n",
            " 94%|█████████▍| 40169/42840 [06:08<00:24, 107.40it/s]\u001b[A\n",
            " 94%|█████████▍| 40181/42840 [06:08<00:24, 109.61it/s]\u001b[A\n",
            " 94%|█████████▍| 40193/42840 [06:08<00:30, 87.81it/s] \u001b[A\n",
            " 94%|█████████▍| 40206/42840 [06:08<00:28, 93.48it/s]\u001b[A\n",
            " 94%|█████████▍| 40217/42840 [06:08<00:26, 97.58it/s]\u001b[A\n",
            " 94%|█████████▍| 40232/42840 [06:08<00:24, 107.36it/s]\u001b[A\n",
            " 94%|█████████▍| 40244/42840 [06:09<00:26, 99.63it/s] \u001b[A\n",
            " 94%|█████████▍| 40255/42840 [06:09<00:26, 98.29it/s]\u001b[A\n",
            " 94%|█████████▍| 40266/42840 [06:09<00:26, 95.39it/s]\u001b[A\n",
            " 94%|█████████▍| 40279/42840 [06:09<00:24, 102.54it/s]\u001b[A\n",
            " 94%|█████████▍| 40290/42840 [06:09<00:24, 103.93it/s]\u001b[A\n",
            " 94%|█████████▍| 40301/42840 [06:09<00:35, 71.40it/s] \u001b[A\n",
            " 94%|█████████▍| 40310/42840 [06:09<00:36, 68.96it/s]\u001b[A\n",
            " 94%|█████████▍| 40319/42840 [06:10<00:34, 72.21it/s]\u001b[A\n",
            " 94%|█████████▍| 40332/42840 [06:10<00:30, 80.98it/s]\u001b[A\n",
            " 94%|█████████▍| 40342/42840 [06:10<00:30, 81.08it/s]\u001b[A\n",
            " 94%|█████████▍| 40353/42840 [06:10<00:28, 87.01it/s]\u001b[A\n",
            " 94%|█████████▍| 40365/42840 [06:10<00:26, 94.22it/s]\u001b[A\n",
            " 94%|█████████▍| 40381/42840 [06:10<00:23, 106.91it/s]\u001b[A\n",
            " 94%|█████████▍| 40395/42840 [06:10<00:21, 113.74it/s]\u001b[A\n",
            " 94%|█████████▍| 40408/42840 [06:10<00:22, 107.34it/s]\u001b[A\n",
            " 94%|█████████▍| 40420/42840 [06:11<00:34, 71.10it/s] \u001b[A\n",
            " 94%|█████████▍| 40432/42840 [06:11<00:32, 74.99it/s]\u001b[A\n",
            " 94%|█████████▍| 40441/42840 [06:11<00:32, 74.80it/s]\u001b[A\n",
            " 94%|█████████▍| 40452/42840 [06:11<00:30, 78.95it/s]\u001b[A\n",
            " 94%|█████████▍| 40461/42840 [06:11<00:30, 78.46it/s]\u001b[A\n",
            " 94%|█████████▍| 40474/42840 [06:11<00:28, 82.47it/s]\u001b[A\n",
            " 94%|█████████▍| 40483/42840 [06:11<00:27, 84.49it/s]\u001b[A\n",
            " 95%|█████████▍| 40492/42840 [06:12<00:28, 81.04it/s]\u001b[A\n",
            " 95%|█████████▍| 40507/42840 [06:12<00:24, 93.43it/s]\u001b[A\n",
            " 95%|█████████▍| 40518/42840 [06:12<00:24, 95.25it/s]\u001b[A\n",
            " 95%|█████████▍| 40537/42840 [06:12<00:20, 111.90it/s]\u001b[A\n",
            " 95%|█████████▍| 40552/42840 [06:12<00:19, 118.48it/s]\u001b[A\n",
            " 95%|█████████▍| 40566/42840 [06:12<00:29, 77.28it/s] \u001b[A\n",
            " 95%|█████████▍| 40582/42840 [06:12<00:24, 90.72it/s]\u001b[A\n",
            " 95%|█████████▍| 40594/42840 [06:13<00:52, 43.08it/s]\u001b[A\n",
            " 95%|█████████▍| 40611/42840 [06:13<00:40, 55.46it/s]\u001b[A\n",
            " 95%|█████████▍| 40624/42840 [06:13<00:35, 63.20it/s]\u001b[A\n",
            " 95%|█████████▍| 40635/42840 [06:13<00:30, 71.29it/s]\u001b[A\n",
            " 95%|█████████▍| 40649/42840 [06:13<00:26, 82.08it/s]\u001b[A\n",
            " 95%|█████████▍| 40661/42840 [06:14<00:25, 86.05it/s]\u001b[A\n",
            " 95%|█████████▍| 40678/42840 [06:14<00:21, 100.51it/s]\u001b[A\n",
            " 95%|█████████▍| 40691/42840 [06:14<00:20, 103.27it/s]\u001b[A\n",
            " 95%|█████████▌| 40709/42840 [06:14<00:19, 110.24it/s]\u001b[A\n",
            " 95%|█████████▌| 40722/42840 [06:14<00:19, 111.18it/s]\u001b[A\n",
            " 95%|█████████▌| 40735/42840 [06:14<00:18, 113.52it/s]\u001b[A\n",
            " 95%|█████████▌| 40748/42840 [06:14<00:21, 95.81it/s] \u001b[A\n",
            " 95%|█████████▌| 40763/42840 [06:14<00:19, 103.96it/s]\u001b[A\n",
            " 95%|█████████▌| 40775/42840 [06:15<00:21, 95.75it/s] \u001b[A\n",
            " 95%|█████████▌| 40786/42840 [06:15<00:27, 73.53it/s]\u001b[A\n",
            " 95%|█████████▌| 40797/42840 [06:15<00:25, 80.57it/s]\u001b[A\n",
            " 95%|█████████▌| 40807/42840 [06:15<00:23, 85.26it/s]\u001b[A\n",
            " 95%|█████████▌| 40817/42840 [06:15<00:26, 76.17it/s]\u001b[A\n",
            " 95%|█████████▌| 40831/42840 [06:15<00:23, 86.51it/s]\u001b[A\n",
            " 95%|█████████▌| 40843/42840 [06:15<00:21, 93.78it/s]\u001b[A\n",
            " 95%|█████████▌| 40854/42840 [06:16<00:25, 79.30it/s]\u001b[A\n",
            " 95%|█████████▌| 40863/42840 [06:16<00:27, 72.66it/s]\u001b[A\n",
            " 95%|█████████▌| 40875/42840 [06:16<00:24, 79.87it/s]\u001b[A\n",
            " 95%|█████████▌| 40891/42840 [06:16<00:21, 91.31it/s]\u001b[A\n",
            " 95%|█████████▌| 40911/42840 [06:16<00:17, 109.04it/s]\u001b[A\n",
            " 96%|█████████▌| 40925/42840 [06:16<00:19, 98.90it/s] \u001b[A\n",
            " 96%|█████████▌| 40937/42840 [06:16<00:18, 102.10it/s]\u001b[A\n",
            " 96%|█████████▌| 40949/42840 [06:17<00:19, 98.13it/s] \u001b[A\n",
            " 96%|█████████▌| 40960/42840 [06:17<00:18, 99.55it/s]\u001b[A\n",
            " 96%|█████████▌| 40972/42840 [06:17<00:18, 102.93it/s]\u001b[A\n",
            " 96%|█████████▌| 40984/42840 [06:17<00:17, 107.25it/s]\u001b[A\n",
            " 96%|█████████▌| 40996/42840 [06:17<00:18, 101.84it/s]\u001b[A\n",
            " 96%|█████████▌| 41007/42840 [06:17<00:24, 74.74it/s] \u001b[A\n",
            " 96%|█████████▌| 41017/42840 [06:17<00:23, 76.61it/s]\u001b[A\n",
            " 96%|█████████▌| 41031/42840 [06:17<00:20, 87.37it/s]\u001b[A\n",
            " 96%|█████████▌| 41041/42840 [06:18<00:20, 88.07it/s]\u001b[A\n",
            " 96%|█████████▌| 41051/42840 [06:18<00:20, 89.29it/s]\u001b[A\n",
            " 96%|█████████▌| 41061/42840 [06:18<00:20, 88.71it/s]\u001b[A\n",
            " 96%|█████████▌| 41076/42840 [06:18<00:17, 100.61it/s]\u001b[A\n",
            " 96%|█████████▌| 41089/42840 [06:18<00:17, 100.39it/s]\u001b[A\n",
            " 96%|█████████▌| 41102/42840 [06:18<00:16, 106.50it/s]\u001b[A\n",
            " 96%|█████████▌| 41114/42840 [06:18<00:15, 109.17it/s]\u001b[A\n",
            " 96%|█████████▌| 41127/42840 [06:18<00:14, 114.49it/s]\u001b[A\n",
            " 96%|█████████▌| 41140/42840 [06:18<00:14, 116.46it/s]\u001b[A\n",
            " 96%|█████████▌| 41153/42840 [06:19<00:14, 114.62it/s]\u001b[A\n",
            " 96%|█████████▌| 41165/42840 [06:19<00:15, 109.38it/s]\u001b[A\n",
            " 96%|█████████▌| 41177/42840 [06:19<00:18, 90.67it/s] \u001b[A\n",
            " 96%|█████████▌| 41187/42840 [06:19<00:18, 88.78it/s]\u001b[A\n",
            " 96%|█████████▌| 41201/42840 [06:19<00:16, 99.47it/s]\u001b[A\n",
            " 96%|█████████▌| 41213/42840 [06:19<00:15, 103.98it/s]\u001b[A\n",
            " 96%|█████████▌| 41224/42840 [06:19<00:18, 86.02it/s] \u001b[A\n",
            " 96%|█████████▋| 41244/42840 [06:19<00:15, 103.62it/s]\u001b[A\n",
            " 96%|█████████▋| 41258/42840 [06:20<00:14, 110.79it/s]\u001b[A\n",
            " 96%|█████████▋| 41271/42840 [06:20<00:14, 107.69it/s]\u001b[A\n",
            " 96%|█████████▋| 41284/42840 [06:20<00:15, 102.99it/s]\u001b[A\n",
            " 96%|█████████▋| 41296/42840 [06:20<00:14, 105.14it/s]\u001b[A\n",
            " 96%|█████████▋| 41310/42840 [06:20<00:13, 112.20it/s]\u001b[A\n",
            " 96%|█████████▋| 41322/42840 [06:20<00:15, 98.14it/s] \u001b[A\n",
            " 96%|█████████▋| 41335/42840 [06:20<00:14, 104.46it/s]\u001b[A\n",
            " 97%|█████████▋| 41347/42840 [06:20<00:16, 88.61it/s] \u001b[A\n",
            " 97%|█████████▋| 41357/42840 [06:21<00:17, 83.28it/s]\u001b[A\n",
            " 97%|█████████▋| 41369/42840 [06:21<00:16, 88.46it/s]\u001b[A\n",
            " 97%|█████████▋| 41387/42840 [06:21<00:14, 103.23it/s]\u001b[A\n",
            " 97%|█████████▋| 41400/42840 [06:21<00:13, 107.84it/s]\u001b[A\n",
            " 97%|█████████▋| 41412/42840 [06:21<00:17, 80.64it/s] \u001b[A\n",
            " 97%|█████████▋| 41422/42840 [06:21<00:18, 77.63it/s]\u001b[A\n",
            " 97%|█████████▋| 41431/42840 [06:21<00:18, 75.58it/s]\u001b[A\n",
            " 97%|█████████▋| 41443/42840 [06:22<00:16, 84.37it/s]\u001b[A\n",
            " 97%|█████████▋| 41455/42840 [06:22<00:14, 92.36it/s]\u001b[A\n",
            " 97%|█████████▋| 41466/42840 [06:22<00:15, 88.99it/s]\u001b[A\n",
            " 97%|█████████▋| 41476/42840 [06:22<00:16, 83.95it/s]\u001b[A\n",
            " 97%|█████████▋| 41487/42840 [06:22<00:15, 84.60it/s]\u001b[A\n",
            " 97%|█████████▋| 41496/42840 [06:22<00:20, 64.59it/s]\u001b[A\n",
            " 97%|█████████▋| 41504/42840 [06:22<00:20, 65.02it/s]\u001b[A\n",
            " 97%|█████████▋| 41517/42840 [06:22<00:18, 72.54it/s]\u001b[A\n",
            " 97%|█████████▋| 41531/42840 [06:23<00:15, 83.99it/s]\u001b[A\n",
            " 97%|█████████▋| 41541/42840 [06:23<00:15, 84.60it/s]\u001b[A\n",
            " 97%|█████████▋| 41552/42840 [06:23<00:14, 90.75it/s]\u001b[A\n",
            " 97%|█████████▋| 41562/42840 [06:23<00:14, 90.58it/s]\u001b[A\n",
            " 97%|█████████▋| 41572/42840 [06:23<00:15, 82.10it/s]\u001b[A\n",
            " 97%|█████████▋| 41582/42840 [06:23<00:17, 72.58it/s]\u001b[A\n",
            " 97%|█████████▋| 41590/42840 [06:23<00:20, 61.93it/s]\u001b[A\n",
            " 97%|█████████▋| 41603/42840 [06:24<00:16, 73.26it/s]\u001b[A\n",
            " 97%|█████████▋| 41612/42840 [06:24<00:17, 69.29it/s]\u001b[A\n",
            " 97%|█████████▋| 41620/42840 [06:24<00:17, 71.14it/s]\u001b[A\n",
            " 97%|█████████▋| 41635/42840 [06:24<00:14, 84.35it/s]\u001b[A\n",
            " 97%|█████████▋| 41645/42840 [06:24<00:14, 82.97it/s]\u001b[A\n",
            " 97%|█████████▋| 41655/42840 [06:24<00:16, 72.37it/s]\u001b[A\n",
            " 97%|█████████▋| 41664/42840 [06:24<00:18, 64.45it/s]\u001b[A\n",
            " 97%|█████████▋| 41686/42840 [06:24<00:14, 80.92it/s]\u001b[A\n",
            " 97%|█████████▋| 41698/42840 [06:25<00:19, 58.03it/s]\u001b[A\n",
            " 97%|█████████▋| 41711/42840 [06:25<00:16, 67.74it/s]\u001b[A\n",
            " 97%|█████████▋| 41721/42840 [06:25<00:21, 53.04it/s]\u001b[A\n",
            " 97%|█████████▋| 41730/42840 [06:25<00:18, 59.59it/s]\u001b[A\n",
            " 97%|█████████▋| 41742/42840 [06:25<00:15, 69.80it/s]\u001b[A\n",
            " 97%|█████████▋| 41763/42840 [06:26<00:12, 87.17it/s]\u001b[A\n",
            " 98%|█████████▊| 41777/42840 [06:26<00:10, 97.89it/s]\u001b[A\n",
            " 98%|█████████▊| 41790/42840 [06:26<00:10, 101.99it/s]\u001b[A\n",
            " 98%|█████████▊| 41805/42840 [06:26<00:09, 111.73it/s]\u001b[A\n",
            " 98%|█████████▊| 41825/42840 [06:26<00:08, 120.20it/s]\u001b[A\n",
            " 98%|█████████▊| 41839/42840 [06:26<00:09, 104.91it/s]\u001b[A\n",
            " 98%|█████████▊| 41851/42840 [06:26<00:09, 99.74it/s] \u001b[A\n",
            " 98%|█████████▊| 41862/42840 [06:26<00:10, 95.31it/s]\u001b[A\n",
            " 98%|█████████▊| 41873/42840 [06:27<00:09, 97.85it/s]\u001b[A\n",
            " 98%|█████████▊| 41891/42840 [06:27<00:08, 109.83it/s]\u001b[A\n",
            " 98%|█████████▊| 41903/42840 [06:27<00:08, 109.51it/s]\u001b[A\n",
            " 98%|█████████▊| 41915/42840 [06:27<00:08, 108.66it/s]\u001b[A\n",
            " 98%|█████████▊| 41928/42840 [06:27<00:08, 113.03it/s]\u001b[A\n",
            " 98%|█████████▊| 41943/42840 [06:27<00:07, 121.55it/s]\u001b[A\n",
            " 98%|█████████▊| 41957/42840 [06:27<00:07, 124.65it/s]\u001b[A\n",
            " 98%|█████████▊| 41970/42840 [06:27<00:07, 122.83it/s]\u001b[A\n",
            " 98%|█████████▊| 41984/42840 [06:27<00:06, 125.77it/s]\u001b[A\n",
            " 98%|█████████▊| 42001/42840 [06:28<00:06, 128.17it/s]\u001b[A\n",
            " 98%|█████████▊| 42014/42840 [06:28<00:07, 103.51it/s]\u001b[A\n",
            " 98%|█████████▊| 42030/42840 [06:28<00:07, 114.33it/s]\u001b[A\n",
            " 98%|█████████▊| 42047/42840 [06:28<00:06, 126.46it/s]\u001b[A\n",
            " 98%|█████████▊| 42061/42840 [06:28<00:06, 114.50it/s]\u001b[A\n",
            " 98%|█████████▊| 42074/42840 [06:28<00:07, 99.42it/s] \u001b[A\n",
            " 98%|█████████▊| 42085/42840 [06:28<00:08, 85.61it/s]\u001b[A\n",
            " 98%|█████████▊| 42096/42840 [06:28<00:08, 91.45it/s]\u001b[A\n",
            " 98%|█████████▊| 42106/42840 [06:29<00:09, 74.19it/s]\u001b[A\n",
            " 98%|█████████▊| 42115/42840 [06:29<00:09, 74.05it/s]\u001b[A\n",
            " 98%|█████████▊| 42126/42840 [06:29<00:09, 77.87it/s]\u001b[A\n",
            " 98%|█████████▊| 42135/42840 [06:29<00:09, 71.41it/s]\u001b[A\n",
            " 98%|█████████▊| 42145/42840 [06:29<00:09, 73.82it/s]\u001b[A\n",
            " 98%|█████████▊| 42153/42840 [06:29<00:09, 74.69it/s]\u001b[A\n",
            " 98%|█████████▊| 42166/42840 [06:29<00:08, 82.94it/s]\u001b[A\n",
            " 98%|█████████▊| 42176/42840 [06:30<00:07, 87.20it/s]\u001b[A\n",
            " 99%|█████████▊| 42207/42840 [06:30<00:05, 111.15it/s]\u001b[A\n",
            " 99%|█████████▊| 42223/42840 [06:30<00:05, 117.32it/s]\u001b[A\n",
            " 99%|█████████▊| 42239/42840 [06:30<00:05, 113.50it/s]\u001b[A\n",
            " 99%|█████████▊| 42253/42840 [06:30<00:05, 115.95it/s]\u001b[A\n",
            " 99%|█████████▊| 42269/42840 [06:30<00:04, 126.15it/s]\u001b[A\n",
            " 99%|█████████▊| 42289/42840 [06:30<00:03, 141.11it/s]\u001b[A\n",
            " 99%|█████████▉| 42305/42840 [06:30<00:03, 143.03it/s]\u001b[A\n",
            " 99%|█████████▉| 42321/42840 [06:30<00:03, 139.78it/s]\u001b[A\n",
            " 99%|█████████▉| 42336/42840 [06:31<00:03, 134.10it/s]\u001b[A\n",
            " 99%|█████████▉| 42351/42840 [06:31<00:05, 93.51it/s] \u001b[A\n",
            " 99%|█████████▉| 42371/42840 [06:31<00:04, 103.91it/s]\u001b[A\n",
            " 99%|█████████▉| 42392/42840 [06:31<00:03, 120.06it/s]\u001b[A\n",
            " 99%|█████████▉| 42407/42840 [06:31<00:04, 93.58it/s] \u001b[A\n",
            " 99%|█████████▉| 42419/42840 [06:31<00:04, 88.82it/s]\u001b[A\n",
            " 99%|█████████▉| 42430/42840 [06:32<00:04, 90.92it/s]\u001b[A\n",
            " 99%|█████████▉| 42441/42840 [06:32<00:04, 82.88it/s]\u001b[A\n",
            " 99%|█████████▉| 42465/42840 [06:32<00:03, 101.87it/s]\u001b[A\n",
            " 99%|█████████▉| 42493/42840 [06:32<00:02, 125.62it/s]\u001b[A\n",
            " 99%|█████████▉| 42520/42840 [06:32<00:02, 147.95it/s]\u001b[A\n",
            " 99%|█████████▉| 42540/42840 [06:32<00:01, 150.05it/s]\u001b[A\n",
            " 99%|█████████▉| 42559/42840 [06:32<00:01, 150.91it/s]\u001b[A\n",
            " 99%|█████████▉| 42577/42840 [06:32<00:01, 147.15it/s]\u001b[A\n",
            " 99%|█████████▉| 42604/42840 [06:33<00:01, 168.72it/s]\u001b[A\n",
            " 99%|█████████▉| 42624/42840 [06:33<00:01, 141.18it/s]\u001b[A\n",
            "100%|█████████▉| 42641/42840 [06:33<00:01, 145.54it/s]\u001b[A\n",
            "100%|█████████▉| 42658/42840 [06:33<00:01, 138.78it/s]\u001b[A\n",
            "100%|█████████▉| 42683/42840 [06:33<00:00, 159.76it/s]\u001b[A\n",
            "100%|█████████▉| 42704/42840 [06:33<00:00, 171.55it/s]\u001b[A\n",
            "100%|█████████▉| 42723/42840 [06:33<00:00, 171.62it/s]\u001b[A\n",
            "100%|█████████▉| 42756/42840 [06:33<00:00, 199.87it/s]\u001b[A\n",
            "100%|█████████▉| 42779/42840 [06:34<00:00, 177.18it/s]\u001b[A\n",
            "100%|█████████▉| 42807/42840 [06:34<00:00, 198.49it/s]\u001b[A\n",
            "100%|██████████| 42840/42840 [06:34<00:00, 108.64it/s]\n",
            "\n",
            "  0%|          | 0/1708 [00:00<?, ?it/s]\u001b[A\n",
            "  0%|          | 4/1708 [00:00<00:49, 34.41it/s]\u001b[A"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "42840 18618\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "  0%|          | 7/1708 [00:00<00:53, 32.04it/s]\u001b[A\n",
            "  1%|          | 10/1708 [00:00<01:12, 23.36it/s]\u001b[A\n",
            "  1%|          | 14/1708 [00:00<01:08, 24.81it/s]\u001b[A\n",
            "  1%|          | 17/1708 [00:00<01:12, 23.18it/s]\u001b[A\n",
            "  1%|▏         | 24/1708 [00:00<00:59, 28.19it/s]\u001b[A\n",
            "  2%|▏         | 28/1708 [00:00<00:59, 28.21it/s]\u001b[A\n",
            "  2%|▏         | 32/1708 [00:01<00:58, 28.84it/s]\u001b[A\n",
            "  2%|▏         | 36/1708 [00:01<00:53, 31.24it/s]\u001b[A\n",
            "  2%|▏         | 41/1708 [00:01<01:04, 26.01it/s]\u001b[A\n",
            "  3%|▎         | 45/1708 [00:01<00:58, 28.64it/s]\u001b[A\n",
            "  3%|▎         | 49/1708 [00:01<00:53, 31.09it/s]\u001b[A\n",
            "  3%|▎         | 53/1708 [00:01<01:00, 27.39it/s]\u001b[A\n",
            "  3%|▎         | 58/1708 [00:02<01:02, 26.19it/s]\u001b[A\n",
            "  4%|▎         | 63/1708 [00:02<00:56, 28.98it/s]\u001b[A\n",
            "  4%|▍         | 71/1708 [00:02<00:45, 35.73it/s]\u001b[A\n",
            "  4%|▍         | 76/1708 [00:02<00:45, 35.82it/s]\u001b[A\n",
            "  5%|▍         | 81/1708 [00:02<00:49, 32.87it/s]\u001b[A\n",
            "  5%|▍         | 85/1708 [00:02<01:09, 23.42it/s]\u001b[A\n",
            "  5%|▌         | 89/1708 [00:03<01:06, 24.23it/s]\u001b[A\n",
            "  6%|▌         | 94/1708 [00:03<00:56, 28.37it/s]\u001b[A\n",
            "  6%|▌         | 98/1708 [00:03<01:07, 23.98it/s]\u001b[A\n",
            "  6%|▌         | 101/1708 [00:03<01:08, 23.30it/s]\u001b[A\n",
            "  6%|▋         | 107/1708 [00:03<00:56, 28.42it/s]\u001b[A\n",
            "  6%|▋         | 111/1708 [00:03<00:54, 29.50it/s]\u001b[A\n",
            "  7%|▋         | 115/1708 [00:03<00:51, 31.07it/s]\u001b[A\n",
            "  7%|▋         | 119/1708 [00:04<00:55, 28.75it/s]\u001b[A\n",
            "  7%|▋         | 123/1708 [00:04<01:04, 24.62it/s]\u001b[A\n",
            "  7%|▋         | 126/1708 [00:04<01:04, 24.60it/s]\u001b[A\n",
            "  8%|▊         | 129/1708 [00:04<01:07, 23.42it/s]\u001b[A\n",
            "  8%|▊         | 133/1708 [00:04<01:04, 24.59it/s]\u001b[A\n",
            "  8%|▊         | 137/1708 [00:04<00:57, 27.22it/s]\u001b[A\n",
            "  8%|▊         | 140/1708 [00:04<01:09, 22.49it/s]\u001b[A\n",
            "  8%|▊         | 143/1708 [00:05<01:36, 16.16it/s]\u001b[A\n",
            "  9%|▊         | 149/1708 [00:05<01:30, 17.31it/s]\u001b[A\n",
            "  9%|▉         | 153/1708 [00:05<01:19, 19.56it/s]\u001b[A\n",
            "  9%|▉         | 157/1708 [00:05<01:07, 22.86it/s]\u001b[A\n",
            " 10%|▉         | 165/1708 [00:05<00:54, 28.55it/s]\u001b[A\n",
            " 10%|▉         | 170/1708 [00:06<00:47, 32.26it/s]\u001b[A\n",
            " 10%|█         | 175/1708 [00:06<01:00, 25.22it/s]\u001b[A\n",
            " 10%|█         | 179/1708 [00:06<01:08, 22.20it/s]\u001b[A\n",
            " 11%|█         | 182/1708 [00:06<01:11, 21.32it/s]\u001b[A\n",
            " 11%|█         | 185/1708 [00:06<01:07, 22.67it/s]\u001b[A\n",
            " 11%|█         | 191/1708 [00:07<01:02, 24.32it/s]\u001b[A\n",
            " 11%|█▏        | 196/1708 [00:07<00:54, 27.89it/s]\u001b[A\n",
            " 12%|█▏        | 200/1708 [00:07<01:01, 24.68it/s]\u001b[A\n",
            " 12%|█▏        | 203/1708 [00:07<01:32, 16.28it/s]\u001b[A\n",
            " 12%|█▏        | 207/1708 [00:07<01:16, 19.58it/s]\u001b[A\n",
            " 12%|█▏        | 211/1708 [00:08<01:20, 18.71it/s]\u001b[A\n",
            " 13%|█▎        | 214/1708 [00:08<01:22, 18.12it/s]\u001b[A\n",
            " 13%|█▎        | 217/1708 [00:08<01:33, 15.94it/s]\u001b[A\n",
            " 13%|█▎        | 219/1708 [00:08<01:35, 15.54it/s]\u001b[A\n",
            " 13%|█▎        | 223/1708 [00:08<01:24, 17.66it/s]\u001b[A\n",
            " 13%|█▎        | 229/1708 [00:08<01:07, 21.91it/s]\u001b[A\n",
            " 14%|█▎        | 234/1708 [00:09<00:58, 25.35it/s]\u001b[A\n",
            " 14%|█▍        | 238/1708 [00:09<00:55, 26.50it/s]\u001b[A\n",
            " 14%|█▍        | 242/1708 [00:09<00:52, 28.08it/s]\u001b[A\n",
            " 14%|█▍        | 246/1708 [00:09<00:51, 28.29it/s]\u001b[A\n",
            " 15%|█▍        | 250/1708 [00:09<00:47, 30.72it/s]\u001b[A\n",
            " 15%|█▌        | 258/1708 [00:09<00:38, 37.49it/s]\u001b[A\n",
            " 15%|█▌        | 263/1708 [00:09<00:53, 26.85it/s]\u001b[A\n",
            " 16%|█▌        | 267/1708 [00:10<00:55, 26.16it/s]\u001b[A\n",
            " 16%|█▌        | 271/1708 [00:10<00:56, 25.60it/s]\u001b[A\n",
            " 16%|█▌        | 276/1708 [00:10<01:00, 23.69it/s]\u001b[A\n",
            " 16%|█▋        | 280/1708 [00:10<00:54, 26.10it/s]\u001b[A\n",
            " 17%|█▋        | 284/1708 [00:10<00:59, 24.02it/s]\u001b[A\n",
            " 17%|█▋        | 290/1708 [00:10<00:51, 27.67it/s]\u001b[A\n",
            " 17%|█▋        | 294/1708 [00:11<01:14, 18.87it/s]\u001b[A\n",
            " 17%|█▋        | 297/1708 [00:11<02:03, 11.40it/s]\u001b[A\n",
            " 18%|█▊        | 305/1708 [00:11<01:32, 15.22it/s]\u001b[A\n",
            " 18%|█▊        | 309/1708 [00:12<01:47, 13.02it/s]\u001b[A\n",
            " 18%|█▊        | 312/1708 [00:12<01:34, 14.70it/s]\u001b[A\n",
            " 18%|█▊        | 315/1708 [00:12<01:33, 14.90it/s]\u001b[A\n",
            " 19%|█▊        | 320/1708 [00:12<01:16, 18.24it/s]\u001b[A\n",
            " 19%|█▉        | 327/1708 [00:12<01:01, 22.55it/s]\u001b[A\n",
            " 19%|█▉        | 331/1708 [00:13<00:53, 25.57it/s]\u001b[A\n",
            " 20%|█▉        | 338/1708 [00:13<00:51, 26.85it/s]\u001b[A\n",
            " 20%|██        | 342/1708 [00:13<00:58, 23.18it/s]\u001b[A\n",
            " 20%|██        | 347/1708 [00:13<00:50, 27.11it/s]\u001b[A\n",
            " 21%|██        | 351/1708 [00:13<00:50, 26.77it/s]\u001b[A\n",
            " 21%|██        | 360/1708 [00:14<00:45, 29.88it/s]\u001b[A\n",
            " 21%|██▏       | 367/1708 [00:14<00:37, 35.84it/s]\u001b[A\n",
            " 22%|██▏       | 372/1708 [00:14<00:38, 34.46it/s]\u001b[A\n",
            " 22%|██▏       | 377/1708 [00:14<00:39, 33.40it/s]\u001b[A\n",
            " 22%|██▏       | 383/1708 [00:14<00:36, 36.23it/s]\u001b[A\n",
            " 23%|██▎       | 387/1708 [00:14<00:51, 25.48it/s]\u001b[A\n",
            " 23%|██▎       | 391/1708 [00:14<00:46, 28.24it/s]\u001b[A\n",
            " 23%|██▎       | 397/1708 [00:15<00:39, 33.30it/s]\u001b[A\n",
            " 24%|██▎       | 402/1708 [00:15<00:53, 24.27it/s]\u001b[A\n",
            " 24%|██▍       | 406/1708 [00:15<01:09, 18.78it/s]\u001b[A\n",
            " 24%|██▍       | 409/1708 [00:15<01:11, 18.16it/s]\u001b[A\n",
            " 24%|██▍       | 414/1708 [00:15<00:59, 21.92it/s]\u001b[A\n",
            " 24%|██▍       | 417/1708 [00:16<01:05, 19.58it/s]\u001b[A\n",
            " 25%|██▍       | 422/1708 [00:16<00:59, 21.79it/s]\u001b[A\n",
            " 25%|██▍       | 425/1708 [00:16<01:29, 14.36it/s]\u001b[A\n",
            " 25%|██▌       | 432/1708 [00:16<01:08, 18.64it/s]\u001b[A\n",
            " 26%|██▌       | 438/1708 [00:16<00:54, 23.22it/s]\u001b[A\n",
            " 26%|██▌       | 442/1708 [00:17<00:48, 25.87it/s]\u001b[A\n",
            " 26%|██▌       | 446/1708 [00:17<00:49, 25.38it/s]\u001b[A\n",
            " 26%|██▋       | 451/1708 [00:17<00:46, 27.27it/s]\u001b[A\n",
            " 27%|██▋       | 455/1708 [00:17<00:41, 29.84it/s]\u001b[A\n",
            " 27%|██▋       | 459/1708 [00:17<00:42, 29.60it/s]\u001b[A\n",
            " 27%|██▋       | 463/1708 [00:17<00:42, 29.27it/s]\u001b[A\n",
            " 28%|██▊       | 470/1708 [00:17<00:35, 35.16it/s]\u001b[A\n",
            " 28%|██▊       | 475/1708 [00:18<00:34, 35.70it/s]\u001b[A\n",
            " 28%|██▊       | 480/1708 [00:18<00:31, 38.51it/s]\u001b[A\n",
            " 28%|██▊       | 485/1708 [00:18<00:49, 24.75it/s]\u001b[A\n",
            " 29%|██▊       | 489/1708 [00:18<00:46, 26.15it/s]\u001b[A\n",
            " 29%|██▉       | 493/1708 [00:18<00:50, 24.22it/s]\u001b[A\n",
            " 29%|██▉       | 501/1708 [00:18<00:43, 27.90it/s]\u001b[A\n",
            " 30%|██▉       | 505/1708 [00:19<00:41, 28.75it/s]\u001b[A\n",
            " 30%|██▉       | 509/1708 [00:19<00:40, 29.74it/s]\u001b[A\n",
            " 30%|███       | 513/1708 [00:19<00:58, 20.49it/s]\u001b[A\n",
            " 30%|███       | 518/1708 [00:19<00:50, 23.51it/s]\u001b[A\n",
            " 31%|███       | 521/1708 [00:19<00:52, 22.58it/s]\u001b[A\n",
            " 31%|███       | 524/1708 [00:20<01:07, 17.62it/s]\u001b[A\n",
            " 31%|███       | 529/1708 [00:20<00:54, 21.68it/s]\u001b[A\n",
            " 31%|███▏      | 534/1708 [00:20<00:45, 25.60it/s]\u001b[A\n",
            " 31%|███▏      | 538/1708 [00:20<00:52, 22.29it/s]\u001b[A\n",
            " 32%|███▏      | 541/1708 [00:20<00:55, 21.07it/s]\u001b[A\n",
            " 32%|███▏      | 546/1708 [00:20<00:55, 21.06it/s]\u001b[A\n",
            " 32%|███▏      | 549/1708 [00:21<00:56, 20.60it/s]\u001b[A\n",
            " 32%|███▏      | 552/1708 [00:21<01:03, 18.26it/s]\u001b[A\n",
            " 33%|███▎      | 557/1708 [00:21<00:58, 19.64it/s]\u001b[A\n",
            " 33%|███▎      | 562/1708 [00:21<00:48, 23.60it/s]\u001b[A\n",
            " 33%|███▎      | 565/1708 [00:22<01:17, 14.70it/s]\u001b[A\n",
            " 33%|███▎      | 568/1708 [00:22<01:30, 12.63it/s]\u001b[A\n",
            " 34%|███▎      | 574/1708 [00:22<01:08, 16.51it/s]\u001b[A\n",
            " 34%|███▍      | 578/1708 [00:22<01:04, 17.57it/s]\u001b[A\n",
            " 34%|███▍      | 581/1708 [00:22<00:56, 20.05it/s]\u001b[A\n",
            " 34%|███▍      | 584/1708 [00:22<00:59, 18.95it/s]\u001b[A\n",
            " 34%|███▍      | 589/1708 [00:23<00:49, 22.49it/s]\u001b[A\n",
            " 35%|███▍      | 592/1708 [00:23<01:27, 12.74it/s]\u001b[A\n",
            " 35%|███▍      | 595/1708 [00:23<01:13, 15.19it/s]\u001b[A\n",
            " 35%|███▌      | 598/1708 [00:23<01:08, 16.13it/s]\u001b[A\n",
            " 35%|███▌      | 601/1708 [00:23<00:59, 18.54it/s]\u001b[A\n",
            " 35%|███▌      | 604/1708 [00:24<00:54, 20.38it/s]\u001b[A\n",
            " 36%|███▌      | 613/1708 [00:24<00:46, 23.70it/s]\u001b[A\n",
            " 36%|███▌      | 617/1708 [00:24<00:57, 19.11it/s]\u001b[A\n",
            " 36%|███▋      | 621/1708 [00:24<00:49, 21.94it/s]\u001b[A\n",
            " 37%|███▋      | 626/1708 [00:24<00:46, 23.46it/s]\u001b[A\n",
            " 37%|███▋      | 629/1708 [00:25<00:48, 22.29it/s]\u001b[A\n",
            " 37%|███▋      | 635/1708 [00:25<00:39, 26.87it/s]\u001b[A\n",
            " 37%|███▋      | 640/1708 [00:25<00:35, 30.43it/s]\u001b[A\n",
            " 38%|███▊      | 644/1708 [00:25<00:50, 21.15it/s]\u001b[A\n",
            " 38%|███▊      | 648/1708 [00:25<00:43, 24.46it/s]\u001b[A\n",
            " 38%|███▊      | 652/1708 [00:25<00:42, 24.75it/s]\u001b[A\n",
            " 38%|███▊      | 656/1708 [00:26<00:45, 23.28it/s]\u001b[A\n",
            " 39%|███▊      | 659/1708 [00:26<00:53, 19.43it/s]\u001b[A\n",
            " 39%|███▉      | 663/1708 [00:26<00:59, 17.63it/s]\u001b[A\n",
            " 39%|███▉      | 666/1708 [00:26<01:05, 15.80it/s]\u001b[A\n",
            " 39%|███▉      | 673/1708 [00:26<00:51, 20.10it/s]\u001b[A\n",
            " 40%|███▉      | 676/1708 [00:27<00:53, 19.27it/s]\u001b[A\n",
            " 40%|███▉      | 681/1708 [00:27<00:59, 17.24it/s]\u001b[A\n",
            " 40%|████      | 684/1708 [00:27<01:05, 15.54it/s]\u001b[A\n",
            " 40%|████      | 686/1708 [00:27<01:04, 15.82it/s]\u001b[A\n",
            " 40%|████      | 688/1708 [00:27<01:01, 16.49it/s]\u001b[A\n",
            " 41%|████      | 694/1708 [00:28<00:50, 19.91it/s]\u001b[A\n",
            " 41%|████      | 699/1708 [00:28<00:41, 24.27it/s]\u001b[A\n",
            " 41%|████      | 703/1708 [00:28<00:48, 20.75it/s]\u001b[A\n",
            " 42%|████▏     | 709/1708 [00:28<00:42, 23.23it/s]\u001b[A\n",
            " 42%|████▏     | 713/1708 [00:28<00:37, 26.21it/s]\u001b[A\n",
            " 42%|████▏     | 717/1708 [00:28<00:33, 29.20it/s]\u001b[A\n",
            " 42%|████▏     | 721/1708 [00:28<00:35, 27.72it/s]\u001b[A\n",
            " 43%|████▎     | 726/1708 [00:29<00:34, 28.31it/s]\u001b[A\n",
            " 43%|████▎     | 731/1708 [00:29<00:32, 30.50it/s]\u001b[A\n",
            " 43%|████▎     | 735/1708 [00:29<00:42, 22.86it/s]\u001b[A\n",
            " 43%|████▎     | 738/1708 [00:29<00:46, 20.72it/s]\u001b[A\n",
            " 43%|████▎     | 741/1708 [00:29<00:54, 17.84it/s]\u001b[A\n",
            " 44%|████▎     | 744/1708 [00:30<00:50, 19.15it/s]\u001b[A\n",
            " 44%|████▎     | 747/1708 [00:30<00:56, 17.11it/s]\u001b[A\n",
            " 44%|████▍     | 751/1708 [00:30<00:48, 19.87it/s]\u001b[A\n",
            " 44%|████▍     | 757/1708 [00:30<00:38, 24.68it/s]\u001b[A\n",
            " 45%|████▍     | 761/1708 [00:30<00:45, 20.87it/s]\u001b[A\n",
            " 45%|████▌     | 770/1708 [00:30<00:35, 26.55it/s]\u001b[A\n",
            " 45%|████▌     | 777/1708 [00:31<00:32, 28.31it/s]\u001b[A\n",
            " 46%|████▌     | 781/1708 [00:31<01:02, 14.75it/s]\u001b[A\n",
            " 46%|████▌     | 785/1708 [00:31<00:52, 17.66it/s]\u001b[A\n",
            " 46%|████▋     | 793/1708 [00:31<00:40, 22.82it/s]\u001b[A\n",
            " 47%|████▋     | 798/1708 [00:32<00:40, 22.62it/s]\u001b[A\n",
            " 47%|████▋     | 802/1708 [00:32<00:35, 25.17it/s]\u001b[A\n",
            " 47%|████▋     | 806/1708 [00:32<00:33, 27.15it/s]\u001b[A\n",
            " 47%|████▋     | 810/1708 [00:32<00:34, 26.09it/s]\u001b[A\n",
            " 48%|████▊     | 816/1708 [00:32<00:28, 30.81it/s]\u001b[A\n",
            " 48%|████▊     | 823/1708 [00:32<00:24, 36.22it/s]\u001b[A\n",
            " 48%|████▊     | 828/1708 [00:32<00:22, 39.40it/s]\u001b[A\n",
            " 49%|████▉     | 834/1708 [00:32<00:20, 43.11it/s]\u001b[A\n",
            " 49%|████▉     | 839/1708 [00:33<00:21, 40.75it/s]\u001b[A\n",
            " 49%|████▉     | 844/1708 [00:33<00:37, 22.92it/s]\u001b[A\n",
            " 50%|████▉     | 849/1708 [00:33<00:34, 25.17it/s]\u001b[A\n",
            " 50%|█████     | 855/1708 [00:33<00:29, 29.07it/s]\u001b[A\n",
            " 50%|█████     | 859/1708 [00:34<00:32, 26.23it/s]\u001b[A\n",
            " 51%|█████     | 863/1708 [00:34<00:35, 23.57it/s]\u001b[A\n",
            " 51%|█████     | 866/1708 [00:34<00:42, 19.94it/s]\u001b[A\n",
            " 51%|█████     | 869/1708 [00:34<00:48, 17.35it/s]\u001b[A\n",
            " 51%|█████     | 872/1708 [00:34<00:52, 15.84it/s]\u001b[A\n",
            " 51%|█████     | 874/1708 [00:35<00:55, 14.95it/s]\u001b[A\n",
            " 51%|█████▏    | 878/1708 [00:35<00:45, 18.37it/s]\u001b[A\n",
            " 52%|█████▏    | 881/1708 [00:35<00:46, 17.72it/s]\u001b[A\n",
            " 52%|█████▏    | 884/1708 [00:35<00:43, 19.04it/s]\u001b[A\n",
            " 52%|█████▏    | 889/1708 [00:35<00:35, 22.96it/s]\u001b[A\n",
            " 52%|█████▏    | 892/1708 [00:35<00:50, 16.09it/s]\u001b[A\n",
            " 52%|█████▏    | 895/1708 [00:36<00:48, 16.70it/s]\u001b[A\n",
            " 53%|█████▎    | 898/1708 [00:36<00:47, 17.16it/s]\u001b[A\n",
            " 53%|█████▎    | 901/1708 [00:36<00:57, 14.15it/s]\u001b[A\n",
            " 53%|█████▎    | 907/1708 [00:36<00:43, 18.27it/s]\u001b[A\n",
            " 53%|█████▎    | 910/1708 [00:36<00:38, 20.56it/s]\u001b[A\n",
            " 54%|█████▎    | 914/1708 [00:36<00:37, 21.15it/s]\u001b[A\n",
            " 54%|█████▎    | 917/1708 [00:37<00:36, 21.75it/s]\u001b[A\n",
            " 54%|█████▍    | 922/1708 [00:37<00:30, 25.80it/s]\u001b[A\n",
            " 54%|█████▍    | 928/1708 [00:37<00:27, 28.31it/s]\u001b[A\n",
            " 55%|█████▍    | 932/1708 [00:37<00:25, 30.34it/s]\u001b[A\n",
            " 55%|█████▍    | 936/1708 [00:37<00:25, 29.99it/s]\u001b[A\n",
            " 55%|█████▌    | 940/1708 [00:37<00:31, 24.03it/s]\u001b[A\n",
            " 55%|█████▌    | 943/1708 [00:37<00:33, 22.93it/s]\u001b[A\n",
            " 56%|█████▌    | 950/1708 [00:38<00:26, 28.14it/s]\u001b[A\n",
            " 56%|█████▌    | 955/1708 [00:38<00:23, 32.20it/s]\u001b[A\n",
            " 56%|█████▋    | 961/1708 [00:38<00:24, 31.00it/s]\u001b[A\n",
            " 56%|█████▋    | 965/1708 [00:38<00:37, 20.01it/s]\u001b[A\n",
            " 57%|█████▋    | 968/1708 [00:38<00:34, 21.76it/s]\u001b[A\n",
            " 57%|█████▋    | 974/1708 [00:38<00:29, 24.99it/s]\u001b[A\n",
            " 57%|█████▋    | 978/1708 [00:39<00:38, 18.77it/s]\u001b[A\n",
            " 57%|█████▋    | 982/1708 [00:39<00:32, 22.11it/s]\u001b[A\n",
            " 58%|█████▊    | 990/1708 [00:39<00:25, 28.11it/s]\u001b[A\n",
            " 58%|█████▊    | 995/1708 [00:39<00:24, 29.58it/s]\u001b[A\n",
            " 59%|█████▊    | 1000/1708 [00:39<00:23, 29.72it/s]\u001b[A\n",
            " 59%|█████▉    | 1007/1708 [00:39<00:20, 34.62it/s]\u001b[A\n",
            " 59%|█████▉    | 1013/1708 [00:40<00:22, 31.43it/s]\u001b[A\n",
            " 60%|█████▉    | 1020/1708 [00:40<00:18, 37.65it/s]\u001b[A\n",
            " 60%|██████    | 1025/1708 [00:40<00:20, 32.74it/s]\u001b[A\n",
            " 60%|██████    | 1030/1708 [00:40<00:24, 27.14it/s]\u001b[A\n",
            " 61%|██████    | 1034/1708 [00:40<00:22, 29.62it/s]\u001b[A\n",
            " 61%|██████    | 1038/1708 [00:41<00:33, 19.79it/s]\u001b[A\n",
            " 61%|██████    | 1043/1708 [00:41<00:27, 24.16it/s]\u001b[A\n",
            " 61%|██████▏   | 1047/1708 [00:41<00:41, 16.11it/s]\u001b[A\n",
            " 61%|██████▏   | 1050/1708 [00:41<00:39, 16.79it/s]\u001b[A\n",
            " 62%|██████▏   | 1053/1708 [00:42<00:53, 12.30it/s]\u001b[A\n",
            " 62%|██████▏   | 1057/1708 [00:42<00:43, 14.80it/s]\u001b[A\n",
            " 62%|██████▏   | 1062/1708 [00:42<00:34, 18.65it/s]\u001b[A\n",
            " 62%|██████▏   | 1065/1708 [00:42<00:32, 19.91it/s]\u001b[A\n",
            " 63%|██████▎   | 1068/1708 [00:42<00:36, 17.58it/s]\u001b[A\n",
            " 63%|██████▎   | 1072/1708 [00:43<00:31, 19.94it/s]\u001b[A\n",
            " 63%|██████▎   | 1075/1708 [00:43<00:35, 17.82it/s]\u001b[A\n",
            " 63%|██████▎   | 1082/1708 [00:43<00:27, 22.88it/s]\u001b[A\n",
            " 64%|██████▎   | 1086/1708 [00:43<00:25, 24.73it/s]\u001b[A\n",
            " 64%|██████▍   | 1090/1708 [00:43<00:22, 27.39it/s]\u001b[A\n",
            " 64%|██████▍   | 1094/1708 [00:43<00:30, 20.20it/s]\u001b[A\n",
            " 64%|██████▍   | 1099/1708 [00:44<00:25, 24.29it/s]\u001b[A\n",
            " 65%|██████▍   | 1105/1708 [00:44<00:22, 26.96it/s]\u001b[A\n",
            " 65%|██████▌   | 1111/1708 [00:44<00:18, 31.59it/s]\u001b[A\n",
            " 65%|██████▌   | 1115/1708 [00:44<00:24, 23.98it/s]\u001b[A\n",
            " 66%|██████▌   | 1120/1708 [00:44<00:21, 27.86it/s]\u001b[A\n",
            " 66%|██████▌   | 1124/1708 [00:44<00:21, 26.92it/s]\u001b[A\n",
            " 66%|██████▌   | 1128/1708 [00:45<00:24, 23.45it/s]\u001b[A\n",
            " 66%|██████▋   | 1133/1708 [00:45<00:21, 27.37it/s]\u001b[A\n",
            " 67%|██████▋   | 1137/1708 [00:45<00:20, 28.41it/s]\u001b[A\n",
            " 67%|██████▋   | 1141/1708 [00:45<00:28, 19.97it/s]\u001b[A\n",
            " 67%|██████▋   | 1145/1708 [00:45<00:26, 21.30it/s]\u001b[A\n",
            " 67%|██████▋   | 1150/1708 [00:45<00:22, 24.96it/s]\u001b[A\n",
            " 68%|██████▊   | 1155/1708 [00:46<00:19, 28.46it/s]\u001b[A\n",
            " 68%|██████▊   | 1163/1708 [00:46<00:17, 30.38it/s]\u001b[A\n",
            " 68%|██████▊   | 1167/1708 [00:46<00:23, 23.01it/s]\u001b[A\n",
            " 69%|██████▊   | 1170/1708 [00:46<00:31, 17.32it/s]\u001b[A\n",
            " 69%|██████▉   | 1175/1708 [00:46<00:26, 20.34it/s]\u001b[A\n",
            " 69%|██████▉   | 1179/1708 [00:47<00:25, 20.96it/s]\u001b[A\n",
            " 69%|██████▉   | 1182/1708 [00:47<00:26, 19.83it/s]\u001b[A\n",
            " 69%|██████▉   | 1186/1708 [00:47<00:22, 22.76it/s]\u001b[A\n",
            " 70%|██████▉   | 1190/1708 [00:47<00:21, 23.64it/s]\u001b[A\n",
            " 70%|██████▉   | 1193/1708 [00:47<00:21, 23.82it/s]\u001b[A\n",
            " 70%|███████   | 1201/1708 [00:47<00:17, 29.80it/s]\u001b[A\n",
            " 71%|███████   | 1205/1708 [00:48<00:20, 24.01it/s]\u001b[A\n",
            " 71%|███████   | 1209/1708 [00:48<00:26, 18.80it/s]\u001b[A\n",
            " 71%|███████   | 1215/1708 [00:48<00:20, 23.55it/s]\u001b[A\n",
            " 71%|███████▏  | 1220/1708 [00:48<00:19, 25.48it/s]\u001b[A\n",
            " 72%|███████▏  | 1224/1708 [00:48<00:19, 24.23it/s]\u001b[A\n",
            " 72%|███████▏  | 1228/1708 [00:49<00:24, 19.33it/s]\u001b[A\n",
            " 72%|███████▏  | 1231/1708 [00:49<00:26, 17.95it/s]\u001b[A\n",
            " 72%|███████▏  | 1235/1708 [00:49<00:23, 20.26it/s]\u001b[A\n",
            " 72%|███████▏  | 1238/1708 [00:49<00:21, 21.74it/s]\u001b[A\n",
            " 73%|███████▎  | 1241/1708 [00:49<00:33, 13.93it/s]\u001b[A\n",
            " 73%|███████▎  | 1246/1708 [00:50<00:27, 16.97it/s]\u001b[A\n",
            " 73%|███████▎  | 1252/1708 [00:50<00:22, 20.29it/s]\u001b[A\n",
            " 74%|███████▎  | 1257/1708 [00:50<00:18, 24.01it/s]\u001b[A\n",
            " 74%|███████▍  | 1265/1708 [00:50<00:17, 25.38it/s]\u001b[A\n",
            " 74%|███████▍  | 1272/1708 [00:50<00:13, 31.25it/s]\u001b[A\n",
            " 75%|███████▍  | 1277/1708 [00:51<00:16, 25.38it/s]\u001b[A\n",
            " 75%|███████▌  | 1281/1708 [00:51<00:18, 23.05it/s]\u001b[A\n",
            " 75%|███████▌  | 1285/1708 [00:51<00:17, 24.84it/s]\u001b[A\n",
            " 75%|███████▌  | 1289/1708 [00:51<00:18, 22.44it/s]\u001b[A\n",
            " 76%|███████▌  | 1292/1708 [00:51<00:26, 15.85it/s]\u001b[A\n",
            " 76%|███████▌  | 1295/1708 [00:52<00:35, 11.61it/s]\u001b[A\n",
            " 76%|███████▌  | 1298/1708 [00:52<00:29, 13.90it/s]\u001b[A\n",
            " 76%|███████▌  | 1301/1708 [00:52<00:28, 14.14it/s]\u001b[A\n",
            " 76%|███████▋  | 1305/1708 [00:52<00:23, 17.40it/s]\u001b[A\n",
            " 77%|███████▋  | 1308/1708 [00:52<00:20, 19.47it/s]\u001b[A\n",
            " 77%|███████▋  | 1311/1708 [00:53<00:19, 20.15it/s]\u001b[A\n",
            " 77%|███████▋  | 1314/1708 [00:53<00:17, 22.26it/s]\u001b[A\n",
            " 77%|███████▋  | 1319/1708 [00:53<00:15, 25.11it/s]\u001b[A\n",
            " 78%|███████▊  | 1325/1708 [00:53<00:12, 29.70it/s]\u001b[A\n",
            " 78%|███████▊  | 1329/1708 [00:53<00:12, 30.41it/s]\u001b[A\n",
            " 78%|███████▊  | 1333/1708 [00:53<00:11, 32.14it/s]\u001b[A\n",
            " 78%|███████▊  | 1338/1708 [00:53<00:10, 35.07it/s]\u001b[A\n",
            " 79%|███████▊  | 1342/1708 [00:53<00:11, 30.87it/s]\u001b[A\n",
            " 79%|███████▉  | 1346/1708 [00:54<00:11, 30.85it/s]\u001b[A\n",
            " 79%|███████▉  | 1350/1708 [00:54<00:12, 28.57it/s]\u001b[A\n",
            " 79%|███████▉  | 1354/1708 [00:54<00:11, 31.02it/s]\u001b[A\n",
            " 80%|███████▉  | 1358/1708 [00:54<00:12, 28.45it/s]\u001b[A\n",
            " 80%|███████▉  | 1362/1708 [00:54<00:11, 28.96it/s]\u001b[A\n",
            " 80%|███████▉  | 1366/1708 [00:54<00:11, 30.58it/s]\u001b[A\n",
            " 80%|████████  | 1371/1708 [00:54<00:10, 32.10it/s]\u001b[A\n",
            " 81%|████████  | 1375/1708 [00:54<00:09, 33.93it/s]\u001b[A\n",
            " 81%|████████  | 1379/1708 [00:55<00:12, 27.18it/s]\u001b[A\n",
            " 81%|████████  | 1384/1708 [00:55<00:10, 30.53it/s]\u001b[A\n",
            " 81%|████████▏ | 1390/1708 [00:55<00:09, 34.04it/s]\u001b[A\n",
            " 82%|████████▏ | 1394/1708 [00:55<00:16, 19.39it/s]\u001b[A\n",
            " 82%|████████▏ | 1400/1708 [00:55<00:12, 23.81it/s]\u001b[A\n",
            " 82%|████████▏ | 1405/1708 [00:56<00:11, 26.29it/s]\u001b[A\n",
            " 82%|████████▏ | 1409/1708 [00:56<00:15, 18.84it/s]\u001b[A\n",
            " 83%|████████▎ | 1414/1708 [00:56<00:13, 21.62it/s]\u001b[A\n",
            " 83%|████████▎ | 1420/1708 [00:56<00:11, 25.90it/s]\u001b[A\n",
            " 83%|████████▎ | 1425/1708 [00:56<00:10, 28.27it/s]\u001b[A\n",
            " 84%|████████▎ | 1429/1708 [00:56<00:09, 29.65it/s]\u001b[A\n",
            " 84%|████████▍ | 1433/1708 [00:57<00:10, 26.20it/s]\u001b[A\n",
            " 84%|████████▍ | 1438/1708 [00:57<00:10, 25.47it/s]\u001b[A\n",
            " 84%|████████▍ | 1442/1708 [00:57<00:09, 28.22it/s]\u001b[A\n",
            " 85%|████████▍ | 1446/1708 [00:57<00:10, 26.16it/s]\u001b[A\n",
            " 85%|████████▍ | 1450/1708 [00:57<00:11, 23.04it/s]\u001b[A\n",
            " 85%|████████▌ | 1454/1708 [00:58<00:12, 19.83it/s]\u001b[A\n",
            " 85%|████████▌ | 1457/1708 [00:58<00:11, 21.60it/s]\u001b[A\n",
            " 86%|████████▌ | 1462/1708 [00:58<00:09, 25.83it/s]\u001b[A\n",
            " 86%|████████▌ | 1469/1708 [00:58<00:07, 31.12it/s]\u001b[A\n",
            " 86%|████████▋ | 1476/1708 [00:58<00:06, 36.95it/s]\u001b[A\n",
            " 87%|████████▋ | 1481/1708 [00:58<00:09, 24.95it/s]\u001b[A\n",
            " 87%|████████▋ | 1486/1708 [00:59<00:08, 26.69it/s]\u001b[A\n",
            " 87%|████████▋ | 1492/1708 [00:59<00:07, 30.01it/s]\u001b[A\n",
            " 88%|████████▊ | 1498/1708 [00:59<00:06, 31.07it/s]\u001b[A\n",
            " 88%|████████▊ | 1502/1708 [00:59<00:07, 28.97it/s]\u001b[A\n",
            " 88%|████████▊ | 1508/1708 [00:59<00:06, 28.85it/s]\u001b[A\n",
            " 89%|████████▊ | 1512/1708 [01:00<00:08, 22.49it/s]\u001b[A\n",
            " 89%|████████▉ | 1523/1708 [01:00<00:07, 24.74it/s]\u001b[A\n",
            " 89%|████████▉ | 1527/1708 [01:00<00:06, 26.57it/s]\u001b[A\n",
            " 90%|████████▉ | 1532/1708 [01:00<00:05, 30.49it/s]\u001b[A\n",
            " 90%|████████▉ | 1536/1708 [01:00<00:05, 29.49it/s]\u001b[A\n",
            " 90%|█████████ | 1540/1708 [01:00<00:06, 27.93it/s]\u001b[A\n",
            " 90%|█████████ | 1544/1708 [01:01<00:05, 28.11it/s]\u001b[A\n",
            " 91%|█████████ | 1548/1708 [01:01<00:06, 26.43it/s]\u001b[A\n",
            " 91%|█████████ | 1551/1708 [01:01<00:10, 15.66it/s]\u001b[A\n",
            " 91%|█████████ | 1557/1708 [01:01<00:07, 19.96it/s]\u001b[A\n",
            " 92%|█████████▏| 1564/1708 [01:01<00:05, 24.92it/s]\u001b[A\n",
            " 92%|█████████▏| 1569/1708 [01:02<00:06, 20.76it/s]\u001b[A\n",
            " 92%|█████████▏| 1573/1708 [01:02<00:05, 23.27it/s]\u001b[A\n",
            " 92%|█████████▏| 1577/1708 [01:02<00:05, 24.82it/s]\u001b[A\n",
            " 93%|█████████▎| 1583/1708 [01:02<00:04, 29.91it/s]\u001b[A\n",
            " 93%|█████████▎| 1587/1708 [01:02<00:04, 29.38it/s]\u001b[A\n",
            " 93%|█████████▎| 1594/1708 [01:02<00:03, 34.12it/s]\u001b[A\n",
            " 94%|█████████▎| 1601/1708 [01:02<00:02, 35.86it/s]\u001b[A\n",
            " 94%|█████████▍| 1607/1708 [01:03<00:02, 39.34it/s]\u001b[A\n",
            " 94%|█████████▍| 1612/1708 [01:03<00:02, 41.04it/s]\u001b[A\n",
            " 95%|█████████▍| 1618/1708 [01:03<00:02, 43.91it/s]\u001b[A\n",
            " 95%|█████████▌| 1624/1708 [01:03<00:02, 41.46it/s]\u001b[A\n",
            " 95%|█████████▌| 1629/1708 [01:03<00:02, 32.59it/s]\u001b[A\n",
            " 96%|█████████▌| 1633/1708 [01:03<00:02, 32.41it/s]\u001b[A\n",
            " 96%|█████████▌| 1637/1708 [01:04<00:03, 20.37it/s]\u001b[A\n",
            " 96%|█████████▌| 1642/1708 [01:04<00:02, 23.86it/s]\u001b[A\n",
            " 97%|█████████▋| 1652/1708 [01:04<00:01, 30.90it/s]\u001b[A\n",
            " 97%|█████████▋| 1660/1708 [01:04<00:01, 32.69it/s]\u001b[A\n",
            " 97%|█████████▋| 1665/1708 [01:04<00:01, 33.42it/s]\u001b[A\n",
            " 98%|█████████▊| 1670/1708 [01:05<00:01, 28.24it/s]\u001b[A\n",
            " 98%|█████████▊| 1674/1708 [01:05<00:01, 24.96it/s]\u001b[A\n",
            " 98%|█████████▊| 1678/1708 [01:05<00:01, 25.69it/s]\u001b[A\n",
            " 98%|█████████▊| 1682/1708 [01:05<00:01, 24.73it/s]\u001b[A\n",
            " 99%|█████████▊| 1686/1708 [01:05<00:00, 27.42it/s]\u001b[A\n",
            " 99%|█████████▉| 1690/1708 [01:05<00:00, 29.26it/s]\u001b[A\n",
            " 99%|█████████▉| 1695/1708 [01:05<00:00, 33.38it/s]\u001b[A\n",
            "100%|██████████| 1708/1708 [01:06<00:00, 25.86it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "423100\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FKzavEr9Pbf3",
        "colab_type": "text"
      },
      "source": [
        "## Topk"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kC9jLdYdPdTy",
        "colab_type": "code",
        "outputId": "fad09e72-33b9-4e11-c9f8-f19af98189b4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        }
      },
      "source": [
        "# time-aware-direction item-cf\n",
        "recom_item = []\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    for i in tqdm(click_test['user_id'].unique()):\n",
        "        rank_item = [(top_item_click, -1000)] # fake \n",
        "        for j in rank_item:\n",
        "            recom_item.append([i, j[0], j[1]])\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_topk_origin_v3.csv', index=False, header=None)\n",
        "\n",
        "# result = get_predict(recom_df, 'sim', top50_click)\n",
        "result = get_feat_predict(recom_df, whole_click, user_feat_df, top50_click, feat_cols=['gender','age_level', 'city_level'])\n",
        "result.to_csv(output_path + '/baseline_topk_v3.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1663/1663 [00:00<00:00, 442752.80it/s]"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n",
            "phase: 1\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "\n",
            "100%|██████████| 1726/1726 [00:00<00:00, 489907.88it/s]\n",
            "100%|██████████| 1690/1690 [00:00<00:00, 435403.79it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 2\n",
            "phase: 3\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "100%|██████████| 1675/1675 [00:00<00:00, 632924.25it/s]\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "1536 76800 76800\n",
            "6754 337700 337700\n",
            "414500\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0IycR3bmy0U8",
        "colab_type": "text"
      },
      "source": [
        "## DeepFM"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bEnRaIvnZ2kM",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# time-aware-direction item-cf\n",
        "ranking = True\n",
        "recom_item = []\n",
        "ranking_recom_df = pd.DataFrame()\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "\n",
        "    item_sim_list, user_item_dict = get_time_dir_aware_sim_item(all_click, 'user_id', 'item_id') \n",
        "    print(len(item_sim_list), len(user_item_dict))\n",
        "\n",
        "    top_item_click = whole_click['item_id'].value_counts().index[0]\n",
        "    phase_recom_item = []\n",
        "    for i in tqdm(click_test['user_id'].unique()):\n",
        "        rank_item = time_aware_recommend(item_sim_list, user_item_dict, i, recommend_num, 50)\n",
        "        \n",
        "        if len(rank_item) == 0:\n",
        "            print('user={} has no recommend results...'.format(i))\n",
        "            rank_item = [(top_item_click, -1000.0)] # fake \n",
        "        for j in rank_item:\n",
        "            phase_recom_item.append([i, j[0], j[1]])\n",
        "        \n",
        "    recom_item.extend(phase_recom_item)\n",
        "    # ranking\n",
        "    if ranking:\n",
        "      phase_recom_df = pd.DataFrame(phase_recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "      sparse_feat, dense_feat, feat_lbe_dict, feature_names, model = deepfm_training(all_click, item_feat_df, user_feat_df, phase=c)\n",
        "      infer_input = organize_recall_item_features(phase_recom_df, feat_lbe_dict, sparse_feat, dense_feat, feature_names)\n",
        "      infer_ans = model.predict(infer_input, batch_size=BATCH_SIZE)\n",
        "      phase_recom_df['sim'] = infer_ans # override\n",
        "\n",
        "      ranking_recom_df = ranking_recom_df.append(phase_recom_df)\n",
        "\n",
        "ranking_recom_df.to_csv(output_path + '/baseline_itemcf_origin_ranking_v1.csv', index=False, header=None)\n",
        "\n",
        "# recom_df = pd.DataFrame(recom_item, columns=['user_id', 'item_id', 'sim'])\n",
        "# recom_df[recom_df['sim']>0].to_csv(output_path + '/baseline_itemcf_origin_v5.csv', index=False, header=None)\n",
        "\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "\n",
        "# fill\n",
        "result = get_feat_predict(ranking_recom_df, whole_click, user_feat_df, top50_click, feat_cols=['gender','age_level', 'city_level'])\n",
        "result.to_csv(output_path + '/baseline_itemcf_ranking_v1.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "intzDc9M3NqH",
        "colab_type": "code",
        "outputId": "669a5b9d-ea7d-4654-c61d-937328b4138c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        }
      },
      "source": [
        "item_feat_df"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>item_id</th>\n",
              "      <th>txt_embed_0</th>\n",
              "      <th>txt_embed_1</th>\n",
              "      <th>txt_embed_2</th>\n",
              "      <th>txt_embed_3</th>\n",
              "      <th>txt_embed_4</th>\n",
              "      <th>txt_embed_5</th>\n",
              "      <th>txt_embed_6</th>\n",
              "      <th>txt_embed_7</th>\n",
              "      <th>txt_embed_8</th>\n",
              "      <th>txt_embed_9</th>\n",
              "      <th>txt_embed_10</th>\n",
              "      <th>txt_embed_11</th>\n",
              "      <th>txt_embed_12</th>\n",
              "      <th>txt_embed_13</th>\n",
              "      <th>txt_embed_14</th>\n",
              "      <th>txt_embed_15</th>\n",
              "      <th>txt_embed_16</th>\n",
              "      <th>txt_embed_17</th>\n",
              "      <th>txt_embed_18</th>\n",
              "      <th>txt_embed_19</th>\n",
              "      <th>txt_embed_20</th>\n",
              "      <th>txt_embed_21</th>\n",
              "      <th>txt_embed_22</th>\n",
              "      <th>txt_embed_23</th>\n",
              "      <th>txt_embed_24</th>\n",
              "      <th>txt_embed_25</th>\n",
              "      <th>txt_embed_26</th>\n",
              "      <th>txt_embed_27</th>\n",
              "      <th>txt_embed_28</th>\n",
              "      <th>txt_embed_29</th>\n",
              "      <th>txt_embed_30</th>\n",
              "      <th>txt_embed_31</th>\n",
              "      <th>txt_embed_32</th>\n",
              "      <th>txt_embed_33</th>\n",
              "      <th>txt_embed_34</th>\n",
              "      <th>txt_embed_35</th>\n",
              "      <th>txt_embed_36</th>\n",
              "      <th>txt_embed_37</th>\n",
              "      <th>txt_embed_38</th>\n",
              "      <th>...</th>\n",
              "      <th>img_embed_88</th>\n",
              "      <th>img_embed_89</th>\n",
              "      <th>img_embed_90</th>\n",
              "      <th>img_embed_91</th>\n",
              "      <th>img_embed_92</th>\n",
              "      <th>img_embed_93</th>\n",
              "      <th>img_embed_94</th>\n",
              "      <th>img_embed_95</th>\n",
              "      <th>img_embed_96</th>\n",
              "      <th>img_embed_97</th>\n",
              "      <th>img_embed_98</th>\n",
              "      <th>img_embed_99</th>\n",
              "      <th>img_embed_100</th>\n",
              "      <th>img_embed_101</th>\n",
              "      <th>img_embed_102</th>\n",
              "      <th>img_embed_103</th>\n",
              "      <th>img_embed_104</th>\n",
              "      <th>img_embed_105</th>\n",
              "      <th>img_embed_106</th>\n",
              "      <th>img_embed_107</th>\n",
              "      <th>img_embed_108</th>\n",
              "      <th>img_embed_109</th>\n",
              "      <th>img_embed_110</th>\n",
              "      <th>img_embed_111</th>\n",
              "      <th>img_embed_112</th>\n",
              "      <th>img_embed_113</th>\n",
              "      <th>img_embed_114</th>\n",
              "      <th>img_embed_115</th>\n",
              "      <th>img_embed_116</th>\n",
              "      <th>img_embed_117</th>\n",
              "      <th>img_embed_118</th>\n",
              "      <th>img_embed_119</th>\n",
              "      <th>img_embed_120</th>\n",
              "      <th>img_embed_121</th>\n",
              "      <th>img_embed_122</th>\n",
              "      <th>img_embed_123</th>\n",
              "      <th>img_embed_124</th>\n",
              "      <th>img_embed_125</th>\n",
              "      <th>img_embed_126</th>\n",
              "      <th>img_embed_127</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42844</td>\n",
              "      <td>4.514945</td>\n",
              "      <td>-2.383720</td>\n",
              "      <td>0.500414</td>\n",
              "      <td>0.407068</td>\n",
              "      <td>-1.995229</td>\n",
              "      <td>0.109078</td>\n",
              "      <td>-0.691775</td>\n",
              "      <td>2.227460</td>\n",
              "      <td>-6.437974</td>\n",
              "      <td>-0.824897</td>\n",
              "      <td>-0.138724</td>\n",
              "      <td>-0.379329</td>\n",
              "      <td>0.627660</td>\n",
              "      <td>0.418377</td>\n",
              "      <td>4.441218</td>\n",
              "      <td>0.299819</td>\n",
              "      <td>0.578557</td>\n",
              "      <td>-4.699289</td>\n",
              "      <td>-0.394740</td>\n",
              "      <td>-2.391651</td>\n",
              "      <td>0.370532</td>\n",
              "      <td>-1.355466</td>\n",
              "      <td>-1.074178</td>\n",
              "      <td>-2.321640</td>\n",
              "      <td>-0.332456</td>\n",
              "      <td>0.123886</td>\n",
              "      <td>-2.439156</td>\n",
              "      <td>-0.345599</td>\n",
              "      <td>-3.304347</td>\n",
              "      <td>1.485284</td>\n",
              "      <td>0.909802</td>\n",
              "      <td>-1.643002</td>\n",
              "      <td>5.037034</td>\n",
              "      <td>2.780115</td>\n",
              "      <td>4.776496</td>\n",
              "      <td>2.255275</td>\n",
              "      <td>3.769707</td>\n",
              "      <td>-3.661684</td>\n",
              "      <td>-0.649405</td>\n",
              "      <td>...</td>\n",
              "      <td>2.023900</td>\n",
              "      <td>1.599198</td>\n",
              "      <td>1.382868</td>\n",
              "      <td>1.605678</td>\n",
              "      <td>1.880667</td>\n",
              "      <td>-0.508161</td>\n",
              "      <td>0.242840</td>\n",
              "      <td>-0.260849</td>\n",
              "      <td>1.875943</td>\n",
              "      <td>0.206135</td>\n",
              "      <td>0.186973</td>\n",
              "      <td>2.047446</td>\n",
              "      <td>-0.575472</td>\n",
              "      <td>3.016410</td>\n",
              "      <td>2.757146</td>\n",
              "      <td>3.353721</td>\n",
              "      <td>-0.457272</td>\n",
              "      <td>-0.125337</td>\n",
              "      <td>2.332963</td>\n",
              "      <td>3.858967</td>\n",
              "      <td>-2.075490</td>\n",
              "      <td>-0.705496</td>\n",
              "      <td>0.203452</td>\n",
              "      <td>1.719733</td>\n",
              "      <td>2.925039</td>\n",
              "      <td>-0.388639</td>\n",
              "      <td>1.225732</td>\n",
              "      <td>-1.773137</td>\n",
              "      <td>0.052655</td>\n",
              "      <td>1.279922</td>\n",
              "      <td>-3.374727</td>\n",
              "      <td>-1.506969</td>\n",
              "      <td>-1.820180</td>\n",
              "      <td>-3.024644</td>\n",
              "      <td>0.445263</td>\n",
              "      <td>0.013933</td>\n",
              "      <td>-1.300239</td>\n",
              "      <td>2.759948</td>\n",
              "      <td>2.056171</td>\n",
              "      <td>0.508703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>67898</td>\n",
              "      <td>-2.002905</td>\n",
              "      <td>-0.929881</td>\n",
              "      <td>0.790017</td>\n",
              "      <td>-1.380895</td>\n",
              "      <td>-0.510463</td>\n",
              "      <td>-1.810096</td>\n",
              "      <td>1.363962</td>\n",
              "      <td>0.497401</td>\n",
              "      <td>-4.038903</td>\n",
              "      <td>-3.057872</td>\n",
              "      <td>0.758558</td>\n",
              "      <td>-1.012155</td>\n",
              "      <td>2.816802</td>\n",
              "      <td>2.086895</td>\n",
              "      <td>-1.464331</td>\n",
              "      <td>-1.840496</td>\n",
              "      <td>-2.089971</td>\n",
              "      <td>-1.566872</td>\n",
              "      <td>1.545390</td>\n",
              "      <td>1.284341</td>\n",
              "      <td>-2.270262</td>\n",
              "      <td>0.780126</td>\n",
              "      <td>1.615594</td>\n",
              "      <td>-0.546058</td>\n",
              "      <td>1.370750</td>\n",
              "      <td>-1.178124</td>\n",
              "      <td>1.346842</td>\n",
              "      <td>0.442434</td>\n",
              "      <td>-1.498540</td>\n",
              "      <td>-0.589944</td>\n",
              "      <td>2.008351</td>\n",
              "      <td>-0.497135</td>\n",
              "      <td>-1.644230</td>\n",
              "      <td>3.140623</td>\n",
              "      <td>3.492178</td>\n",
              "      <td>0.335395</td>\n",
              "      <td>1.810923</td>\n",
              "      <td>-4.012080</td>\n",
              "      <td>2.419593</td>\n",
              "      <td>...</td>\n",
              "      <td>2.624676</td>\n",
              "      <td>-2.581922</td>\n",
              "      <td>0.220891</td>\n",
              "      <td>0.328793</td>\n",
              "      <td>0.647758</td>\n",
              "      <td>0.231990</td>\n",
              "      <td>1.101486</td>\n",
              "      <td>1.079527</td>\n",
              "      <td>2.953102</td>\n",
              "      <td>-0.528682</td>\n",
              "      <td>-1.140600</td>\n",
              "      <td>-0.373299</td>\n",
              "      <td>0.109811</td>\n",
              "      <td>2.813541</td>\n",
              "      <td>0.596998</td>\n",
              "      <td>1.754836</td>\n",
              "      <td>-1.359771</td>\n",
              "      <td>0.466501</td>\n",
              "      <td>2.377417</td>\n",
              "      <td>-0.180653</td>\n",
              "      <td>-3.259304</td>\n",
              "      <td>0.120833</td>\n",
              "      <td>2.225643</td>\n",
              "      <td>2.220507</td>\n",
              "      <td>-1.178944</td>\n",
              "      <td>-0.821367</td>\n",
              "      <td>0.717239</td>\n",
              "      <td>-1.455829</td>\n",
              "      <td>-1.260584</td>\n",
              "      <td>2.623467</td>\n",
              "      <td>-0.538330</td>\n",
              "      <td>-2.620164</td>\n",
              "      <td>1.277195</td>\n",
              "      <td>0.601015</td>\n",
              "      <td>-0.345312</td>\n",
              "      <td>0.993457</td>\n",
              "      <td>1.351633</td>\n",
              "      <td>2.162675</td>\n",
              "      <td>2.768597</td>\n",
              "      <td>-0.937197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>66446</td>\n",
              "      <td>4.221673</td>\n",
              "      <td>-1.497139</td>\n",
              "      <td>1.133570</td>\n",
              "      <td>-2.745607</td>\n",
              "      <td>-4.197045</td>\n",
              "      <td>-0.542392</td>\n",
              "      <td>-1.396256</td>\n",
              "      <td>1.838419</td>\n",
              "      <td>-6.066454</td>\n",
              "      <td>-2.191799</td>\n",
              "      <td>0.752804</td>\n",
              "      <td>0.868623</td>\n",
              "      <td>6.187662</td>\n",
              "      <td>1.725745</td>\n",
              "      <td>2.887859</td>\n",
              "      <td>-1.486026</td>\n",
              "      <td>-0.182256</td>\n",
              "      <td>-3.710785</td>\n",
              "      <td>1.512866</td>\n",
              "      <td>-0.636434</td>\n",
              "      <td>0.288435</td>\n",
              "      <td>-3.369717</td>\n",
              "      <td>-0.265998</td>\n",
              "      <td>-3.549319</td>\n",
              "      <td>3.375338</td>\n",
              "      <td>-0.901461</td>\n",
              "      <td>-1.558371</td>\n",
              "      <td>1.695343</td>\n",
              "      <td>-4.450464</td>\n",
              "      <td>0.545495</td>\n",
              "      <td>1.000096</td>\n",
              "      <td>-3.468751</td>\n",
              "      <td>3.327641</td>\n",
              "      <td>1.556890</td>\n",
              "      <td>4.493203</td>\n",
              "      <td>0.369089</td>\n",
              "      <td>0.167196</td>\n",
              "      <td>-4.837062</td>\n",
              "      <td>1.216016</td>\n",
              "      <td>...</td>\n",
              "      <td>1.859474</td>\n",
              "      <td>-0.316134</td>\n",
              "      <td>-1.131286</td>\n",
              "      <td>1.701278</td>\n",
              "      <td>2.305405</td>\n",
              "      <td>-1.941271</td>\n",
              "      <td>1.248002</td>\n",
              "      <td>0.291000</td>\n",
              "      <td>0.792067</td>\n",
              "      <td>1.361166</td>\n",
              "      <td>1.129005</td>\n",
              "      <td>1.947404</td>\n",
              "      <td>-0.859423</td>\n",
              "      <td>2.023223</td>\n",
              "      <td>2.348651</td>\n",
              "      <td>4.506127</td>\n",
              "      <td>0.684437</td>\n",
              "      <td>2.064992</td>\n",
              "      <td>0.022901</td>\n",
              "      <td>3.464243</td>\n",
              "      <td>-2.325273</td>\n",
              "      <td>0.131324</td>\n",
              "      <td>-1.876178</td>\n",
              "      <td>1.770354</td>\n",
              "      <td>2.925176</td>\n",
              "      <td>-1.851054</td>\n",
              "      <td>-0.092587</td>\n",
              "      <td>-0.580742</td>\n",
              "      <td>-0.422019</td>\n",
              "      <td>0.923714</td>\n",
              "      <td>-4.582711</td>\n",
              "      <td>-1.056910</td>\n",
              "      <td>-2.568084</td>\n",
              "      <td>-2.038061</td>\n",
              "      <td>2.508719</td>\n",
              "      <td>-0.764789</td>\n",
              "      <td>-0.657116</td>\n",
              "      <td>3.252782</td>\n",
              "      <td>2.687366</td>\n",
              "      <td>0.844332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>63651</td>\n",
              "      <td>2.657970</td>\n",
              "      <td>-0.941863</td>\n",
              "      <td>1.121529</td>\n",
              "      <td>-5.109496</td>\n",
              "      <td>-0.279041</td>\n",
              "      <td>-0.351968</td>\n",
              "      <td>-1.086983</td>\n",
              "      <td>2.703607</td>\n",
              "      <td>-6.494977</td>\n",
              "      <td>-0.746769</td>\n",
              "      <td>-0.068571</td>\n",
              "      <td>-3.894670</td>\n",
              "      <td>4.937046</td>\n",
              "      <td>-1.863204</td>\n",
              "      <td>-1.955068</td>\n",
              "      <td>1.900193</td>\n",
              "      <td>1.743841</td>\n",
              "      <td>-6.024790</td>\n",
              "      <td>1.460414</td>\n",
              "      <td>-2.206104</td>\n",
              "      <td>-1.997572</td>\n",
              "      <td>-3.414536</td>\n",
              "      <td>-0.178739</td>\n",
              "      <td>0.987313</td>\n",
              "      <td>1.255347</td>\n",
              "      <td>-1.187136</td>\n",
              "      <td>2.070518</td>\n",
              "      <td>2.191021</td>\n",
              "      <td>-2.936702</td>\n",
              "      <td>2.617733</td>\n",
              "      <td>0.919181</td>\n",
              "      <td>-3.087907</td>\n",
              "      <td>-0.358938</td>\n",
              "      <td>-0.428679</td>\n",
              "      <td>3.815598</td>\n",
              "      <td>2.440558</td>\n",
              "      <td>1.281061</td>\n",
              "      <td>-0.732530</td>\n",
              "      <td>1.517067</td>\n",
              "      <td>...</td>\n",
              "      <td>2.588552</td>\n",
              "      <td>-1.123118</td>\n",
              "      <td>0.232427</td>\n",
              "      <td>2.170325</td>\n",
              "      <td>0.579414</td>\n",
              "      <td>2.601421</td>\n",
              "      <td>-0.596196</td>\n",
              "      <td>-1.798693</td>\n",
              "      <td>0.312326</td>\n",
              "      <td>0.387486</td>\n",
              "      <td>-2.207365</td>\n",
              "      <td>-1.029329</td>\n",
              "      <td>-1.274233</td>\n",
              "      <td>2.047230</td>\n",
              "      <td>1.928517</td>\n",
              "      <td>2.102633</td>\n",
              "      <td>-0.559383</td>\n",
              "      <td>-0.951418</td>\n",
              "      <td>-2.021749</td>\n",
              "      <td>1.366272</td>\n",
              "      <td>-1.947211</td>\n",
              "      <td>-2.114419</td>\n",
              "      <td>1.140394</td>\n",
              "      <td>-0.796024</td>\n",
              "      <td>1.906361</td>\n",
              "      <td>-0.357520</td>\n",
              "      <td>3.352968</td>\n",
              "      <td>-3.996377</td>\n",
              "      <td>1.520331</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.487683</td>\n",
              "      <td>-1.889119</td>\n",
              "      <td>0.943015</td>\n",
              "      <td>-2.834418</td>\n",
              "      <td>1.633184</td>\n",
              "      <td>2.001801</td>\n",
              "      <td>-2.333152</td>\n",
              "      <td>2.645595</td>\n",
              "      <td>2.280233</td>\n",
              "      <td>-0.694448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>46824</td>\n",
              "      <td>3.192195</td>\n",
              "      <td>-1.936676</td>\n",
              "      <td>1.199909</td>\n",
              "      <td>-2.562152</td>\n",
              "      <td>-2.573456</td>\n",
              "      <td>0.575841</td>\n",
              "      <td>-2.358653</td>\n",
              "      <td>1.620844</td>\n",
              "      <td>-4.302936</td>\n",
              "      <td>-0.487575</td>\n",
              "      <td>0.020896</td>\n",
              "      <td>-0.763327</td>\n",
              "      <td>4.341694</td>\n",
              "      <td>0.698798</td>\n",
              "      <td>3.334580</td>\n",
              "      <td>0.607683</td>\n",
              "      <td>-0.718644</td>\n",
              "      <td>-2.730188</td>\n",
              "      <td>0.193828</td>\n",
              "      <td>-1.706196</td>\n",
              "      <td>-0.468727</td>\n",
              "      <td>-2.281904</td>\n",
              "      <td>-1.837274</td>\n",
              "      <td>-2.849140</td>\n",
              "      <td>0.195873</td>\n",
              "      <td>-0.459765</td>\n",
              "      <td>-0.768752</td>\n",
              "      <td>1.033489</td>\n",
              "      <td>-2.490896</td>\n",
              "      <td>2.077521</td>\n",
              "      <td>-0.171984</td>\n",
              "      <td>-3.406347</td>\n",
              "      <td>2.616670</td>\n",
              "      <td>0.713099</td>\n",
              "      <td>4.450222</td>\n",
              "      <td>0.606497</td>\n",
              "      <td>0.160672</td>\n",
              "      <td>-2.604218</td>\n",
              "      <td>2.110272</td>\n",
              "      <td>...</td>\n",
              "      <td>2.412406</td>\n",
              "      <td>-0.654135</td>\n",
              "      <td>0.486894</td>\n",
              "      <td>1.168054</td>\n",
              "      <td>-0.271420</td>\n",
              "      <td>0.667091</td>\n",
              "      <td>1.163557</td>\n",
              "      <td>-0.132236</td>\n",
              "      <td>0.668463</td>\n",
              "      <td>-0.228185</td>\n",
              "      <td>0.155768</td>\n",
              "      <td>1.546821</td>\n",
              "      <td>0.307640</td>\n",
              "      <td>2.542941</td>\n",
              "      <td>1.240985</td>\n",
              "      <td>2.144569</td>\n",
              "      <td>-1.079753</td>\n",
              "      <td>0.335191</td>\n",
              "      <td>0.245159</td>\n",
              "      <td>2.150169</td>\n",
              "      <td>-1.991440</td>\n",
              "      <td>-2.330727</td>\n",
              "      <td>0.736855</td>\n",
              "      <td>2.126931</td>\n",
              "      <td>0.556061</td>\n",
              "      <td>-1.611493</td>\n",
              "      <td>2.722133</td>\n",
              "      <td>-1.185940</td>\n",
              "      <td>0.399201</td>\n",
              "      <td>1.598617</td>\n",
              "      <td>-0.621475</td>\n",
              "      <td>-2.091410</td>\n",
              "      <td>0.501600</td>\n",
              "      <td>-3.083864</td>\n",
              "      <td>-1.060091</td>\n",
              "      <td>2.053600</td>\n",
              "      <td>-2.025008</td>\n",
              "      <td>2.399251</td>\n",
              "      <td>2.562317</td>\n",
              "      <td>0.694134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108911</th>\n",
              "      <td>79253</td>\n",
              "      <td>2.143652</td>\n",
              "      <td>-1.591184</td>\n",
              "      <td>-0.283598</td>\n",
              "      <td>-2.186552</td>\n",
              "      <td>-1.505779</td>\n",
              "      <td>0.876601</td>\n",
              "      <td>1.302617</td>\n",
              "      <td>-1.762244</td>\n",
              "      <td>-2.847601</td>\n",
              "      <td>0.108608</td>\n",
              "      <td>-1.466877</td>\n",
              "      <td>-2.967015</td>\n",
              "      <td>0.913299</td>\n",
              "      <td>-1.161778</td>\n",
              "      <td>2.752231</td>\n",
              "      <td>-5.542719</td>\n",
              "      <td>-0.901889</td>\n",
              "      <td>-2.699810</td>\n",
              "      <td>-2.309839</td>\n",
              "      <td>-1.778445</td>\n",
              "      <td>-1.089302</td>\n",
              "      <td>-0.462305</td>\n",
              "      <td>0.550925</td>\n",
              "      <td>-1.022714</td>\n",
              "      <td>-2.445610</td>\n",
              "      <td>-2.240845</td>\n",
              "      <td>-3.921844</td>\n",
              "      <td>-1.672699</td>\n",
              "      <td>-1.688246</td>\n",
              "      <td>1.376479</td>\n",
              "      <td>-0.749645</td>\n",
              "      <td>-2.281994</td>\n",
              "      <td>1.904197</td>\n",
              "      <td>-2.702273</td>\n",
              "      <td>-1.578054</td>\n",
              "      <td>-2.232083</td>\n",
              "      <td>-0.220451</td>\n",
              "      <td>-1.909157</td>\n",
              "      <td>-0.809935</td>\n",
              "      <td>...</td>\n",
              "      <td>3.846366</td>\n",
              "      <td>-3.724903</td>\n",
              "      <td>0.214898</td>\n",
              "      <td>1.602764</td>\n",
              "      <td>3.950767</td>\n",
              "      <td>0.322759</td>\n",
              "      <td>1.632436</td>\n",
              "      <td>2.913508</td>\n",
              "      <td>3.255090</td>\n",
              "      <td>0.124804</td>\n",
              "      <td>-3.038602</td>\n",
              "      <td>1.028680</td>\n",
              "      <td>-0.372231</td>\n",
              "      <td>1.747909</td>\n",
              "      <td>2.259741</td>\n",
              "      <td>1.149775</td>\n",
              "      <td>-1.978496</td>\n",
              "      <td>1.221311</td>\n",
              "      <td>0.619848</td>\n",
              "      <td>-0.702118</td>\n",
              "      <td>-3.045399</td>\n",
              "      <td>-1.687716</td>\n",
              "      <td>-2.313181</td>\n",
              "      <td>3.121440</td>\n",
              "      <td>-0.982756</td>\n",
              "      <td>0.450534</td>\n",
              "      <td>0.706889</td>\n",
              "      <td>-2.271411</td>\n",
              "      <td>-1.142208</td>\n",
              "      <td>2.323842</td>\n",
              "      <td>-1.352005</td>\n",
              "      <td>-3.588055</td>\n",
              "      <td>2.803221</td>\n",
              "      <td>-2.160821</td>\n",
              "      <td>-1.153775</td>\n",
              "      <td>0.290783</td>\n",
              "      <td>1.518086</td>\n",
              "      <td>3.690181</td>\n",
              "      <td>5.391709</td>\n",
              "      <td>0.328971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108912</th>\n",
              "      <td>109138</td>\n",
              "      <td>0.890185</td>\n",
              "      <td>0.042669</td>\n",
              "      <td>2.842594</td>\n",
              "      <td>-4.322702</td>\n",
              "      <td>-1.107593</td>\n",
              "      <td>-0.033230</td>\n",
              "      <td>2.835225</td>\n",
              "      <td>-1.383299</td>\n",
              "      <td>-4.998042</td>\n",
              "      <td>-4.018473</td>\n",
              "      <td>-2.133858</td>\n",
              "      <td>-2.112752</td>\n",
              "      <td>5.674667</td>\n",
              "      <td>-1.652996</td>\n",
              "      <td>-1.637974</td>\n",
              "      <td>-0.246467</td>\n",
              "      <td>0.030858</td>\n",
              "      <td>-0.132066</td>\n",
              "      <td>1.642372</td>\n",
              "      <td>-2.437756</td>\n",
              "      <td>1.211184</td>\n",
              "      <td>-3.797614</td>\n",
              "      <td>2.716340</td>\n",
              "      <td>-1.846051</td>\n",
              "      <td>1.698319</td>\n",
              "      <td>0.771190</td>\n",
              "      <td>4.764339</td>\n",
              "      <td>2.598170</td>\n",
              "      <td>-1.430937</td>\n",
              "      <td>0.347440</td>\n",
              "      <td>0.907071</td>\n",
              "      <td>0.032756</td>\n",
              "      <td>-2.463522</td>\n",
              "      <td>-3.297136</td>\n",
              "      <td>2.716323</td>\n",
              "      <td>1.846584</td>\n",
              "      <td>-1.269165</td>\n",
              "      <td>-1.020392</td>\n",
              "      <td>2.497579</td>\n",
              "      <td>...</td>\n",
              "      <td>3.044159</td>\n",
              "      <td>-1.802477</td>\n",
              "      <td>0.890905</td>\n",
              "      <td>1.535566</td>\n",
              "      <td>1.058227</td>\n",
              "      <td>0.463234</td>\n",
              "      <td>0.884959</td>\n",
              "      <td>0.518636</td>\n",
              "      <td>1.126252</td>\n",
              "      <td>-0.570538</td>\n",
              "      <td>1.777023</td>\n",
              "      <td>0.157465</td>\n",
              "      <td>-2.856526</td>\n",
              "      <td>3.190122</td>\n",
              "      <td>-0.744726</td>\n",
              "      <td>2.207457</td>\n",
              "      <td>1.761704</td>\n",
              "      <td>2.780637</td>\n",
              "      <td>2.130281</td>\n",
              "      <td>-1.689670</td>\n",
              "      <td>-1.385311</td>\n",
              "      <td>-1.727320</td>\n",
              "      <td>3.064378</td>\n",
              "      <td>-0.886842</td>\n",
              "      <td>5.473865</td>\n",
              "      <td>-0.998189</td>\n",
              "      <td>0.228917</td>\n",
              "      <td>-1.734863</td>\n",
              "      <td>-2.065603</td>\n",
              "      <td>0.206962</td>\n",
              "      <td>0.416093</td>\n",
              "      <td>-0.917160</td>\n",
              "      <td>-0.028134</td>\n",
              "      <td>2.624365</td>\n",
              "      <td>1.574156</td>\n",
              "      <td>-0.014772</td>\n",
              "      <td>2.250575</td>\n",
              "      <td>2.005705</td>\n",
              "      <td>0.309760</td>\n",
              "      <td>0.913974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108913</th>\n",
              "      <td>62184</td>\n",
              "      <td>1.458928</td>\n",
              "      <td>-0.638677</td>\n",
              "      <td>-0.957509</td>\n",
              "      <td>-2.936515</td>\n",
              "      <td>-0.897658</td>\n",
              "      <td>-0.992379</td>\n",
              "      <td>0.574731</td>\n",
              "      <td>0.027216</td>\n",
              "      <td>-3.514133</td>\n",
              "      <td>-1.925192</td>\n",
              "      <td>1.451574</td>\n",
              "      <td>0.428331</td>\n",
              "      <td>2.025814</td>\n",
              "      <td>0.447675</td>\n",
              "      <td>-0.660619</td>\n",
              "      <td>-0.872637</td>\n",
              "      <td>-2.048203</td>\n",
              "      <td>0.468547</td>\n",
              "      <td>-2.090118</td>\n",
              "      <td>-2.782267</td>\n",
              "      <td>-4.756662</td>\n",
              "      <td>-0.434126</td>\n",
              "      <td>-2.144065</td>\n",
              "      <td>0.290367</td>\n",
              "      <td>-2.406909</td>\n",
              "      <td>2.708581</td>\n",
              "      <td>2.706972</td>\n",
              "      <td>-0.381109</td>\n",
              "      <td>2.382838</td>\n",
              "      <td>0.911503</td>\n",
              "      <td>0.569131</td>\n",
              "      <td>-2.612042</td>\n",
              "      <td>-1.612692</td>\n",
              "      <td>-2.111382</td>\n",
              "      <td>2.068428</td>\n",
              "      <td>-1.662065</td>\n",
              "      <td>1.491509</td>\n",
              "      <td>-2.189797</td>\n",
              "      <td>-1.101642</td>\n",
              "      <td>...</td>\n",
              "      <td>2.347459</td>\n",
              "      <td>-1.152050</td>\n",
              "      <td>-0.073379</td>\n",
              "      <td>0.584912</td>\n",
              "      <td>2.391302</td>\n",
              "      <td>-0.847047</td>\n",
              "      <td>-0.198604</td>\n",
              "      <td>1.605899</td>\n",
              "      <td>0.718099</td>\n",
              "      <td>-0.307227</td>\n",
              "      <td>1.443186</td>\n",
              "      <td>1.116030</td>\n",
              "      <td>-0.222231</td>\n",
              "      <td>4.325758</td>\n",
              "      <td>0.777393</td>\n",
              "      <td>1.724637</td>\n",
              "      <td>-0.743674</td>\n",
              "      <td>2.502644</td>\n",
              "      <td>2.662223</td>\n",
              "      <td>0.716697</td>\n",
              "      <td>-4.454898</td>\n",
              "      <td>-1.274869</td>\n",
              "      <td>-0.830480</td>\n",
              "      <td>0.718139</td>\n",
              "      <td>0.722961</td>\n",
              "      <td>-0.474453</td>\n",
              "      <td>2.400864</td>\n",
              "      <td>0.907951</td>\n",
              "      <td>0.312939</td>\n",
              "      <td>0.984343</td>\n",
              "      <td>1.468603</td>\n",
              "      <td>-2.667665</td>\n",
              "      <td>-0.988566</td>\n",
              "      <td>1.012626</td>\n",
              "      <td>1.046013</td>\n",
              "      <td>1.670171</td>\n",
              "      <td>0.804473</td>\n",
              "      <td>2.821836</td>\n",
              "      <td>3.285690</td>\n",
              "      <td>2.215272</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108914</th>\n",
              "      <td>42748</td>\n",
              "      <td>3.383520</td>\n",
              "      <td>-1.669863</td>\n",
              "      <td>1.264212</td>\n",
              "      <td>-2.128029</td>\n",
              "      <td>-2.129893</td>\n",
              "      <td>2.562061</td>\n",
              "      <td>-1.778324</td>\n",
              "      <td>-0.861360</td>\n",
              "      <td>-5.312111</td>\n",
              "      <td>-1.194243</td>\n",
              "      <td>-2.375578</td>\n",
              "      <td>0.247040</td>\n",
              "      <td>2.003000</td>\n",
              "      <td>-0.072495</td>\n",
              "      <td>3.190066</td>\n",
              "      <td>1.868549</td>\n",
              "      <td>-0.431989</td>\n",
              "      <td>-3.087507</td>\n",
              "      <td>0.349909</td>\n",
              "      <td>-2.412557</td>\n",
              "      <td>-0.259443</td>\n",
              "      <td>0.182825</td>\n",
              "      <td>1.727671</td>\n",
              "      <td>-3.584537</td>\n",
              "      <td>-0.412435</td>\n",
              "      <td>-1.705584</td>\n",
              "      <td>1.012528</td>\n",
              "      <td>0.901008</td>\n",
              "      <td>-2.896719</td>\n",
              "      <td>2.248031</td>\n",
              "      <td>0.993419</td>\n",
              "      <td>-2.661560</td>\n",
              "      <td>2.592874</td>\n",
              "      <td>2.524708</td>\n",
              "      <td>3.169341</td>\n",
              "      <td>2.671678</td>\n",
              "      <td>2.032502</td>\n",
              "      <td>-5.340019</td>\n",
              "      <td>2.253168</td>\n",
              "      <td>...</td>\n",
              "      <td>1.953726</td>\n",
              "      <td>2.464684</td>\n",
              "      <td>1.866723</td>\n",
              "      <td>3.098136</td>\n",
              "      <td>1.429997</td>\n",
              "      <td>1.994586</td>\n",
              "      <td>-0.235225</td>\n",
              "      <td>-2.027347</td>\n",
              "      <td>2.489434</td>\n",
              "      <td>-0.328639</td>\n",
              "      <td>0.503968</td>\n",
              "      <td>1.511740</td>\n",
              "      <td>1.208020</td>\n",
              "      <td>1.384978</td>\n",
              "      <td>3.671376</td>\n",
              "      <td>3.584236</td>\n",
              "      <td>0.685376</td>\n",
              "      <td>1.440640</td>\n",
              "      <td>-0.373653</td>\n",
              "      <td>2.983807</td>\n",
              "      <td>-2.187109</td>\n",
              "      <td>-1.982580</td>\n",
              "      <td>0.927802</td>\n",
              "      <td>1.391323</td>\n",
              "      <td>2.578521</td>\n",
              "      <td>-0.332423</td>\n",
              "      <td>0.798493</td>\n",
              "      <td>-1.699570</td>\n",
              "      <td>-0.984258</td>\n",
              "      <td>0.834168</td>\n",
              "      <td>-1.577673</td>\n",
              "      <td>-1.983800</td>\n",
              "      <td>-0.830833</td>\n",
              "      <td>-2.517840</td>\n",
              "      <td>-0.387712</td>\n",
              "      <td>0.237070</td>\n",
              "      <td>-2.524445</td>\n",
              "      <td>1.908586</td>\n",
              "      <td>1.887787</td>\n",
              "      <td>1.021628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108915</th>\n",
              "      <td>61098</td>\n",
              "      <td>2.447854</td>\n",
              "      <td>-0.469942</td>\n",
              "      <td>1.873896</td>\n",
              "      <td>-4.149315</td>\n",
              "      <td>-3.618531</td>\n",
              "      <td>-0.558433</td>\n",
              "      <td>0.162609</td>\n",
              "      <td>1.975269</td>\n",
              "      <td>-5.732625</td>\n",
              "      <td>-4.815576</td>\n",
              "      <td>1.458589</td>\n",
              "      <td>-0.157395</td>\n",
              "      <td>4.123180</td>\n",
              "      <td>0.821072</td>\n",
              "      <td>0.013682</td>\n",
              "      <td>1.206975</td>\n",
              "      <td>0.453557</td>\n",
              "      <td>-2.513904</td>\n",
              "      <td>-1.407518</td>\n",
              "      <td>-1.531497</td>\n",
              "      <td>-5.618808</td>\n",
              "      <td>-0.943977</td>\n",
              "      <td>-1.017109</td>\n",
              "      <td>-2.291309</td>\n",
              "      <td>-0.440314</td>\n",
              "      <td>0.288046</td>\n",
              "      <td>2.175383</td>\n",
              "      <td>1.147492</td>\n",
              "      <td>1.264497</td>\n",
              "      <td>1.151156</td>\n",
              "      <td>-1.025481</td>\n",
              "      <td>-3.679017</td>\n",
              "      <td>-2.111122</td>\n",
              "      <td>-3.165144</td>\n",
              "      <td>2.715713</td>\n",
              "      <td>-4.898654</td>\n",
              "      <td>2.751275</td>\n",
              "      <td>-4.703845</td>\n",
              "      <td>1.822637</td>\n",
              "      <td>...</td>\n",
              "      <td>3.336885</td>\n",
              "      <td>-0.026206</td>\n",
              "      <td>2.628304</td>\n",
              "      <td>-0.034228</td>\n",
              "      <td>-1.857510</td>\n",
              "      <td>0.299361</td>\n",
              "      <td>1.335146</td>\n",
              "      <td>-1.908567</td>\n",
              "      <td>-0.318048</td>\n",
              "      <td>1.573966</td>\n",
              "      <td>-2.097476</td>\n",
              "      <td>0.901986</td>\n",
              "      <td>-0.142120</td>\n",
              "      <td>2.523870</td>\n",
              "      <td>0.855082</td>\n",
              "      <td>0.633110</td>\n",
              "      <td>-0.284672</td>\n",
              "      <td>-0.065614</td>\n",
              "      <td>-1.057013</td>\n",
              "      <td>-0.558878</td>\n",
              "      <td>-2.375062</td>\n",
              "      <td>-1.258834</td>\n",
              "      <td>3.204423</td>\n",
              "      <td>0.256820</td>\n",
              "      <td>-1.055324</td>\n",
              "      <td>-2.972080</td>\n",
              "      <td>2.656508</td>\n",
              "      <td>-0.887010</td>\n",
              "      <td>2.091410</td>\n",
              "      <td>0.203728</td>\n",
              "      <td>3.445529</td>\n",
              "      <td>-3.894981</td>\n",
              "      <td>0.318239</td>\n",
              "      <td>-3.956578</td>\n",
              "      <td>0.672438</td>\n",
              "      <td>2.741400</td>\n",
              "      <td>1.146402</td>\n",
              "      <td>3.278049</td>\n",
              "      <td>3.225166</td>\n",
              "      <td>-1.092669</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>108916 rows × 257 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        item_id  txt_embed_0  ...  img_embed_126  img_embed_127\n",
              "0         42844     4.514945  ...       2.056171       0.508703\n",
              "1         67898    -2.002905  ...       2.768597      -0.937197\n",
              "2         66446     4.221673  ...       2.687366       0.844332\n",
              "3         63651     2.657970  ...       2.280233      -0.694448\n",
              "4         46824     3.192195  ...       2.562317       0.694134\n",
              "...         ...          ...  ...            ...            ...\n",
              "108911    79253     2.143652  ...       5.391709       0.328971\n",
              "108912   109138     0.890185  ...       0.309760       0.913974\n",
              "108913    62184     1.458928  ...       3.285690       2.215272\n",
              "108914    42748     3.383520  ...       1.887787       1.021628\n",
              "108915    61098     2.447854  ...       3.225166      -1.092669\n",
              "\n",
              "[108916 rows x 257 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uyJ7cTIxDbY6",
        "colab_type": "code",
        "outputId": "9d3087f6-d7d1-4a8d-fd85-dcf9876746ac",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "# time-aware-direction item-cf\n",
        "recom_item = []\n",
        "ranking_recom_df = pd.DataFrame()\n",
        "print(\"train_path={}, test_path={}\".format(train_path, test_path))\n",
        "whole_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_test = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "\n",
        "    all_click = click_train.append(click_test)\n",
        "    whole_click = whole_click.append(all_click)\n",
        "    phase_recom_df = merged_df[merged_df['phase'] == c]\n",
        "    sparse_feat, dense_feat, feat_lbe_dict, feature_names, model = deepfm_training(all_click, item_feat_df, user_feat_df, phase=c)\n",
        "    infer_input = organize_recall_item_features(phase_recom_df, feat_lbe_dict, sparse_feat, dense_feat, feature_names)\n",
        "    infer_prob = model.predict(infer_input, batch_size=BATCH_SIZE)\n",
        "    phase_recom_df['prob'] = infer_prob # override\n",
        "    ranking_recom_df = ranking_recom_df.append(phase_recom_df)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "train_path=underexpose_train, test_path=offline_underexpose_test\n",
            "phase: 0\n",
            "phase 0\n",
            "negative sampling done\n",
            "join feat done\n",
            "label encoder done\n",
            "begin training...\n",
            "Train on 784011 samples, validate on 84813 samples\n",
            "Epoch 1/6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n",
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "784011/784011 [==============================] - 31s 39us/sample - loss: 0.6222 - binary_crossentropy: 0.6191 - val_loss: 0.3978 - val_binary_crossentropy: 0.3911\n",
            "Epoch 2/6\n",
            "784011/784011 [==============================] - 26s 33us/sample - loss: 0.5681 - binary_crossentropy: 0.5560 - val_loss: 0.3949 - val_binary_crossentropy: 0.3794\n",
            "Epoch 3/6\n",
            "784011/784011 [==============================] - 26s 34us/sample - loss: 0.5173 - binary_crossentropy: 0.4966 - val_loss: 0.3952 - val_binary_crossentropy: 0.3715\n",
            "Epoch 4/6\n",
            "784011/784011 [==============================] - 26s 33us/sample - loss: 0.4729 - binary_crossentropy: 0.4451 - val_loss: 0.3762 - val_binary_crossentropy: 0.3461\n",
            "Epoch 5/6\n",
            "784011/784011 [==============================] - 26s 33us/sample - loss: 0.4383 - binary_crossentropy: 0.4050 - val_loss: 0.3974 - val_binary_crossentropy: 0.3620\n",
            "Epoch 6/6\n",
            "784011/784011 [==============================] - 26s 33us/sample - loss: 0.4081 - binary_crossentropy: 0.3701 - val_loss: 0.3981 - val_binary_crossentropy: 0.3582\n",
            "training done...\n",
            "test LogLoss 0.3582\n",
            "test AUC 0.7673\n",
            "age_level\n",
            "gender\n",
            "city_level\n",
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 1\n",
            "phase 1\n",
            "negative sampling done\n",
            "join feat done\n",
            "label encoder done\n",
            "begin training...\n",
            "Train on 794613 samples, validate on 88026 samples\n",
            "Epoch 1/6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n",
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "794613/794613 [==============================] - 32s 40us/sample - loss: 0.6213 - binary_crossentropy: 0.6179 - val_loss: 0.4118 - val_binary_crossentropy: 0.4046\n",
            "Epoch 2/6\n",
            "794613/794613 [==============================] - 29s 37us/sample - loss: 0.5661 - binary_crossentropy: 0.5536 - val_loss: 0.3873 - val_binary_crossentropy: 0.3716\n",
            "Epoch 3/6\n",
            "794613/794613 [==============================] - 29s 37us/sample - loss: 0.5194 - binary_crossentropy: 0.4987 - val_loss: 0.3898 - val_binary_crossentropy: 0.3663\n",
            "Epoch 4/6\n",
            "794613/794613 [==============================] - 29s 37us/sample - loss: 0.4816 - binary_crossentropy: 0.4544 - val_loss: 0.3906 - val_binary_crossentropy: 0.3612\n",
            "Epoch 5/6\n",
            "794613/794613 [==============================] - 29s 37us/sample - loss: 0.4501 - binary_crossentropy: 0.4176 - val_loss: 0.3814 - val_binary_crossentropy: 0.3469\n",
            "Epoch 6/6\n",
            "794613/794613 [==============================] - 29s 37us/sample - loss: 0.4230 - binary_crossentropy: 0.3859 - val_loss: 0.4055 - val_binary_crossentropy: 0.3666\n",
            "training done...\n",
            "test LogLoss 0.3666\n",
            "test AUC 0.7766\n",
            "age_level\n",
            "gender\n",
            "city_level\n",
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 2\n",
            "phase 2\n",
            "negative sampling done\n",
            "join feat done\n",
            "label encoder done\n",
            "begin training...\n",
            "Train on 793872 samples, validate on 86190 samples\n",
            "Epoch 1/6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n",
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "793872/793872 [==============================] - 32s 40us/sample - loss: 0.6172 - binary_crossentropy: 0.6133 - val_loss: 0.3937 - val_binary_crossentropy: 0.3864\n",
            "Epoch 2/6\n",
            "793872/793872 [==============================] - 28s 35us/sample - loss: 0.5670 - binary_crossentropy: 0.5549 - val_loss: 0.3851 - val_binary_crossentropy: 0.3702\n",
            "Epoch 3/6\n",
            "793872/793872 [==============================] - 28s 36us/sample - loss: 0.5218 - binary_crossentropy: 0.5022 - val_loss: 0.3900 - val_binary_crossentropy: 0.3676\n",
            "Epoch 4/6\n",
            "793872/793872 [==============================] - 28s 35us/sample - loss: 0.4816 - binary_crossentropy: 0.4550 - val_loss: 0.3729 - val_binary_crossentropy: 0.3438\n",
            "Epoch 5/6\n",
            "793872/793872 [==============================] - 28s 36us/sample - loss: 0.4478 - binary_crossentropy: 0.4156 - val_loss: 0.3934 - val_binary_crossentropy: 0.3592\n",
            "Epoch 6/6\n",
            "793872/793872 [==============================] - 28s 35us/sample - loss: 0.4206 - binary_crossentropy: 0.3838 - val_loss: 0.3818 - val_binary_crossentropy: 0.3432\n",
            "training done...\n",
            "test LogLoss 0.3432\n",
            "test AUC 0.7622\n",
            "age_level\n",
            "gender\n",
            "city_level\n",
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "phase: 3\n",
            "phase 3\n",
            "negative sampling done\n",
            "join feat done\n",
            "label encoder done\n",
            "begin training...\n",
            "Train on 859827 samples, validate on 85425 samples\n",
            "Epoch 1/6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n",
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "859827/859827 [==============================] - 35s 40us/sample - loss: 0.6149 - binary_crossentropy: 0.6110 - val_loss: 0.3941 - val_binary_crossentropy: 0.3860\n",
            "Epoch 2/6\n",
            "859827/859827 [==============================] - 32s 37us/sample - loss: 0.5565 - binary_crossentropy: 0.5432 - val_loss: 0.3982 - val_binary_crossentropy: 0.3819\n",
            "Epoch 3/6\n",
            "859827/859827 [==============================] - 32s 38us/sample - loss: 0.5153 - binary_crossentropy: 0.4940 - val_loss: 0.3848 - val_binary_crossentropy: 0.3606\n",
            "Epoch 4/6\n",
            "859827/859827 [==============================] - 33s 38us/sample - loss: 0.4784 - binary_crossentropy: 0.4501 - val_loss: 0.3776 - val_binary_crossentropy: 0.3468\n",
            "Epoch 5/6\n",
            "859827/859827 [==============================] - 33s 38us/sample - loss: 0.4465 - binary_crossentropy: 0.4126 - val_loss: 0.3942 - val_binary_crossentropy: 0.3582\n",
            "Epoch 6/6\n",
            "859827/859827 [==============================] - 33s 38us/sample - loss: 0.4199 - binary_crossentropy: 0.3813 - val_loss: 0.3881 - val_binary_crossentropy: 0.3476\n",
            "training done...\n",
            "test LogLoss 0.3476\n",
            "test AUC 0.7753\n",
            "age_level\n",
            "gender\n",
            "city_level\n",
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame.\n",
            "Try using .loc[row_indexer,col_indexer] = value instead\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CRGNZtRl3JtA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-7_p_tBFITu-",
        "colab_type": "code",
        "outputId": "03e395b1-e6f0-4c87-ada7-652f21cbf633",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "ranking_recom_df[['user_id','item_id', 'prob']].to_csv(output_path + '/baseline_itemcf_origin_ranking_v2.csv', index=False, header=None)\n",
        "ranking_recom_df['sim_prob'] =  ranking_recom_df['sim'] * np.exp(1.0+ranking_recom_df['prob'])\n",
        "\n",
        "# find most popular items  \n",
        "top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "top50_click = ','.join([str(i) for i in top50_click])\n",
        "\n",
        "# fill\n",
        "result = get_predict(ranking_recom_df, 'sim_prob', top50_click)\n",
        "result.to_csv(output_path + '/baseline_itemcf_ranking_v2.csv', index=False, header=None)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "337700\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EG43q0HEHqtD",
        "colab_type": "code",
        "outputId": "1c214286-47f8-4f0f-904f-cd52a6fff420",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 360
        }
      },
      "source": [
        "sparse_feat, dense_feat, feat_lbe_dict, feature_names, model = deepfm_training(click_train, click_test, item_feat_df, user_feat_df, now_phase)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Train on 864852 samples, validate on 85425 samples\n",
            "Epoch 1/6\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n",
            "/usr/local/lib/python3.6/dist-packages/tensorflow_core/python/framework/indexed_slices.py:433: UserWarning: Converting sparse IndexedSlices to a dense Tensor of unknown shape. This may consume a large amount of memory.\n",
            "  \"Converting sparse IndexedSlices to a dense Tensor of unknown shape. \"\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "864852/864852 [==============================] - 61s 71us/sample - loss: 0.6120 - binary_crossentropy: 0.6060 - val_loss: 0.3911 - val_binary_crossentropy: 0.3790\n",
            "Epoch 2/6\n",
            "864852/864852 [==============================] - 58s 67us/sample - loss: 0.5549 - binary_crossentropy: 0.5351 - val_loss: 0.3814 - val_binary_crossentropy: 0.3574\n",
            "Epoch 3/6\n",
            "864852/864852 [==============================] - 57s 66us/sample - loss: 0.5112 - binary_crossentropy: 0.4807 - val_loss: 0.3529 - val_binary_crossentropy: 0.3193\n",
            "Epoch 4/6\n",
            "864852/864852 [==============================] - 58s 67us/sample - loss: 0.4793 - binary_crossentropy: 0.4409 - val_loss: 0.3895 - val_binary_crossentropy: 0.3486\n",
            "Epoch 5/6\n",
            "864852/864852 [==============================] - 58s 67us/sample - loss: 0.4545 - binary_crossentropy: 0.4099 - val_loss: 0.3919 - val_binary_crossentropy: 0.3452\n",
            "Epoch 6/6\n",
            "864852/864852 [==============================] - 57s 66us/sample - loss: 0.4316 - binary_crossentropy: 0.3818 - val_loss: 0.4193 - val_binary_crossentropy: 0.3675\n",
            "test LogLoss 0.3675\n",
            "test AUC 0.905\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eGQLbKCuy10Q",
        "colab_type": "code",
        "outputId": "024d07c0-2073-47b2-cd9a-d2001e7dcd8e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        }
      },
      "source": [
        "infer_input = organize_recall_item_features(recom_df, feat_lbe_dict, sparse_feat, dense_feat, feature_names)"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "age_level\n",
            "gender\n",
            "city_level\n",
            "user_id\n",
            "item_id\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dWVWyrUA041l",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "infer_ans = model.predict(infer_input, batch_size=BATCH_SIZE)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KXPLrrp-G-T1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "recom_df['sim'] = infer_ans"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "08kZOPd25wEn",
        "colab_type": "text"
      },
      "source": [
        "# Fuse Results"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6RgcHSJC1Y4X",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd\n",
        "def norm_sim(sim_df, weight=0.0):\n",
        "  # print(sim_df.head())\n",
        "  min_sim = sim_df.min()\n",
        "  max_sim = sim_df.max()\n",
        "  if max_sim == min_sim:\n",
        "    sim_df = sim_df.apply(lambda sim: 1.0)\n",
        "  else:\n",
        "    sim_df = sim_df.apply(lambda sim: 1.0 * (sim - min_sim) / (max_sim - min_sim))\n",
        "  sim_df = sim_df.apply(lambda sim: sim+1.0+weight) # plus one\n",
        "  return sim_df\n",
        "\n",
        "def jaccard_sim(list1, list2, k=50):\n",
        "    k = min(len(list1), k)\n",
        "    k = min(len(list2), k)\n",
        "    list1 = list1[:k]\n",
        "    list2 = list2[:k]\n",
        "\n",
        "    return 1.0 * len(set(list1) & set(list2)) / k\n",
        "\n",
        "\n",
        "def recommend_list_sim(file_list):\n",
        "  import itertools\n",
        "  file_comb_list = list(itertools.combinations(file_list, 2))\n",
        "  for file_1, file_2 in file_comb_list:\n",
        "    df_1 = pd.read_csv(output_path + '/{}'.format(file_1), header=None, names=['user_id', 'item_id', 'sim'], sep=',')\n",
        "    df_1 = df_1.groupby('user_id').apply(lambda group_df: list(group_df.sort_values(by='sim', ascending=False)['item_id'])).reset_index().rename(columns={0:'rank_items'})\n",
        "    df_1_user_rank_items_dict = dict(zip(df_1['user_id'], df_1['rank_items']))\n",
        "\n",
        "    df_2 = pd.read_csv(output_path + '/{}'.format(file_2), header=None, names=['user_id', 'item_id', 'sim'], sep=',')\n",
        "    df_2 = df_2.groupby('user_id').apply(lambda group_df: list(group_df.sort_values(by='sim', ascending=False)['item_id'])).reset_index().rename(columns={0:'rank_items'})\n",
        "    df_2_user_rank_items_dict = dict(zip(df_2['user_id'], df_2['rank_items']))\n",
        "    \n",
        "\n",
        "    user_ids = set(df_1['user_id'].values) & set(df_2['user_id'].values)\n",
        "    sim_list = []\n",
        "    for uid in user_ids:\n",
        "       topk_1 = df_1_user_rank_items_dict[uid]\n",
        "       topk_2 = df_2_user_rank_items_dict[uid]\n",
        "       sim_list.append(jaccard_sim(topk_1, topk_2, k=50))\n",
        "    avg_sim = np.mean(sim_list)\n",
        "\n",
        "    print('file_1={}, file_2={}, sim={}'.format(file_1, file_2, avg_sim))\n",
        "    \n",
        "\n",
        "def merge_result(merge_files=(('baseline_swing_origin_v3.csv', 1.0), ('baseline_itemcf_origin_v3.csv', 1.0), \n",
        "                                           ('baseline_usercf_origin_v3.csv', 1.0)), \n",
        "                              output_file_name='baseline_merged_itemcf_swing_usercf_prod.csv'):\n",
        "  recall_df_list = []\n",
        "  for file_name, weight in merge_files:\n",
        "    print(file_name)\n",
        "    recall_df = pd.read_csv(output_path + '/{}'.format(file_name), header=None, names=['user_id', 'item_id', 'sim', 'phase'], sep=',')\n",
        "    # print(recall_df.head())\n",
        "    recall_df['sim'] = recall_df.groupby('user_id')['sim'].transform(lambda df: norm_sim(df, weight))\n",
        "    print(recall_df.head(50))\n",
        "    recall_df_list.append(recall_df)\n",
        "\n",
        "  print('read done...')\n",
        "  merged_df = pd.concat(recall_df_list, ignore_index=True)\n",
        "  merged_df = merged_df.groupby(['user_id', 'item_id', 'phase'])['sim'].prod().reset_index()\n",
        "  print(merged_df.head())\n",
        "\n",
        "  top50_click = whole_click['item_id'].value_counts().index[:50].values\n",
        "  top50_click = ','.join([str(i) for i in top50_click])\n",
        "  print(top50_click)\n",
        "\n",
        "  result = get_feat_predict(merged_df, whole_click, user_feat_df, top50_click, feat_cols=['gender','age_level', 'city_level'])\n",
        "  result.to_csv(output_path + '/{}'.format(output_file_name), index=False, header=None)\n",
        "\n",
        "  return merged_df\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6u1J6z9oP4MB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "file_1=baseline_swing_origin_v4.csv, file_2=baseline_itemcf_origin_v4.csv, sim=0.1357218575460702\n",
        "file_1=baseline_swing_origin_v4.csv, file_2=baseline_itemcf_origin_v5.csv, sim=0.1767461581323211\n",
        "file_1=baseline_swing_origin_v4.csv, file_2=baseline_bi_graph_origin_v4.csv, sim=0.33384039063258264\n",
        "file_1=baseline_swing_origin_v4.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.42854640405639777\n",
        "file_1=baseline_swing_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.19352739109057\n",
        "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_itemcf_origin_v5.csv, sim=0.561086763399467\n",
        "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_bi_graph_origin_v4.csv, sim=0.5346046787089133\n",
        "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.2750518211430264\n",
        "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.16182289580261025\n",
        "file_1=baseline_itemcf_origin_v5.csv, file_2=baseline_bi_graph_origin_v4.csv, sim=0.5592271246668642\n",
        "file_1=baseline_itemcf_origin_v5.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.30886881847793907\n",
        "file_1=baseline_itemcf_origin_v5.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.3959927568785172\n",
        "file_1=baseline_bi_graph_origin_v4.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.4418951732306782\n",
        "file_1=baseline_bi_graph_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.23850442669966593\n",
        "file_1=baseline_usercf_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.19604460978836213"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eX7Wq64P8BVl",
        "colab_type": "code",
        "outputId": "56460702-bfd4-491a-98aa-45854ed332c7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        }
      },
      "source": [
        "recommend_list_sim(['baseline_swing_origin_v4.csv', 'baseline_itemcf_origin_v4.csv',\n",
        "                    'baseline_itemcf_origin_v5.csv',  'baseline_bi_graph_origin_v4.csv',\n",
        "                    'baseline_usercf_origin_v4.csv', 'baseline_co_occurrance_origin_v3.csv'])"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "file_1=baseline_swing_origin_v4.csv, file_2=baseline_itemcf_origin_v4.csv, sim=0.1428703505238199\n",
            "file_1=baseline_swing_origin_v4.csv, file_2=baseline_itemcf_origin_v5.csv, sim=0.12097902434179304\n",
            "file_1=baseline_swing_origin_v4.csv, file_2=baseline_bi_graph_origin_v4.csv, sim=0.20247822362832155\n",
            "file_1=baseline_swing_origin_v4.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.3395426611491892\n",
            "file_1=baseline_swing_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.17515663492686978\n",
            "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_itemcf_origin_v5.csv, sim=0.6724133846609417\n",
            "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_bi_graph_origin_v4.csv, sim=0.7285134734971869\n",
            "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.2744299674267101\n",
            "file_1=baseline_itemcf_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.16203018037471567\n",
            "file_1=baseline_itemcf_origin_v5.csv, file_2=baseline_bi_graph_origin_v4.csv, sim=0.6142641397690257\n",
            "file_1=baseline_itemcf_origin_v5.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.2752176488007107\n",
            "file_1=baseline_itemcf_origin_v5.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.30986830084829753\n",
            "file_1=baseline_bi_graph_origin_v4.csv, file_2=baseline_usercf_origin_v4.csv, sim=0.31312999703879185\n",
            "file_1=baseline_bi_graph_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.18217651637017634\n",
            "file_1=baseline_usercf_origin_v4.csv, file_2=baseline_co_occurrance_origin_v3.csv, sim=0.17575441138741452\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rAy29cN0FVoO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "merged_df = merge_result(merge_files=(\n",
        "                          #('baseline_swing_origin_v7_filter.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v7_filter.csv', 0.0),\n",
        "                          ('baseline_bi_graph_origin_v7_filter.csv', 0.0)),\n",
        "                          # ('baseline_co_occurrance_origin_v3.csv', 0.0)),\n",
        "                          # ('baseline_userCF_v3.csv', user_score)),\n",
        "            output_file_name='baseline_merged_bi_itemcf_prod_V7_filter.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nCq-FYSTBXMf",
        "colab_type": "code",
        "outputId": "0da903bd-2ac8-4437-b2d1-f3d1520e2af2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        }
      },
      "source": [
        "merged_df"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>sim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>6899</td>\n",
              "      <td>1.070296</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>8458</td>\n",
              "      <td>1.021832</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>8559</td>\n",
              "      <td>1.085873</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>8764</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>11005</td>\n",
              "      <td>1.009948</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>597557</th>\n",
              "      <td>35434</td>\n",
              "      <td>102133</td>\n",
              "      <td>1.078761</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>597558</th>\n",
              "      <td>35434</td>\n",
              "      <td>105279</td>\n",
              "      <td>1.112150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>597559</th>\n",
              "      <td>35434</td>\n",
              "      <td>106544</td>\n",
              "      <td>1.159503</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>597560</th>\n",
              "      <td>35434</td>\n",
              "      <td>106749</td>\n",
              "      <td>1.325561</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>597561</th>\n",
              "      <td>35434</td>\n",
              "      <td>107429</td>\n",
              "      <td>1.009349</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>597562 rows × 3 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        user_id  item_id       sim\n",
              "0             1     6899  1.070296\n",
              "1             1     8458  1.021832\n",
              "2             1     8559  1.085873\n",
              "3             1     8764  1.000000\n",
              "4             1    11005  1.009948\n",
              "...         ...      ...       ...\n",
              "597557    35434   102133  1.078761\n",
              "597558    35434   105279  1.112150\n",
              "597559    35434   106544  1.159503\n",
              "597560    35434   106749  1.325561\n",
              "597561    35434   107429  1.009349\n",
              "\n",
              "[597562 rows x 3 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sKQwnEmXUE1x",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "merge_result(merge_files=(# ('baseline_swing_origin_v5.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v5.csv', 0.0),\n",
        "                          ('baseline_bi_graph_origin_v5.csv', 0.0)),\n",
        "                          # ('baseline_co_occurrance_origin_v3.csv', 0.0)),\n",
        "                          # ('baseline_userCF_v3.csv', user_score)),\n",
        "            output_file_name='baseline_merged_bi_itemcf_prod_V5.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5CqQcCMVWMxY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "merge_result(merge_files=(('baseline_swing_origin_v7_filter.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v7_filter.csv', 0.0),\n",
        "                          ('baseline_bi_graph_origin_v7_filter.csv', 0.0)),\n",
        "                          # ('baseline_co_occurrance_origin_v3.csv', 0.0)),\n",
        "                          # ('baseline_userCF_v3.csv', user_score)),\n",
        "            output_file_name='baseline_merged_swing_itemcf_bi_prod_V7.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qZLBPiLMr7I2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "merge_result(merge_files=(('baseline_swing_origin_v5.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v5.csv', 0.0),\n",
        "                          ('baseline_bi_graph_origin_v5.csv', 0.0)),\n",
        "                          # ('baseline_co_occurrance_origin_v3.csv', 0.0)),\n",
        "                          # ('baseline_userCF_v3.csv', user_score)),\n",
        "            output_file_name='baseline_merged_swing_itemcf_bi_prod_V5.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6iC3TFj6srIj",
        "colab_type": "code",
        "outputId": "bf8bcf79-58f2-4e1f-9d00-e63962ed3157",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "merge_result(merge_files=(('baseline_swing_origin_v5.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v5.csv', 0.0)),\n",
        "                          #('baseline_bi_graph_origin_v5.csv', 0.0)),\n",
        "                          # ('baseline_co_occurrance_origin_v3.csv', 0.0)),\n",
        "                          # ('baseline_userCF_v3.csv', user_score)),\n",
        "            output_file_name='baseline_merged_swing_itemcf_prod_V5.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "baseline_swing_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0         2     4207  2.000000      0\n",
            "1         2   112107  1.432263      0\n",
            "2         2   114077  1.398584      0\n",
            "3         2     4619  1.393811      0\n",
            "4         2   111215  1.348669      0\n",
            "5         2   115093  1.334455      0\n",
            "6         2   109632  1.274966      0\n",
            "7         2   111829  1.179905      0\n",
            "8         2   114893  1.169807      0\n",
            "9         2   112351  1.145404      0\n",
            "10        2   112852  1.142121      0\n",
            "11        2   113633  1.136576      0\n",
            "12        2   116292  1.128066      0\n",
            "13        2   115905  1.116909      0\n",
            "14        2     3907  1.113842      0\n",
            "15        2   114740  1.112630      0\n",
            "16        2   114268  1.102111      0\n",
            "17        2   113941  1.099377      0\n",
            "18        2   117039  1.093111      0\n",
            "19        2   114294  1.077842      0\n",
            "20        2    19085  1.075221      0\n",
            "21        2     7197  1.064811      0\n",
            "22        2    14246  1.063108      0\n",
            "23        2   105276  1.061552      0\n",
            "24        2    47164  1.057957      0\n",
            "25        2    14106  1.056501      0\n",
            "26        2   110464  1.055269      0\n",
            "27        2   111170  1.053790      0\n",
            "28        2    18297  1.052664      0\n",
            "29        2     3001  1.045496      0\n",
            "30        2    14925  1.045168      0\n",
            "31        2     5291  1.043730      0\n",
            "32        2    78610  1.036709      0\n",
            "33        2    23028  1.035863      0\n",
            "34        2     4556  1.033116      0\n",
            "35        2   114929  1.031343      0\n",
            "36        2    56960  1.029795      0\n",
            "37        2   116697  1.026913      0\n",
            "38        2   113882  1.023210      0\n",
            "39        2     4504  1.023081      0\n",
            "40        2   113308  1.021415      0\n",
            "41        2    78292  1.020270      0\n",
            "42        2    84617  1.020270      0\n",
            "43        2   114896  1.020032      0\n",
            "44        2    49525  1.020028      0\n",
            "45        2   110141  1.017968      0\n",
            "46        2    13350  1.017522      0\n",
            "47        2   111715  1.017461      0\n",
            "48        2    40093  1.016400      0\n",
            "49        2    78822  1.015278      0\n",
            "baseline_itemcf_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0         2     4207  2.000000      0\n",
            "1         2    18297  1.397816      0\n",
            "2         2     4619  1.364428      0\n",
            "3         2     3907  1.291500      0\n",
            "4         2    19695  1.259711      0\n",
            "5         2    23028  1.226986      0\n",
            "6         2    14925  1.199189      0\n",
            "7         2    74411  1.197619      0\n",
            "8         2   100283  1.196498      0\n",
            "9         2     5291  1.194928      0\n",
            "10        2    56960  1.180033      0\n",
            "11        2    36399  1.122594      0\n",
            "12        2      977  1.113956      0\n",
            "13        2    47164  1.112854      0\n",
            "14        2     6248  1.103983      0\n",
            "15        2    25177  1.092768      0\n",
            "16        2   115599  1.086303      0\n",
            "17        2    45866  1.074589      0\n",
            "18        2    51933  1.074010      0\n",
            "19        2    14966  1.069692      0\n",
            "20        2    13577  1.067979      0\n",
            "21        2    54712  1.065772      0\n",
            "22        2    10054  1.063705      0\n",
            "23        2     4504  1.062282      0\n",
            "24        2    40093  1.061339      0\n",
            "25        2     8339  1.055989      0\n",
            "26        2     5663  1.055792      0\n",
            "27        2   116491  1.051849      0\n",
            "28        2    33602  1.050244      0\n",
            "29        2   116531  1.049951      0\n",
            "30        2     5514  1.048610      0\n",
            "31        2    56825  1.047554      0\n",
            "32        2     4377  1.046847      0\n",
            "33        2    20281  1.046444      0\n",
            "34        2     4102  1.046306      0\n",
            "35        2   102784  1.043113      0\n",
            "36        2   111215  1.042415      0\n",
            "37        2    11886  1.038679      0\n",
            "38        2    54142  1.038587      0\n",
            "39        2     8198  1.036451      0\n",
            "40        2     2602  1.036348      0\n",
            "41        2     4175  1.035371      0\n",
            "42        2     1903  1.034846      0\n",
            "43        2   109632  1.034029      0\n",
            "44        2    57790  1.033752      0\n",
            "45        2     3197  1.031422      0\n",
            "46        2    89175  1.030908      0\n",
            "47        2   112852  1.028757      0\n",
            "48        2    82446  1.028725      0\n",
            "49        2    28617  1.027785      0\n",
            "read done...\n",
            "   user_id  item_id  phase       sim\n",
            "0        2      465      0  1.019416\n",
            "1        2      487      0  1.001052\n",
            "2        2      578      0  1.033214\n",
            "3        2      617      0  1.008168\n",
            "4        2      664      0  1.003973\n",
            "52766,111225,4340,21426,2420,21279,7156,12845,4230,42651,87254,1604,6568,44534,77047,34716,12061,13302,14239,114125,76943,52131,13845,1518,91838,78364,14777,4999,114055,59903,27885,49787,24025,104777,35452,67536,29594,19326,114108,55349,114201,29931,17287,4483,20208,59996,69717,8180,51182,45198\n",
            "1606 80300 80173\n",
            "7048 352400 352400\n",
            "432573\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>phase</th>\n",
              "      <th>sim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>465</td>\n",
              "      <td>0</td>\n",
              "      <td>1.019416</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>487</td>\n",
              "      <td>0</td>\n",
              "      <td>1.001052</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>578</td>\n",
              "      <td>0</td>\n",
              "      <td>1.033214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>617</td>\n",
              "      <td>0</td>\n",
              "      <td>1.008168</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>664</td>\n",
              "      <td>0</td>\n",
              "      <td>1.003973</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1098256</th>\n",
              "      <td>35421</td>\n",
              "      <td>109945</td>\n",
              "      <td>2</td>\n",
              "      <td>1.006815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1098257</th>\n",
              "      <td>35421</td>\n",
              "      <td>112833</td>\n",
              "      <td>2</td>\n",
              "      <td>1.080346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1098258</th>\n",
              "      <td>35421</td>\n",
              "      <td>113662</td>\n",
              "      <td>2</td>\n",
              "      <td>1.013848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1098259</th>\n",
              "      <td>35421</td>\n",
              "      <td>114153</td>\n",
              "      <td>2</td>\n",
              "      <td>1.085382</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1098260</th>\n",
              "      <td>35421</td>\n",
              "      <td>114181</td>\n",
              "      <td>2</td>\n",
              "      <td>1.065398</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1098261 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         user_id  item_id  phase       sim\n",
              "0              2      465      0  1.019416\n",
              "1              2      487      0  1.001052\n",
              "2              2      578      0  1.033214\n",
              "3              2      617      0  1.008168\n",
              "4              2      664      0  1.003973\n",
              "...          ...      ...    ...       ...\n",
              "1098256    35421   109945      2  1.006815\n",
              "1098257    35421   112833      2  1.080346\n",
              "1098258    35421   113662      2  1.013848\n",
              "1098259    35421   114153      2  1.085382\n",
              "1098260    35421   114181      2  1.065398\n",
              "\n",
              "[1098261 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "up1J_5_BsFc8",
        "colab_type": "code",
        "outputId": "f37b2a2c-89eb-4052-da6b-c7d7de7c4955",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "merge_result(merge_files=(#('baseline_swing_origin_v5.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v5.csv', 0.0),\n",
        "                          #('baseline_bi_graph_origin_v5.csv', 0.0)),\n",
        "                          # ('baseline_co_occurrance_origin_v3.csv', 0.0)),\n",
        "                          ('baseline_usercf_v5.csv', 0.0)),\n",
        "            output_file_name='baseline_merged_usercf_itemcf_prod_V5.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "baseline_itemcf_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0         2     4207  2.000000      0\n",
            "1         2    18297  1.397816      0\n",
            "2         2     4619  1.364428      0\n",
            "3         2     3907  1.291500      0\n",
            "4         2    19695  1.259711      0\n",
            "5         2    23028  1.226986      0\n",
            "6         2    14925  1.199189      0\n",
            "7         2    74411  1.197619      0\n",
            "8         2   100283  1.196498      0\n",
            "9         2     5291  1.194928      0\n",
            "10        2    56960  1.180033      0\n",
            "11        2    36399  1.122594      0\n",
            "12        2      977  1.113956      0\n",
            "13        2    47164  1.112854      0\n",
            "14        2     6248  1.103983      0\n",
            "15        2    25177  1.092768      0\n",
            "16        2   115599  1.086303      0\n",
            "17        2    45866  1.074589      0\n",
            "18        2    51933  1.074010      0\n",
            "19        2    14966  1.069692      0\n",
            "20        2    13577  1.067979      0\n",
            "21        2    54712  1.065772      0\n",
            "22        2    10054  1.063705      0\n",
            "23        2     4504  1.062282      0\n",
            "24        2    40093  1.061339      0\n",
            "25        2     8339  1.055989      0\n",
            "26        2     5663  1.055792      0\n",
            "27        2   116491  1.051849      0\n",
            "28        2    33602  1.050244      0\n",
            "29        2   116531  1.049951      0\n",
            "30        2     5514  1.048610      0\n",
            "31        2    56825  1.047554      0\n",
            "32        2     4377  1.046847      0\n",
            "33        2    20281  1.046444      0\n",
            "34        2     4102  1.046306      0\n",
            "35        2   102784  1.043113      0\n",
            "36        2   111215  1.042415      0\n",
            "37        2    11886  1.038679      0\n",
            "38        2    54142  1.038587      0\n",
            "39        2     8198  1.036451      0\n",
            "40        2     2602  1.036348      0\n",
            "41        2     4175  1.035371      0\n",
            "42        2     1903  1.034846      0\n",
            "43        2   109632  1.034029      0\n",
            "44        2    57790  1.033752      0\n",
            "45        2     3197  1.031422      0\n",
            "46        2    89175  1.030908      0\n",
            "47        2   112852  1.028757      0\n",
            "48        2    82446  1.028725      0\n",
            "49        2    28617  1.027785      0\n",
            "baseline_usercf_v5.csv\n",
            "                                                                                                                                                                                                                                                                                                                                       user_id  ...   phase\n",
            "2   4207   13577  18297  4102   4619   104777 42464  5982   3907   112351 41532  109632 112107 114077 8179   8019   14966  21146  77095  20209  111215 55253  14925  11747  64221  5593   6799   115093 114893 74411  20333  2958   5291   1927   113633 10566  1903   36399  69837  78610  47164  111829 66787  8339   32015  3001     111774  ...  114294\n",
            "3   42389  43264  112907 63163  82324  113582 36071  84922  63512  38687  109840 105381 95433  59650  80324  112177 69640  104327 26509  88371  89543  77564  90661  100042 99557  66940  25684  112174 85661  62422  79029  106442 76806  113733 92421  77047  99141  95536  115003 102933 33089  92076  114626 15803  88081  68458     18646  ...   79153\n",
            "6   85909  33121  64448  59765  32100  2218   57135  34058  104424 75137  20462  78737  5345   10837  15646  88286  36181  72592  38015  3894   87763  107075 32297  2749   43776  57085  86456  36976  7344   65951  61625  80607  3804   10153  77062  23932  82423  35046  7367   3832   45008  79026  71721  22056  38685  83375     22816  ...  100916\n",
            "9   77047  100713 8552   95536  57849  99141  109651 114330 59038  36992  24232  2611   21504  36566  25385  4340   11170  88062  109920 20590  113733 10450  7882   65393  88385  27179  38687  67481  67156  48477  35264  70618  76562  3302   38846  15654  57576  98430  69083  42163  13403  67536  108857 69612  7939   85899     75439  ...    4230\n",
            "10  79829  78213  8814   80697  51307  41136  42300  44551  65202  16656  43675  86978  36640  47765  14257  21119  89541  47925  8525   64526  51097  31392  17459  61224  108164 37252  2815   19809  90288  46478  22145  55825  37107  29040  61103  22561  9103   20227  84454  86724  24944  45243  20568  27812  97830  11460     87677  ...   99774\n",
            "11  51060  6969   17873  14933  85537  12652  10528  83566  15646  94682  21941  53929  22042  59382  20284  24917  42269  76676  88650  2386   80227  11896  48513  85999  11774  41495  26257  59376  16800  32237  57803  8631   107410 115473 26369  41118  41136  81447  22281  11706  20389  15087  3140   39704  54563  44328     28427  ...   38151\n",
            "13  100997 95445  84395  29444  52222  15026  2277   97522  60631  81672  36870  95105  98112  50018  40145  17819  105754 4340   48417  8648   69595  55703  108782 39856  32908  2420   13018  51388  34609  14081  64946  21336  30898  21721  81050  29901  38184  17572  38886  61172  108028 96361  66980  64936  23867  35164     42230  ...   36804\n",
            "19  28250  29941  8217   56077  72302  59135  103168 69498  21934  31475  26282  13355  73699  32169  19103  33107  77482  49244  41115  84375  91097  109101 79532  4195   114251 85723  35297  45416  56381  66650  107539 106498 94465  86943  64070  2094   89639  5676   79728  96794  5099   74131  47920  22988  73188  112014   103800  ...   25613\n",
            "26  36071  110172 25356  108205 90006  65344  47875  85661  90237  69398  92421  63511  113593 94852  63007  69657  77757  82182  73604  103204 90663  79532  78868  25105  70650  69984  89692  116208 81118  85643  63011  37127  112070 54859  79890  80563  90990  69640  80101  34735  106741 70844  74774  32601  59555  88020    103148  ...   86734\n",
            "34  75725  16489  104899 39361  44106  30008  50661  73893  81177  36767  44066  65219  22380  100528 77638  99289  4698   87942  24197  14723  81675  103655 80976  47231  13608  3742   38239  83952  57995  96779  113056 96416  92039  51538  105742 98372  111599 28924  97885  87234  74257  18173  71519  95468  38424  9935      87229  ...   77633\n",
            "42  36567  76931  41557  27073  53809  52129  5008   96045  2423   90958  14759  54326  64246  25551  65550  34133  52009  13564  10297  7103   68270  52206  2954   93829  1591   9413   69039  112443 114142 54776  66670  115346 55421  39848  13817  116486 116766 76478  25973  17930  76962  32105  6807   50937  40411  69889    116550  ...   14547\n",
            "46  113026 7225   115009 108663 110804 13917  39165  24591  6491   4783   115908 110823 34565  48543  38151  21911  112784 30608  13308  1512   5576   10658  112859 22281  102585 87680  63711  73525  51823  4765   26751  15386  16250  1020   1249   1161   2834   115894 53687  52601  15314  23733  69023  32103  2792   15943     52159  ...   83944\n",
            "47  53508  36995  34879  80816  10042  84311  103730 86833  110308 6294   87748  6368   102105 2545   3655   28427  13235  13207  16425  46530  47402  26394  27065  89496  15068  12703  36181  2611   12713  15974  21736  88058  6876   8208   72380  36944  44577  1969   3654   3577   94233  101321 4283   3608   90006  35264      3770  ...   83598\n",
            "53  114893 112916 116598 41979  24043  85447  30808  110765 113809 7225   112351 36000  112272 113482 110133 110464 111774 113308 58621  96299  110141 5954   33505  2777   106177 60171  3077   42652  101735 23949  21704  82277  15746  97232  98060  111576 115561 109156 20501  1059   38672  112388 14246  26117  111215 78582    113655  ...    9591\n",
            "59  111225 27337  111114 55349  14239  52131  30778  28943  114201 88605  8076   5346   19326  109125 114108 7051   5629   51524  114055 31105  78364  115035 88058  109635 13845  52081  109233 63802  17287  30728  92379  31776  5984   3170   2226   110758 23226  5833   110744 79868  2246   103775 75835  82529  20208  61324     31054  ...  108907\n",
            "61  85661  41604  65093  50844  68590  25197  48093  76806  36071  57719  66752  46377  41108  43211  109170 82115  94804  44719  72970  89554  36624  28989  65285  37039  87186  14187  13696  113824 67605  47621  110945 89677  93353  100777 113569 112139 53657  114125 80679  69640  42995  2518   97805  10394  72841  49098     12702  ...  100784\n",
            "62  78831  91164  68130  49965  68092  73761  91949  76943  116102 71978  30778  34716  11762  23046  27742  55349  60175  14239  72498  93648  99917  111225 111114 79533  52131  27337  110891 90421  54019  114108 96179  57863  31531  1518   4230   66628  31044  52081  90705  71223  51524  2171   59394  66625  23334  102774    56208  ...  115035\n",
            "66  85158  93353  72872  80782  72970  10716  82194  68917  50506  24847  90379  26758  53657  40947  24923  7958   110293 78868  23613  77822  40735  77299  12191  68379  43949  76663  92796  64436  78495  51182  76806  72078  4434   74774  103204 80679  85661  4278   60349  16819  87264  47839  42985  37702  18137  4727       9777  ...   37665\n",
            "77  44621  26899  22281  64808  8261   93262  17930  30940  105275 85788  29242  50419  16135  7971   12859  1641   71652  13187  2468   58044  42534  81693  34001  61472  43496  47633  103524 58991  100106 94370  60194  113332 12064  91952  96234  110231 60324  40245  16657  53569  3939   33803  66131  83375  3226   26928     83694  ...  108666\n",
            "78  68701  5813   12041  29813  58111  17457  44427  8810   742    35254  23936  20     25551  104897 19822  198    22870  113662 18238  77610  63282  47448  79191  19986  22137  8772   53241  14713  6240   26060  88466  28864  25270  32006  79621  40857  19737  87959  55316  91626  75228  53582  12061  74817  42913  85694     75552  ...   82067\n",
            "81  15556  42411  88605  36013  93584  7540   106164 113235 4286   103413 34987  59333  110143 84024  105822 90022  97636  103221 100813 79511  48661  105612 17759  93799  109820 102060 62151  89851  84808  43571  34597  76040  108610 93592  73584  45617  103864 106336 109812 106384 113775 106378 39007  68979  66232  29885     74226  ...   68563\n",
            "85  18287  100784 72872  40104  20258  40080  46324  29427  85158  16819  18494  108892 26264  80784  112109 43744  42736  7958   28069  25727  32858  52095  110172 49205  66098  77043  43463  89219  49038  69717  95783  96237  76011  37702  28379  90006  44009  50316  88371  17958  56148  34851  64919  78561  11610  18997     89921  ...    7048\n",
            "88  98603  105620 108498 48889  114084 92936  53263  10923  105800 88453  90078  92407  113511 44214  100796 90950  88513  95299  77247  71875  79765  60103  109770 91635  113775 108165 105407 103322 106202 112327 80765  107382 61716  82667  103243 109233 36231  100814 104790 54576  73908  68753  95319  114847 60197  98353     33035  ...  109585\n",
            "97  29184  37140  56247  107656 36087  73072  39053  75864  61586  24415  32035  79466  96400  9243   1003   84170  116994 23418  51833  628    84194  74204  47505  95205  40161  85744  44913  10731  2020   15297  45849  86630  49599  35961  3499   60626  12147  12114  116788 28874  88344  32177  30867  52106  74066  10786     63037  ...   38424\n",
            "106 53451  8526   68213  33562  14837  33921  1082   26731  74906  51058  77009  46695  47504  50970  11196  34145  12077  45938  17115  19882  18076  68495  66386  16018  10733  82908  9406   11720  2954   78009  44911  85677  12098  67801  25881  42385  36486  18262  76766  86135  20148  78829  56784  14978  83815  18984     62992  ...   67630\n",
            "107 112489 105505 84024  45617  108213 93592  110872 94092  109582 113775 103413 81572  90343  50240  84113  60302  109645 94169  65465  71551  106917 92620  109597 111225 79260  20208  90309  93058  54272  114055 17287  116809 113781 43107  106791 83180  113786 75835  113789 98337  27787  114201 21323  71964  34330  45198    114108  ...  109813\n",
            "115 65618  116102 1421   109635 99712  77413  65393  1518   89231  97330  57864  31044  10083  13403  95100  10811  31772  5878   4746   72498  4230   97956  6950   43913  94112  65473  10909  114434 33699  26296  45355  14552  80339  87526  46210  110311 68092  30728  116132 51231  43439  98425  113551 25762  1374   65187      5492  ...   69796\n",
            "121 794    19262  56873  50108  38697  6085   93664  11767  94656  68607  38164  110099 108491 18932  486    5046   67418  39502  75170  25790  82519  22637  9858   36998  63355  6099   53281  21078  15746  10803  67161  55229  60264  13399  58210  12327  98502  66435  5638   13566  97923  59198  50937  83389  12612  35878     33603  ...    3719\n",
            "132 115515 115561 115352 80620  111394 82224  48562  108359 115785 67562  37612  7197   68491  47169  115121 74992  101575 24213  26407  47703  78979  23244  78151  114866 97525  35766  86251  58256  20361  94618  115073 58096  18336  87931  111191 111829 51445  35134  61000  100082 82182  93784  84405  13924  86855  92478     60002  ...   21797\n",
            "134 93164  21794  2460   304    3868   22048  108839 24672  7313   16869  16988  9261   305    5040   4252   1518   57603  90909  12374  4340   1011   69434  1711   288    6446   78928  6445   946    52584  69440  70930  6229   11578  31393  3744   31392  30720  12844  37987  1037   1099   50850  49637  18327  1267   59585     51556  ...   52766\n",
            "148 67015  10990  24170  15753  38616  44056  94407  88651  43566  75944  78028  35758  80007  90859  37757  76411  86206  25339  25178  25356  25353  100497 38211  12030  53561  11383  43315  88936  55750  85919  27754  26407  57095  96221  24400  98497  95436  67672  67519  88385  9552   28532  88346  1815   85661  16489     69742  ...   53689\n",
            "149 62332  76996  104399 4258   23522  36635  20705  108667 18659  9968   20685  52222  14055  43724  11533  22144  25177  78177  6321   19571  22573  107089 11121  9491   97715  56190  9204   64769  4861   9353   53311  1722   4432   84476  8012   95051  19260  112334 60053  55385  59784  17012  12061  50832  3160   8843     103875  ...   37520\n",
            "157 87302  45361  25668  113976 76208  81611  14702  78260  6160   115199 61975  24252  6180   15242  6554   15287  21990  34946  46262  85202  61057  88650  25983  20261  106514 38184  93061  733    65572  88736  15866  19088  96411  63279  45316  80594  81421  79837  73787  62525  85868  77640  57081  79555  108976 8552      39758  ...   67687\n",
            "158 113775 109820 101900 80765  90312  109133 1927   7062   98603  111684 64573  7562   14835  37316  72898  105507 107861 93513  91900  95714  76285  105407 97061  64226  82990  6598   85266  31013  5772   25723  50548  4647   115565 83005  24950  34575  32925  85295  21736  20333  84113  45761  74455  6241   7640   2421     107570  ...   31211\n",
            "168 81553  90288  997    27950  56379  70781  26369  16026  85482  4897   105221 33359  15545  67693  73569  2496   80227  79507  75365  76502  57793  65565  26898  17529  66625  101338 13041  31653  36439  87310  34528  68369  15094  7485   84873  60870  45767  38331  38403  82092  73083  97904  69662  50374  83769  80482      4777  ...   92052\n",
            "169 12754  14666  45431  79868  2075   87107  111215 19326  113569 114539 29476  46670  112443 100972 115860 6587   6294   45198  50888  12627  114201 88462  114868 26117  116073 92095  52460  37170  4392   82029  11890  5475   1518   7709   26295  10143  116437 13161  112489 42080  88605  3598   18454  53718  115561 116349    94397  ...   26419\n",
            "174 88040  103011 94546  104111 15744  63042  79444  29740  3689   24167  73449  40926  47251  16454  28213  8598   23760  76405  44018  58168  41987  70920  24748  13499  109436 26727  20405  81636  41926  73663  71750  109472 50077  40546  40246  87257  86021  85616  29885  36563  85443  11706  55952  88990  64279  32894    107869  ...   26368\n",
            "181 24847  74420  72872  49038  24923  78914  10716  52860  50506  47622  10676  25959  77999  88549  23748  87807  24689  37485  68793  40947  99136  60165  85158  4447   78129  87670  77966  25957  72805  90379  97364  37702  40949  89921  26132  13005  43211  77056  17752  72970  69625  39622  70010  28668  61919  40843     78647  ...   42483\n",
            "183 32814  45844  66037  39312  7704   62598  39788  45152  36005  51440  71001  38093  61358  104241 55518  107884 43067  113708 79050  62530  37886  57701  18932  83525  82360  79828  53786  57412  64691  49039  77053  12327  28991  3491   113959 48705  91420  56249  35569  6244   63172  74500  12065  68595  48185  1155      52881  ...    6603\n",
            "185 71223  66624  19316  9679   40545  995    23548  93849  78831  67573  49108  93854  92547  16180  49445  92663  49964  90491  90424  99207  23900  16356  21582  8824   8889   5193   24634  90429  92660  19365  92658  2579   24997  23318  92659  49803  61136  91479  66595  68442  112600 91486  56462  35820  67570  90439     66438  ...   49103\n",
            "194 95600  8925   94998  35691  25200  71857  73908  2066   63113  56208  110462 10923  92819  99683  112647 42623  114125 27129  92936  76521  72764  89082  87530  12427  21472  68998  19316  79375  88453  33637  72931  86187  2361   1974   58028  33035  55825  92194  106514 93746  22178  114147 32542  56915  19355  11434     26304  ...   16109\n",
            "195 37552  98075  89146  105750 63284  50543  36390  82469  75840  63809  66151  75516  35678  37250  112983 22120  36294  56582  4099   24037  50535  103854 64946  93210  79248  45074  104075 72358  103720 32835  21045  79262  60102  75642  55965  15762  22281  112697 47841  7420   106768 116546 45493  12845  77096  108707    39544  ...   20766\n",
            "200 94309  36499  58071  44901  71600  32542  28820  57510  26876  114147 31599  39956  46933  29188  43515  23474  108156 112849 53944  107289 45621  51284  111379 45914  5865   19139  51273  109159 109323 61124  106324 105555 24270  19956  58570  27443  40590  27904  108757 59325  79375  87155  106514 44385  51182  83955     64551  ...  100550\n",
            "201 59313  115682 45729  75152  52276  25886  56169  48111  48038  99149  59752  103865 111807 66411  23084  81986  53413  59406  73500  71719  53385  81928  105754 87260  58573  109883 107962 109197 61721  113232 31297  54427  37109  110892 56209  22478  77834  30311  56931  71963  109256 62315  107756 101504 103292 105887    57770  ...   75777\n",
            "205 86218  98574  106794 51727  31449  93450  106225 29152  45621  104929 102129 73761  89246  32339  93224  99333  36063  91286  10405  30200  51459  90808  19423  47558  91143  31937  52766  64946  94824  28465  107724 11179  92291  114330 99135  110832 28776  39474  4340   100306 24513  94690  98562  59902  89936  59847    109589  ...   72387\n",
            "207 61868  84350  87500  27419  77448  90976  14703  3271   94343  101165 90997  36041  85150  66625  52902  81951  116842 77135  66719  19316  103301 47749  66628  83832  37513  24162  32852  108363 218    76057  93184  93839  72524  19318  91413  26058  89380  91482  98621  7692   112197 81773  80647  77509  99494  102227    16083  ...   66197\n",
            "210 90191  75322  101626 51533  76487  22051  71517  18900  65184  70263  51362  96051  42651  87446  70895  80054  8958   64589  24108  59017  60342  95914  55012  17261  101095 17631  63063  35966  98179  80267  29113  60507  24068  76290  62011  99595  88464  75882  100915 111492 93960  89344  99100  87077  49441  16493     71304  ...   23864\n",
            "212 28640  21122  49172  104868 54694  66473  111225 97721  72565  59884  84013  79533  74050  47984  74101  855    62695  105127 108205 73667  18755  115061 12863  23801  63533  28573  101378 42589  4822   38446  11523  1613   103862 8084   13030  23620  5514   3764   49357  91061  3474   19326  52187  45947  42398  46482     88518  ...     749\n",
            "226 17484  67028  36904  14576  62387  26396  47976  101345 85566  92998  23548  92531  43716  77567  35831  70431  87244  68413  30320  101171 76028  50298  95445  104690 89051  40744  113684 60835  89121  46182  77665  71375  102150 96481  33782  82022  6706   1986   110377 100433 113270 66992  111770 84435  90334  88796     35264  ...   74661\n",
            "230 97017  97906  93341  95403  26325  27887  33056  19599  87159  93914  26478  33233  6919   111225 26607  12453  406    40569  91673  86375  94394  95071  5649   104867 23794  12126  96232  41366  76943  27825  19271  9338   9679   27337  78582  40005  6139   147    8268   101817 13005  36729  76475  60084  7522   59946     86677  ...   27605\n",
            "\n",
            "[50 rows x 4 columns]\n",
            "read done...\n",
            "   user_id  item_id  phase       sim\n",
            "0        2      465      0  1.019416\n",
            "1        2      578      0  1.026770\n",
            "2        2      617      0  1.008168\n",
            "3        2      977      0  1.113956\n",
            "4        2     1165      0  1.023807\n",
            "52766,111225,4340,21426,2420,21279,7156,12845,4230,42651,87254,1604,6568,44534,77047,34716,12061,13302,14239,114125,76943,52131,13845,1518,91838,78364,14777,4999,114055,59903,27885,49787,24025,104777,35452,67536,29594,19326,114108,55349,114201,29931,17287,4483,20208,59996,69717,8180,51182,45198\n",
            "1866 93300 93173\n",
            "12542 627100 627100\n",
            "720273\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>phase</th>\n",
              "      <th>sim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2</td>\n",
              "      <td>465</td>\n",
              "      <td>0</td>\n",
              "      <td>1.019416</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>578</td>\n",
              "      <td>0</td>\n",
              "      <td>1.026770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>617</td>\n",
              "      <td>0</td>\n",
              "      <td>1.008168</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2</td>\n",
              "      <td>977</td>\n",
              "      <td>0</td>\n",
              "      <td>1.113956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2</td>\n",
              "      <td>1165</td>\n",
              "      <td>0</td>\n",
              "      <td>1.023807</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>801864</th>\n",
              "      <td>117127</td>\n",
              "      <td>77188</td>\n",
              "      <td>42646</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>801865</th>\n",
              "      <td>117147</td>\n",
              "      <td>117052</td>\n",
              "      <td>98306</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>801866</th>\n",
              "      <td>117163</td>\n",
              "      <td>12675</td>\n",
              "      <td>71962</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>801867</th>\n",
              "      <td>117241</td>\n",
              "      <td>43677</td>\n",
              "      <td>39430</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>801868</th>\n",
              "      <td>117268</td>\n",
              "      <td>7034</td>\n",
              "      <td>116014</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>801869 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        user_id  item_id   phase       sim\n",
              "0             2      465       0  1.019416\n",
              "1             2      578       0  1.026770\n",
              "2             2      617       0  1.008168\n",
              "3             2      977       0  1.113956\n",
              "4             2     1165       0  1.023807\n",
              "...         ...      ...     ...       ...\n",
              "801864   117127    77188   42646  2.000000\n",
              "801865   117147   117052   98306  2.000000\n",
              "801866   117163    12675   71962  2.000000\n",
              "801867   117241    43677   39430  2.000000\n",
              "801868   117268     7034  116014  2.000000\n",
              "\n",
              "[801869 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_WOFwYVkHzLx",
        "colab_type": "code",
        "outputId": "948ea6d4-96fc-4f92-8ab4-8ac65014df67",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "merge_result(merge_files=(('baseline_swing_origin_v5.csv', 0.0), \n",
        "                          ('baseline_itemcf_origin_v5.csv', 0.0),\n",
        "                          ('baseline_bi_graph_origin_v5.csv', 0.0),\n",
        "                          #('baseline_co_occurrance_origin_v3.csv', 0.0),\n",
        "                          ('baseline_usercf_origin_v5.csv', 0.0)),\n",
        "            output_file_name='baseline_merged_cf_prod_V5.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "baseline_swing_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0        11    79868  2.000000      0\n",
            "1        11     3654  1.280853      0\n",
            "2        11    19326  1.204814      0\n",
            "3        11    62673  1.142613      0\n",
            "4        11   109233  1.124095      0\n",
            "5        11    17287  1.120870      0\n",
            "6        11    20389  1.113274      0\n",
            "7        11     4971  1.109268      0\n",
            "8        11     3170  1.094097      0\n",
            "9        11   103775  1.070439      0\n",
            "10       11   114201  1.064722      0\n",
            "11       11    57601  1.057177      0\n",
            "12       11    40484  1.051987      0\n",
            "13       11    10528  1.046992      0\n",
            "14       11     7709  1.042163      0\n",
            "15       11    88605  1.041578      0\n",
            "16       11    39291  1.039435      0\n",
            "17       11    87107  1.036673      0\n",
            "18       11    45431  1.035685      0\n",
            "19       11    61324  1.035530      0\n",
            "20       11    85292  1.035328      0\n",
            "21       11    59255  1.032970      0\n",
            "22       11    26711  1.029760      0\n",
            "23       11    27800  1.027523      0\n",
            "24       11     4453  1.027305      0\n",
            "25       11    32237  1.025084      0\n",
            "26       11    57900  1.025043      0\n",
            "27       11    45198  1.024780      0\n",
            "28       11    14666  1.024735      0\n",
            "29       11    18552  1.024460      0\n",
            "30       11     9338  1.023658      0\n",
            "31       11    21517  1.021121      0\n",
            "32       11   116349  1.020633      0\n",
            "33       11    87254  1.019770      0\n",
            "34       11   102082  1.019707      0\n",
            "35       11    83429  1.019500      0\n",
            "36       11     4388  1.019309      0\n",
            "37       11    20201  1.019303      0\n",
            "38       11    40801  1.018446      0\n",
            "39       11    20208  1.018359      0\n",
            "40       11    50819  1.017773      0\n",
            "41       11    68105  1.017685      0\n",
            "42       11     4829  1.017020      0\n",
            "43       11    31054  1.016862      0\n",
            "44       11    85475  1.015096      0\n",
            "45       11    51940  1.014781      0\n",
            "46       11    77095  1.014519      0\n",
            "47       11    59382  1.013312      0\n",
            "48       11    95240  1.012543      0\n",
            "49       11     8572  1.011813      0\n",
            "baseline_itemcf_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0        11    20389  2.000000      0\n",
            "1        11   113564  1.951079      0\n",
            "2        11    66955  1.949349      0\n",
            "3        11    10528  1.936128      0\n",
            "4        11    84026  1.822822      0\n",
            "5        11    21941  1.796441      0\n",
            "6        11    59862  1.706241      0\n",
            "7        11    21517  1.588854      0\n",
            "8        11    55774  1.586497      0\n",
            "9        11    27800  1.545159      0\n",
            "10       11    15844  1.530182      0\n",
            "11       11    13624  1.513282      0\n",
            "12       11    15714  1.496500      0\n",
            "13       11    83429  1.491812      0\n",
            "14       11    68918  1.487174      0\n",
            "15       11    26711  1.463789      0\n",
            "16       11    26828  1.430661      0\n",
            "17       11    61738  1.410744      0\n",
            "18       11    32237  1.401758      0\n",
            "19       11    25539  1.384428      0\n",
            "20       11    85475  1.372828      0\n",
            "21       11    52751  1.354926      0\n",
            "22       11    59376  1.327218      0\n",
            "23       11    79345  1.320784      0\n",
            "24       11    37262  1.320117      0\n",
            "25       11    78630  1.315528      0\n",
            "26       11    65676  1.302614      0\n",
            "27       11    54313  1.284104      0\n",
            "28       11    17210  1.280819      0\n",
            "29       11    45652  1.271336      0\n",
            "30       11    59382  1.262897      0\n",
            "31       11    70957  1.253590      0\n",
            "32       11    40801  1.251801      0\n",
            "33       11    13491  1.239285      0\n",
            "34       11    18952  1.231284      0\n",
            "35       11   112173  1.200795      0\n",
            "36       11    77847  1.198853      0\n",
            "37       11    29549  1.179796      0\n",
            "38       11    41143  1.175007      0\n",
            "39       11    99570  1.174845      0\n",
            "40       11    17784  1.173645      0\n",
            "41       11    26062  1.170569      0\n",
            "42       11    74496  1.157757      0\n",
            "43       11    33940  1.147236      0\n",
            "44       11    67006  1.146961      0\n",
            "45       11    53059  1.144960      0\n",
            "46       11    59255  1.143867      0\n",
            "47       11    32531  1.128687      0\n",
            "48       11    22093  1.124346      0\n",
            "49       11     6264  1.123883      0\n",
            "baseline_bi_graph_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0      1133    98645  2.000000      0\n",
            "1      1133   108699  1.995845      0\n",
            "2      1133    53692  1.878340      0\n",
            "3      1133    52388  1.877363      0\n",
            "4      1133    93892  1.876451      0\n",
            "5      1133     4844  1.831975      0\n",
            "6      1133    71667  1.830205      0\n",
            "7      1133    49068  1.829979      0\n",
            "8      1133   113291  1.829773      0\n",
            "9      1133    11404  1.829300      0\n",
            "10     1133    80180  1.828930      0\n",
            "11     1133   107429  1.828047      0\n",
            "12     1133    53397  1.827227      0\n",
            "13     1133    49182  1.825024      0\n",
            "14     1133    47839  1.758963      0\n",
            "15     1133    75416  1.726161      0\n",
            "16     1133    37807  1.683264      0\n",
            "17     1133     8089  1.668711      0\n",
            "18     1133    40249  1.665439      0\n",
            "19     1133    87420  1.650202      0\n",
            "20     1133   112351  1.560977      0\n",
            "21     1133     6994  1.540631      0\n",
            "22     1133    24847  1.531246      0\n",
            "23     1133      750  1.518611      0\n",
            "24     1133    29353  1.518530      0\n",
            "25     1133    29694  1.518508      0\n",
            "26     1133    70239  1.518105      0\n",
            "27     1133    40199  1.517599      0\n",
            "28     1133    87821  1.517482      0\n",
            "29     1133   116083  1.455271      0\n",
            "30     1133    88701  1.443843      0\n",
            "31     1133   108642  1.424122      0\n",
            "32     1133     4655  1.424006      0\n",
            "33     1133    19742  1.422700      0\n",
            "34     1133    26250  1.422630      0\n",
            "35     1133   111576  1.404924      0\n",
            "36     1133    49396  1.399915      0\n",
            "37     1133    88942  1.399679      0\n",
            "38     1133    58340  1.396767      0\n",
            "39     1133    96668  1.390492      0\n",
            "40     1133   115561  1.356592      0\n",
            "41     1133    46858  1.240349      0\n",
            "42     1133    78495  1.237126      0\n",
            "43     1133   111215  1.227013      0\n",
            "44     1133    80765  1.174892      0\n",
            "45     1133    89550  1.161486      0\n",
            "46     1133   113941  1.149010      0\n",
            "47     1133   107596  1.146551      0\n",
            "48     1133    47112  1.144734      0\n",
            "49     1133    71848  1.139022      0\n",
            "baseline_usercf_origin_v5.csv\n",
            "    user_id  item_id       sim  phase\n",
            "0        11    79868  2.000000      0\n",
            "1        11    26804  1.769969      0\n",
            "2        11    20389  1.734310      0\n",
            "3        11    84026  1.732007      0\n",
            "4        11    19326  1.619447      0\n",
            "5        11    29768  1.566826      0\n",
            "6        11    26828  1.566133      0\n",
            "7        11   109233  1.471013      0\n",
            "8        11    17287  1.466899      0\n",
            "9        11    83429  1.439184      0\n",
            "10       11    62673  1.414347      0\n",
            "11       11     3654  1.414120      0\n",
            "12       11   103775  1.378546      0\n",
            "13       11    87107  1.347646      0\n",
            "14       11   114201  1.338938      0\n",
            "15       11    95346  1.329488      0\n",
            "16       11    24917  1.327771      0\n",
            "17       11    76676  1.327347      0\n",
            "18       11    18552  1.321126      0\n",
            "19       11    93167  1.316604      0\n",
            "20       11    59862  1.312715      0\n",
            "21       11    52766  1.309881      0\n",
            "22       11    26257  1.300873      0\n",
            "23       11    74472  1.297124      0\n",
            "24       11    21941  1.271900      0\n",
            "25       11     7709  1.261400      0\n",
            "26       11    39291  1.243657      0\n",
            "27       11     3170  1.235189      0\n",
            "28       11    66955  1.234792      0\n",
            "29       11    40484  1.231573      0\n",
            "30       11    45654  1.219392      0\n",
            "31       11    11896  1.217740      0\n",
            "32       11    45431  1.215503      0\n",
            "33       11     4971  1.211763      0\n",
            "34       11    10860  1.205351      0\n",
            "35       11    36719  1.203299      0\n",
            "36       11    59376  1.201875      0\n",
            "37       11     7122  1.189683      0\n",
            "38       11    88605  1.186715      0\n",
            "39       11    31268  1.178162      0\n",
            "40       11    11595  1.175335      0\n",
            "41       11    10528  1.171597      0\n",
            "42       11    57601  1.168323      0\n",
            "43       11    33074  1.162875      0\n",
            "44       11    87254  1.162445      0\n",
            "45       11     2538  1.156393      0\n",
            "46       11    14666  1.153702      0\n",
            "47       11    20201  1.152970      0\n",
            "48       11     9338  1.151604      0\n",
            "49       11    61738  1.150007      0\n",
            "read done...\n",
            "   user_id  item_id  phase       sim\n",
            "0        1     1075      1  1.046323\n",
            "1        1     1433      1  1.000920\n",
            "2        1     3234      1  1.009502\n",
            "3        1     4690      1  1.027601\n",
            "4        1     4858      1  1.000554\n",
            "52766,111225,4340,21426,2420,21279,7156,12845,4230,87254,42651,1604,6568,44534,77047,34716,12061,14239,114125,13302,76943,1518,91838,52131,78364,13845,4999,14777,114055,59903,27885,49787,67536,24025,104777,35452,29594,19326,114108,55349,29931,114201,20208,4483,17287,69717,59996,8180,110172,27337\n",
            "1927 96350 96197\n",
            "8462 423100 423100\n",
            "519297\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>item_id</th>\n",
              "      <th>phase</th>\n",
              "      <th>sim</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>1075</td>\n",
              "      <td>1</td>\n",
              "      <td>1.046323</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>1433</td>\n",
              "      <td>1</td>\n",
              "      <td>1.000920</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>3234</td>\n",
              "      <td>1</td>\n",
              "      <td>1.009502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>4690</td>\n",
              "      <td>1</td>\n",
              "      <td>1.027601</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>4858</td>\n",
              "      <td>1</td>\n",
              "      <td>1.000554</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1793474</th>\n",
              "      <td>35435</td>\n",
              "      <td>112129</td>\n",
              "      <td>4</td>\n",
              "      <td>1.006197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1793475</th>\n",
              "      <td>35435</td>\n",
              "      <td>113185</td>\n",
              "      <td>4</td>\n",
              "      <td>1.040207</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1793476</th>\n",
              "      <td>35435</td>\n",
              "      <td>113187</td>\n",
              "      <td>4</td>\n",
              "      <td>1.010045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1793477</th>\n",
              "      <td>35435</td>\n",
              "      <td>113239</td>\n",
              "      <td>4</td>\n",
              "      <td>1.072874</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1793478</th>\n",
              "      <td>35435</td>\n",
              "      <td>114240</td>\n",
              "      <td>4</td>\n",
              "      <td>1.027091</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>1793479 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         user_id  item_id  phase       sim\n",
              "0              1     1075      1  1.046323\n",
              "1              1     1433      1  1.000920\n",
              "2              1     3234      1  1.009502\n",
              "3              1     4690      1  1.027601\n",
              "4              1     4858      1  1.000554\n",
              "...          ...      ...    ...       ...\n",
              "1793474    35435   112129      4  1.006197\n",
              "1793475    35435   113185      4  1.040207\n",
              "1793476    35435   113187      4  1.010045\n",
              "1793477    35435   113239      4  1.072874\n",
              "1793478    35435   114240      4  1.027091\n",
              "\n",
              "[1793479 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CfUNWQP0_LXS",
        "colab_type": "code",
        "outputId": "b6e8d73a-d153-44c1-a2e0-a90151d21b9a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "ls"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "\u001b[0m\u001b[01;34mdrive\u001b[0m/                       \u001b[01;34msample_data\u001b[0m/       underexpose_test.zip\n",
            "\u001b[01;34moffline_underexpose_answer\u001b[0m/  \u001b[01;34msub_offline\u001b[0m/       \u001b[01;34munderexpose_train\u001b[0m/\n",
            "\u001b[01;34moffline_underexpose_test\u001b[0m/    \u001b[01;34munderexpose_test\u001b[0m/  underexpose_train.zip\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dTDRQSM44PqW",
        "colab_type": "text"
      },
      "source": [
        "# Data Analysis\n",
        "观察不同数据集的交叉情况"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X41WjN5Wx8q9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "click_train_1 = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(1), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "click_test_1 = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(1), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "click_train_2 = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(2), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "click_test_2 = pd.read_csv(test_path + '/underexpose_test_click-{}.csv'.format(2), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "click_test_qtime_2 = pd.read_csv(test_path + '/underexpose_test_qtime-{}.csv'.format(2), header=None,\n",
        "                              names=['user_id', 'query_time'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "yXijJ6m28BcE",
        "colab_type": "text"
      },
      "source": [
        "## User"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Id3zpZVVyKBb",
        "colab_type": "code",
        "outputId": "7292e772-51ea-4f29-a5b5-be886f0dce44",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# user in click_test_T = user in click_test_qtime_T\n",
        "set(click_test_2['user_id'].unique()) == set(click_test_qtime_2['user_id'].unique())"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gV3kTe353IyX",
        "colab_type": "code",
        "outputId": "22f62896-d0a4-46ee-e06d-4753b15b4c32",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# some users in click_test_T may not exists in click_train_T， cold_start users\n",
        "len(set(click_test_2['user_id'].unique()) - set(click_train_2['user_id'].unique()))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1690"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RrskiSdI5Ve2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# some users in click_test_T may not exists in click_train_T\n",
        "len(set(click_test_1['user_id'].unique()) - set(click_train_0['user_id'].unique()))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kkR25wHK3dUv",
        "colab_type": "code",
        "outputId": "89fceab8-69c8-4093-bcfe-1e318906643b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# different click_train_T have common users !!\n",
        "len(set(click_train_0['user_id'].unique()) & set(click_train_1['user_id'].unique()))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12854"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Te_vJjpi32vW",
        "colab_type": "code",
        "outputId": "4a8e0170-a9e4-44e3-f5fc-1ac612c7c09d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# different click_test_T have NO common users\n",
        "len(set(click_test_2['user_id'].unique()) & set(click_test_1['user_id'].unique()))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CGEgGoua3_A5",
        "colab_type": "code",
        "outputId": "2c2ce187-e2d3-4b40-f94f-5062ff68fc4d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# but some users in click_test_T may exist in click_train_t, where t < T\n",
        "len(set(click_test_2['user_id'].unique()) & set(click_train_1['user_id'].unique()))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1409"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2RPsms9W8DST",
        "colab_type": "text"
      },
      "source": [
        "## Time"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4Szw3siG68P0",
        "colab_type": "code",
        "outputId": "354737b2-58f0-41ee-df67-7a36b1bb9b2b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# cross\n",
        "click_test_2['time'].min() >= click_train_2['time'].max()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_qczKk007B-x",
        "colab_type": "code",
        "outputId": "a25a9106-fcb5-48a2-fa82-417260e93004",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# cross ??? why\n",
        "click_train_2['time'].min() >= click_train_0['time'].max()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "False"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sDtiQoi-7-wJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# cross ??? why\n",
        "click_train_2['time'].min() >= click_train_0['time'].max()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3AA6dB7U8Eth",
        "colab_type": "code",
        "outputId": "04b864b0-2239-467b-ad2b-1e03a3b5e707",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# phase T's latest click > phase t click,   where t < T\n",
        "click_train_2['time'].max() >= click_train_1['time'].max()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2dRxjMkCCTX-",
        "colab_type": "text"
      },
      "source": [
        "## Feat"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YYLHPZhZHI8L",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import matplotlib.pyplot as plt \n",
        "import seaborn as sns\n",
        "%matplotlib inline"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "W79oPGLsCStO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "feat_cols = ['item_id',] + ['txt_embed_'+ str(i) for i in range(128)] + ['img_embed_'+ str(i) for i in range(128)]\n",
        "item_feat_df = pd.read_csv(train_path + '/underexpose_item_feat.csv',header=None, names=feat_cols)\n",
        "\n",
        "item_feat_df['txt_embed_0'] = item_feat_df['txt_embed_0'].apply(lambda x:float(x[1:]))\n",
        "item_feat_df['txt_embed_127'] = item_feat_df['txt_embed_127'].apply(lambda x:float(x[:-1]))\n",
        "item_feat_df['img_embed_0'] = item_feat_df['img_embed_0'].apply(lambda x:float(x[1:]))\n",
        "item_feat_df['img_embed_127'] = item_feat_df['img_embed_127'].apply(lambda x:float(x[:-1]))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EBWvorMUFwmF",
        "colab_type": "code",
        "outputId": "f112bfe0-c3e5-419e-e953-55b6dd9d0b0a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        }
      },
      "source": [
        "item_feat_df"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>item_id</th>\n",
              "      <th>txt_embed_0</th>\n",
              "      <th>txt_embed_1</th>\n",
              "      <th>txt_embed_2</th>\n",
              "      <th>txt_embed_3</th>\n",
              "      <th>txt_embed_4</th>\n",
              "      <th>txt_embed_5</th>\n",
              "      <th>txt_embed_6</th>\n",
              "      <th>txt_embed_7</th>\n",
              "      <th>txt_embed_8</th>\n",
              "      <th>txt_embed_9</th>\n",
              "      <th>txt_embed_10</th>\n",
              "      <th>txt_embed_11</th>\n",
              "      <th>txt_embed_12</th>\n",
              "      <th>txt_embed_13</th>\n",
              "      <th>txt_embed_14</th>\n",
              "      <th>txt_embed_15</th>\n",
              "      <th>txt_embed_16</th>\n",
              "      <th>txt_embed_17</th>\n",
              "      <th>txt_embed_18</th>\n",
              "      <th>txt_embed_19</th>\n",
              "      <th>txt_embed_20</th>\n",
              "      <th>txt_embed_21</th>\n",
              "      <th>txt_embed_22</th>\n",
              "      <th>txt_embed_23</th>\n",
              "      <th>txt_embed_24</th>\n",
              "      <th>txt_embed_25</th>\n",
              "      <th>txt_embed_26</th>\n",
              "      <th>txt_embed_27</th>\n",
              "      <th>txt_embed_28</th>\n",
              "      <th>txt_embed_29</th>\n",
              "      <th>txt_embed_30</th>\n",
              "      <th>txt_embed_31</th>\n",
              "      <th>txt_embed_32</th>\n",
              "      <th>txt_embed_33</th>\n",
              "      <th>txt_embed_34</th>\n",
              "      <th>txt_embed_35</th>\n",
              "      <th>txt_embed_36</th>\n",
              "      <th>txt_embed_37</th>\n",
              "      <th>txt_embed_38</th>\n",
              "      <th>txt_embed_39</th>\n",
              "      <th>txt_embed_40</th>\n",
              "      <th>txt_embed_41</th>\n",
              "      <th>txt_embed_42</th>\n",
              "      <th>txt_embed_43</th>\n",
              "      <th>txt_embed_44</th>\n",
              "      <th>txt_embed_45</th>\n",
              "      <th>txt_embed_46</th>\n",
              "      <th>txt_embed_47</th>\n",
              "      <th>txt_embed_48</th>\n",
              "      <th>txt_embed_49</th>\n",
              "      <th>txt_embed_50</th>\n",
              "      <th>txt_embed_51</th>\n",
              "      <th>txt_embed_52</th>\n",
              "      <th>txt_embed_53</th>\n",
              "      <th>txt_embed_54</th>\n",
              "      <th>txt_embed_55</th>\n",
              "      <th>txt_embed_56</th>\n",
              "      <th>txt_embed_57</th>\n",
              "      <th>txt_embed_58</th>\n",
              "      <th>txt_embed_59</th>\n",
              "      <th>txt_embed_60</th>\n",
              "      <th>txt_embed_61</th>\n",
              "      <th>txt_embed_62</th>\n",
              "      <th>txt_embed_63</th>\n",
              "      <th>txt_embed_64</th>\n",
              "      <th>txt_embed_65</th>\n",
              "      <th>txt_embed_66</th>\n",
              "      <th>txt_embed_67</th>\n",
              "      <th>txt_embed_68</th>\n",
              "      <th>txt_embed_69</th>\n",
              "      <th>txt_embed_70</th>\n",
              "      <th>txt_embed_71</th>\n",
              "      <th>txt_embed_72</th>\n",
              "      <th>txt_embed_73</th>\n",
              "      <th>txt_embed_74</th>\n",
              "      <th>txt_embed_75</th>\n",
              "      <th>txt_embed_76</th>\n",
              "      <th>txt_embed_77</th>\n",
              "      <th>txt_embed_78</th>\n",
              "      <th>txt_embed_79</th>\n",
              "      <th>txt_embed_80</th>\n",
              "      <th>txt_embed_81</th>\n",
              "      <th>txt_embed_82</th>\n",
              "      <th>txt_embed_83</th>\n",
              "      <th>txt_embed_84</th>\n",
              "      <th>txt_embed_85</th>\n",
              "      <th>txt_embed_86</th>\n",
              "      <th>txt_embed_87</th>\n",
              "      <th>txt_embed_88</th>\n",
              "      <th>txt_embed_89</th>\n",
              "      <th>txt_embed_90</th>\n",
              "      <th>txt_embed_91</th>\n",
              "      <th>txt_embed_92</th>\n",
              "      <th>txt_embed_93</th>\n",
              "      <th>txt_embed_94</th>\n",
              "      <th>txt_embed_95</th>\n",
              "      <th>txt_embed_96</th>\n",
              "      <th>txt_embed_97</th>\n",
              "      <th>txt_embed_98</th>\n",
              "      <th>...</th>\n",
              "      <th>img_embed_28</th>\n",
              "      <th>img_embed_29</th>\n",
              "      <th>img_embed_30</th>\n",
              "      <th>img_embed_31</th>\n",
              "      <th>img_embed_32</th>\n",
              "      <th>img_embed_33</th>\n",
              "      <th>img_embed_34</th>\n",
              "      <th>img_embed_35</th>\n",
              "      <th>img_embed_36</th>\n",
              "      <th>img_embed_37</th>\n",
              "      <th>img_embed_38</th>\n",
              "      <th>img_embed_39</th>\n",
              "      <th>img_embed_40</th>\n",
              "      <th>img_embed_41</th>\n",
              "      <th>img_embed_42</th>\n",
              "      <th>img_embed_43</th>\n",
              "      <th>img_embed_44</th>\n",
              "      <th>img_embed_45</th>\n",
              "      <th>img_embed_46</th>\n",
              "      <th>img_embed_47</th>\n",
              "      <th>img_embed_48</th>\n",
              "      <th>img_embed_49</th>\n",
              "      <th>img_embed_50</th>\n",
              "      <th>img_embed_51</th>\n",
              "      <th>img_embed_52</th>\n",
              "      <th>img_embed_53</th>\n",
              "      <th>img_embed_54</th>\n",
              "      <th>img_embed_55</th>\n",
              "      <th>img_embed_56</th>\n",
              "      <th>img_embed_57</th>\n",
              "      <th>img_embed_58</th>\n",
              "      <th>img_embed_59</th>\n",
              "      <th>img_embed_60</th>\n",
              "      <th>img_embed_61</th>\n",
              "      <th>img_embed_62</th>\n",
              "      <th>img_embed_63</th>\n",
              "      <th>img_embed_64</th>\n",
              "      <th>img_embed_65</th>\n",
              "      <th>img_embed_66</th>\n",
              "      <th>img_embed_67</th>\n",
              "      <th>img_embed_68</th>\n",
              "      <th>img_embed_69</th>\n",
              "      <th>img_embed_70</th>\n",
              "      <th>img_embed_71</th>\n",
              "      <th>img_embed_72</th>\n",
              "      <th>img_embed_73</th>\n",
              "      <th>img_embed_74</th>\n",
              "      <th>img_embed_75</th>\n",
              "      <th>img_embed_76</th>\n",
              "      <th>img_embed_77</th>\n",
              "      <th>img_embed_78</th>\n",
              "      <th>img_embed_79</th>\n",
              "      <th>img_embed_80</th>\n",
              "      <th>img_embed_81</th>\n",
              "      <th>img_embed_82</th>\n",
              "      <th>img_embed_83</th>\n",
              "      <th>img_embed_84</th>\n",
              "      <th>img_embed_85</th>\n",
              "      <th>img_embed_86</th>\n",
              "      <th>img_embed_87</th>\n",
              "      <th>img_embed_88</th>\n",
              "      <th>img_embed_89</th>\n",
              "      <th>img_embed_90</th>\n",
              "      <th>img_embed_91</th>\n",
              "      <th>img_embed_92</th>\n",
              "      <th>img_embed_93</th>\n",
              "      <th>img_embed_94</th>\n",
              "      <th>img_embed_95</th>\n",
              "      <th>img_embed_96</th>\n",
              "      <th>img_embed_97</th>\n",
              "      <th>img_embed_98</th>\n",
              "      <th>img_embed_99</th>\n",
              "      <th>img_embed_100</th>\n",
              "      <th>img_embed_101</th>\n",
              "      <th>img_embed_102</th>\n",
              "      <th>img_embed_103</th>\n",
              "      <th>img_embed_104</th>\n",
              "      <th>img_embed_105</th>\n",
              "      <th>img_embed_106</th>\n",
              "      <th>img_embed_107</th>\n",
              "      <th>img_embed_108</th>\n",
              "      <th>img_embed_109</th>\n",
              "      <th>img_embed_110</th>\n",
              "      <th>img_embed_111</th>\n",
              "      <th>img_embed_112</th>\n",
              "      <th>img_embed_113</th>\n",
              "      <th>img_embed_114</th>\n",
              "      <th>img_embed_115</th>\n",
              "      <th>img_embed_116</th>\n",
              "      <th>img_embed_117</th>\n",
              "      <th>img_embed_118</th>\n",
              "      <th>img_embed_119</th>\n",
              "      <th>img_embed_120</th>\n",
              "      <th>img_embed_121</th>\n",
              "      <th>img_embed_122</th>\n",
              "      <th>img_embed_123</th>\n",
              "      <th>img_embed_124</th>\n",
              "      <th>img_embed_125</th>\n",
              "      <th>img_embed_126</th>\n",
              "      <th>img_embed_127</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42844</td>\n",
              "      <td>4.514945</td>\n",
              "      <td>-2.383720</td>\n",
              "      <td>0.500414</td>\n",
              "      <td>0.407068</td>\n",
              "      <td>-1.995229</td>\n",
              "      <td>0.109078</td>\n",
              "      <td>-0.691775</td>\n",
              "      <td>2.227460</td>\n",
              "      <td>-6.437974</td>\n",
              "      <td>-0.824897</td>\n",
              "      <td>-0.138724</td>\n",
              "      <td>-0.379329</td>\n",
              "      <td>0.627660</td>\n",
              "      <td>0.418377</td>\n",
              "      <td>4.441218</td>\n",
              "      <td>0.299819</td>\n",
              "      <td>0.578557</td>\n",
              "      <td>-4.699289</td>\n",
              "      <td>-0.394740</td>\n",
              "      <td>-2.391651</td>\n",
              "      <td>0.370532</td>\n",
              "      <td>-1.355466</td>\n",
              "      <td>-1.074178</td>\n",
              "      <td>-2.321640</td>\n",
              "      <td>-0.332456</td>\n",
              "      <td>0.123886</td>\n",
              "      <td>-2.439156</td>\n",
              "      <td>-0.345599</td>\n",
              "      <td>-3.304347</td>\n",
              "      <td>1.485284</td>\n",
              "      <td>0.909802</td>\n",
              "      <td>-1.643002</td>\n",
              "      <td>5.037034</td>\n",
              "      <td>2.780115</td>\n",
              "      <td>4.776496</td>\n",
              "      <td>2.255275</td>\n",
              "      <td>3.769707</td>\n",
              "      <td>-3.661684</td>\n",
              "      <td>-0.649405</td>\n",
              "      <td>4.199636</td>\n",
              "      <td>-0.634806</td>\n",
              "      <td>2.430340</td>\n",
              "      <td>-2.874019</td>\n",
              "      <td>-0.786178</td>\n",
              "      <td>-0.504916</td>\n",
              "      <td>-6.007789</td>\n",
              "      <td>1.498495</td>\n",
              "      <td>1.530613</td>\n",
              "      <td>2.379655</td>\n",
              "      <td>-0.023146</td>\n",
              "      <td>-0.703605</td>\n",
              "      <td>2.146936</td>\n",
              "      <td>3.944832</td>\n",
              "      <td>-3.098598</td>\n",
              "      <td>2.513453</td>\n",
              "      <td>-5.395860</td>\n",
              "      <td>0.762132</td>\n",
              "      <td>2.801804</td>\n",
              "      <td>0.877964</td>\n",
              "      <td>-0.585980</td>\n",
              "      <td>1.962556</td>\n",
              "      <td>-5.171217</td>\n",
              "      <td>1.181687</td>\n",
              "      <td>0.541953</td>\n",
              "      <td>0.485833</td>\n",
              "      <td>4.212568</td>\n",
              "      <td>3.458198</td>\n",
              "      <td>1.402939</td>\n",
              "      <td>-0.546293</td>\n",
              "      <td>2.182101</td>\n",
              "      <td>-0.096255</td>\n",
              "      <td>1.736608</td>\n",
              "      <td>0.685146</td>\n",
              "      <td>-1.613285</td>\n",
              "      <td>-0.912876</td>\n",
              "      <td>-0.532397</td>\n",
              "      <td>1.724842</td>\n",
              "      <td>2.264115</td>\n",
              "      <td>-2.259756</td>\n",
              "      <td>4.506509</td>\n",
              "      <td>-0.346088</td>\n",
              "      <td>0.928198</td>\n",
              "      <td>-2.078261</td>\n",
              "      <td>-0.195576</td>\n",
              "      <td>4.847578</td>\n",
              "      <td>-2.958686</td>\n",
              "      <td>1.006080</td>\n",
              "      <td>2.082232</td>\n",
              "      <td>-2.259682</td>\n",
              "      <td>-2.033314</td>\n",
              "      <td>0.218232</td>\n",
              "      <td>3.975312</td>\n",
              "      <td>2.003447</td>\n",
              "      <td>-0.240628</td>\n",
              "      <td>-2.468548</td>\n",
              "      <td>1.666064</td>\n",
              "      <td>-2.081961</td>\n",
              "      <td>-2.496872</td>\n",
              "      <td>-1.901637</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.594815</td>\n",
              "      <td>2.129452</td>\n",
              "      <td>-1.072991</td>\n",
              "      <td>2.495177</td>\n",
              "      <td>-0.615316</td>\n",
              "      <td>-0.372666</td>\n",
              "      <td>1.441637</td>\n",
              "      <td>-0.386958</td>\n",
              "      <td>0.574267</td>\n",
              "      <td>0.290140</td>\n",
              "      <td>2.143984</td>\n",
              "      <td>-2.179755</td>\n",
              "      <td>1.001814</td>\n",
              "      <td>1.709265</td>\n",
              "      <td>1.765996</td>\n",
              "      <td>-0.978148</td>\n",
              "      <td>2.376266</td>\n",
              "      <td>1.286386</td>\n",
              "      <td>-1.498712</td>\n",
              "      <td>-2.120687</td>\n",
              "      <td>-1.626103</td>\n",
              "      <td>-1.738368</td>\n",
              "      <td>-0.223271</td>\n",
              "      <td>1.264437</td>\n",
              "      <td>-0.987131</td>\n",
              "      <td>-1.909374</td>\n",
              "      <td>2.231456</td>\n",
              "      <td>-2.683646</td>\n",
              "      <td>-0.635318</td>\n",
              "      <td>0.085889</td>\n",
              "      <td>-0.823508</td>\n",
              "      <td>0.556983</td>\n",
              "      <td>2.515354</td>\n",
              "      <td>-3.420530</td>\n",
              "      <td>0.063466</td>\n",
              "      <td>0.009474</td>\n",
              "      <td>-0.065751</td>\n",
              "      <td>-1.075365</td>\n",
              "      <td>-2.971309</td>\n",
              "      <td>1.019620</td>\n",
              "      <td>2.509559</td>\n",
              "      <td>-1.525837</td>\n",
              "      <td>0.542580</td>\n",
              "      <td>-0.269730</td>\n",
              "      <td>-0.035962</td>\n",
              "      <td>0.391800</td>\n",
              "      <td>-1.234116</td>\n",
              "      <td>2.314029</td>\n",
              "      <td>1.898617</td>\n",
              "      <td>-2.361128</td>\n",
              "      <td>0.312405</td>\n",
              "      <td>3.444607</td>\n",
              "      <td>-0.886250</td>\n",
              "      <td>-1.343637</td>\n",
              "      <td>0.954459</td>\n",
              "      <td>0.630835</td>\n",
              "      <td>-2.394722</td>\n",
              "      <td>0.683487</td>\n",
              "      <td>1.149004</td>\n",
              "      <td>-1.351173</td>\n",
              "      <td>2.023900</td>\n",
              "      <td>1.599198</td>\n",
              "      <td>1.382868</td>\n",
              "      <td>1.605678</td>\n",
              "      <td>1.880667</td>\n",
              "      <td>-0.508161</td>\n",
              "      <td>0.242840</td>\n",
              "      <td>-0.260849</td>\n",
              "      <td>1.875943</td>\n",
              "      <td>0.206135</td>\n",
              "      <td>0.186973</td>\n",
              "      <td>2.047446</td>\n",
              "      <td>-0.575472</td>\n",
              "      <td>3.016410</td>\n",
              "      <td>2.757146</td>\n",
              "      <td>3.353721</td>\n",
              "      <td>-0.457272</td>\n",
              "      <td>-0.125337</td>\n",
              "      <td>2.332963</td>\n",
              "      <td>3.858967</td>\n",
              "      <td>-2.075490</td>\n",
              "      <td>-0.705496</td>\n",
              "      <td>0.203452</td>\n",
              "      <td>1.719733</td>\n",
              "      <td>2.925039</td>\n",
              "      <td>-0.388639</td>\n",
              "      <td>1.225732</td>\n",
              "      <td>-1.773137</td>\n",
              "      <td>0.052655</td>\n",
              "      <td>1.279922</td>\n",
              "      <td>-3.374727</td>\n",
              "      <td>-1.506969</td>\n",
              "      <td>-1.820180</td>\n",
              "      <td>-3.024644</td>\n",
              "      <td>0.445263</td>\n",
              "      <td>0.013933</td>\n",
              "      <td>-1.300239</td>\n",
              "      <td>2.759948</td>\n",
              "      <td>2.056171</td>\n",
              "      <td>0.508703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>67898</td>\n",
              "      <td>-2.002905</td>\n",
              "      <td>-0.929881</td>\n",
              "      <td>0.790017</td>\n",
              "      <td>-1.380895</td>\n",
              "      <td>-0.510463</td>\n",
              "      <td>-1.810096</td>\n",
              "      <td>1.363962</td>\n",
              "      <td>0.497401</td>\n",
              "      <td>-4.038903</td>\n",
              "      <td>-3.057872</td>\n",
              "      <td>0.758558</td>\n",
              "      <td>-1.012155</td>\n",
              "      <td>2.816802</td>\n",
              "      <td>2.086895</td>\n",
              "      <td>-1.464331</td>\n",
              "      <td>-1.840496</td>\n",
              "      <td>-2.089971</td>\n",
              "      <td>-1.566872</td>\n",
              "      <td>1.545390</td>\n",
              "      <td>1.284341</td>\n",
              "      <td>-2.270262</td>\n",
              "      <td>0.780126</td>\n",
              "      <td>1.615594</td>\n",
              "      <td>-0.546058</td>\n",
              "      <td>1.370750</td>\n",
              "      <td>-1.178124</td>\n",
              "      <td>1.346842</td>\n",
              "      <td>0.442434</td>\n",
              "      <td>-1.498540</td>\n",
              "      <td>-0.589944</td>\n",
              "      <td>2.008351</td>\n",
              "      <td>-0.497135</td>\n",
              "      <td>-1.644230</td>\n",
              "      <td>3.140623</td>\n",
              "      <td>3.492178</td>\n",
              "      <td>0.335395</td>\n",
              "      <td>1.810923</td>\n",
              "      <td>-4.012080</td>\n",
              "      <td>2.419593</td>\n",
              "      <td>0.190941</td>\n",
              "      <td>-0.630611</td>\n",
              "      <td>3.289332</td>\n",
              "      <td>-1.446719</td>\n",
              "      <td>-0.611340</td>\n",
              "      <td>0.700662</td>\n",
              "      <td>-2.465656</td>\n",
              "      <td>-0.596773</td>\n",
              "      <td>2.498210</td>\n",
              "      <td>3.682916</td>\n",
              "      <td>0.238843</td>\n",
              "      <td>0.570510</td>\n",
              "      <td>0.094637</td>\n",
              "      <td>2.540728</td>\n",
              "      <td>-1.461287</td>\n",
              "      <td>0.866470</td>\n",
              "      <td>-0.882576</td>\n",
              "      <td>-1.646977</td>\n",
              "      <td>1.915175</td>\n",
              "      <td>2.800210</td>\n",
              "      <td>1.476535</td>\n",
              "      <td>2.345148</td>\n",
              "      <td>-1.675377</td>\n",
              "      <td>-2.948241</td>\n",
              "      <td>4.322546</td>\n",
              "      <td>0.006485</td>\n",
              "      <td>1.596134</td>\n",
              "      <td>1.740825</td>\n",
              "      <td>2.517148</td>\n",
              "      <td>1.652603</td>\n",
              "      <td>2.301202</td>\n",
              "      <td>-1.820376</td>\n",
              "      <td>0.313138</td>\n",
              "      <td>-0.460512</td>\n",
              "      <td>-1.465822</td>\n",
              "      <td>0.025661</td>\n",
              "      <td>0.197509</td>\n",
              "      <td>0.952180</td>\n",
              "      <td>1.808614</td>\n",
              "      <td>-3.924314</td>\n",
              "      <td>0.874062</td>\n",
              "      <td>1.507638</td>\n",
              "      <td>-1.474959</td>\n",
              "      <td>-0.728147</td>\n",
              "      <td>1.680941</td>\n",
              "      <td>-2.275249</td>\n",
              "      <td>0.160674</td>\n",
              "      <td>-1.175852</td>\n",
              "      <td>2.707390</td>\n",
              "      <td>-1.540468</td>\n",
              "      <td>-1.755580</td>\n",
              "      <td>1.266704</td>\n",
              "      <td>0.504936</td>\n",
              "      <td>1.069627</td>\n",
              "      <td>1.892455</td>\n",
              "      <td>-2.870071</td>\n",
              "      <td>1.314711</td>\n",
              "      <td>-0.647611</td>\n",
              "      <td>-3.864238</td>\n",
              "      <td>-1.128709</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.345706</td>\n",
              "      <td>1.750381</td>\n",
              "      <td>-0.757739</td>\n",
              "      <td>0.708200</td>\n",
              "      <td>-2.036261</td>\n",
              "      <td>-1.247846</td>\n",
              "      <td>1.337176</td>\n",
              "      <td>0.381086</td>\n",
              "      <td>-2.195716</td>\n",
              "      <td>2.349268</td>\n",
              "      <td>3.234238</td>\n",
              "      <td>-1.073745</td>\n",
              "      <td>2.727566</td>\n",
              "      <td>2.134141</td>\n",
              "      <td>1.316549</td>\n",
              "      <td>1.401429</td>\n",
              "      <td>0.322648</td>\n",
              "      <td>1.520445</td>\n",
              "      <td>-1.555399</td>\n",
              "      <td>-1.759372</td>\n",
              "      <td>-0.522331</td>\n",
              "      <td>-2.062852</td>\n",
              "      <td>1.235842</td>\n",
              "      <td>0.166176</td>\n",
              "      <td>-3.379686</td>\n",
              "      <td>-2.222848</td>\n",
              "      <td>1.613652</td>\n",
              "      <td>0.736073</td>\n",
              "      <td>-2.189353</td>\n",
              "      <td>1.284548</td>\n",
              "      <td>2.872613</td>\n",
              "      <td>2.676115</td>\n",
              "      <td>0.147529</td>\n",
              "      <td>-1.317109</td>\n",
              "      <td>-2.644052</td>\n",
              "      <td>-1.835089</td>\n",
              "      <td>0.957417</td>\n",
              "      <td>-2.385891</td>\n",
              "      <td>-0.661901</td>\n",
              "      <td>2.658265</td>\n",
              "      <td>-0.945105</td>\n",
              "      <td>-1.011989</td>\n",
              "      <td>-0.654781</td>\n",
              "      <td>-0.336352</td>\n",
              "      <td>-2.126801</td>\n",
              "      <td>1.337513</td>\n",
              "      <td>-1.061840</td>\n",
              "      <td>0.411851</td>\n",
              "      <td>0.246256</td>\n",
              "      <td>-2.264030</td>\n",
              "      <td>2.399420</td>\n",
              "      <td>2.024863</td>\n",
              "      <td>0.170483</td>\n",
              "      <td>-0.039203</td>\n",
              "      <td>-1.506677</td>\n",
              "      <td>-1.945932</td>\n",
              "      <td>-0.020228</td>\n",
              "      <td>-0.495499</td>\n",
              "      <td>-0.141013</td>\n",
              "      <td>-1.617521</td>\n",
              "      <td>2.624676</td>\n",
              "      <td>-2.581922</td>\n",
              "      <td>0.220891</td>\n",
              "      <td>0.328793</td>\n",
              "      <td>0.647758</td>\n",
              "      <td>0.231990</td>\n",
              "      <td>1.101486</td>\n",
              "      <td>1.079527</td>\n",
              "      <td>2.953102</td>\n",
              "      <td>-0.528682</td>\n",
              "      <td>-1.140600</td>\n",
              "      <td>-0.373299</td>\n",
              "      <td>0.109811</td>\n",
              "      <td>2.813541</td>\n",
              "      <td>0.596998</td>\n",
              "      <td>1.754836</td>\n",
              "      <td>-1.359771</td>\n",
              "      <td>0.466501</td>\n",
              "      <td>2.377417</td>\n",
              "      <td>-0.180653</td>\n",
              "      <td>-3.259304</td>\n",
              "      <td>0.120833</td>\n",
              "      <td>2.225643</td>\n",
              "      <td>2.220507</td>\n",
              "      <td>-1.178944</td>\n",
              "      <td>-0.821367</td>\n",
              "      <td>0.717239</td>\n",
              "      <td>-1.455829</td>\n",
              "      <td>-1.260584</td>\n",
              "      <td>2.623467</td>\n",
              "      <td>-0.538330</td>\n",
              "      <td>-2.620164</td>\n",
              "      <td>1.277195</td>\n",
              "      <td>0.601015</td>\n",
              "      <td>-0.345312</td>\n",
              "      <td>0.993457</td>\n",
              "      <td>1.351633</td>\n",
              "      <td>2.162675</td>\n",
              "      <td>2.768597</td>\n",
              "      <td>-0.937197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>66446</td>\n",
              "      <td>4.221673</td>\n",
              "      <td>-1.497139</td>\n",
              "      <td>1.133570</td>\n",
              "      <td>-2.745607</td>\n",
              "      <td>-4.197045</td>\n",
              "      <td>-0.542392</td>\n",
              "      <td>-1.396256</td>\n",
              "      <td>1.838419</td>\n",
              "      <td>-6.066454</td>\n",
              "      <td>-2.191799</td>\n",
              "      <td>0.752804</td>\n",
              "      <td>0.868623</td>\n",
              "      <td>6.187662</td>\n",
              "      <td>1.725745</td>\n",
              "      <td>2.887859</td>\n",
              "      <td>-1.486026</td>\n",
              "      <td>-0.182256</td>\n",
              "      <td>-3.710785</td>\n",
              "      <td>1.512866</td>\n",
              "      <td>-0.636434</td>\n",
              "      <td>0.288435</td>\n",
              "      <td>-3.369717</td>\n",
              "      <td>-0.265998</td>\n",
              "      <td>-3.549319</td>\n",
              "      <td>3.375338</td>\n",
              "      <td>-0.901461</td>\n",
              "      <td>-1.558371</td>\n",
              "      <td>1.695343</td>\n",
              "      <td>-4.450464</td>\n",
              "      <td>0.545495</td>\n",
              "      <td>1.000096</td>\n",
              "      <td>-3.468751</td>\n",
              "      <td>3.327641</td>\n",
              "      <td>1.556890</td>\n",
              "      <td>4.493203</td>\n",
              "      <td>0.369089</td>\n",
              "      <td>0.167196</td>\n",
              "      <td>-4.837062</td>\n",
              "      <td>1.216016</td>\n",
              "      <td>4.699153</td>\n",
              "      <td>-1.094529</td>\n",
              "      <td>3.015942</td>\n",
              "      <td>-1.322741</td>\n",
              "      <td>-0.829172</td>\n",
              "      <td>0.555047</td>\n",
              "      <td>-5.592765</td>\n",
              "      <td>1.254898</td>\n",
              "      <td>3.182450</td>\n",
              "      <td>3.053574</td>\n",
              "      <td>1.915569</td>\n",
              "      <td>-1.805712</td>\n",
              "      <td>1.476824</td>\n",
              "      <td>1.445677</td>\n",
              "      <td>-4.286592</td>\n",
              "      <td>3.866458</td>\n",
              "      <td>-4.053252</td>\n",
              "      <td>-0.571671</td>\n",
              "      <td>2.130672</td>\n",
              "      <td>1.053589</td>\n",
              "      <td>0.110064</td>\n",
              "      <td>2.893591</td>\n",
              "      <td>-4.358958</td>\n",
              "      <td>-1.019454</td>\n",
              "      <td>0.366879</td>\n",
              "      <td>1.841358</td>\n",
              "      <td>4.170247</td>\n",
              "      <td>4.174339</td>\n",
              "      <td>1.262570</td>\n",
              "      <td>-0.029079</td>\n",
              "      <td>0.391668</td>\n",
              "      <td>0.851025</td>\n",
              "      <td>2.030272</td>\n",
              "      <td>-0.523211</td>\n",
              "      <td>-2.988503</td>\n",
              "      <td>0.468366</td>\n",
              "      <td>2.163268</td>\n",
              "      <td>2.600257</td>\n",
              "      <td>3.421619</td>\n",
              "      <td>-3.726129</td>\n",
              "      <td>3.656601</td>\n",
              "      <td>1.318782</td>\n",
              "      <td>1.944976</td>\n",
              "      <td>-1.118911</td>\n",
              "      <td>2.633650</td>\n",
              "      <td>1.995067</td>\n",
              "      <td>-1.308313</td>\n",
              "      <td>-1.913673</td>\n",
              "      <td>1.838040</td>\n",
              "      <td>-4.906107</td>\n",
              "      <td>-3.075503</td>\n",
              "      <td>-0.685768</td>\n",
              "      <td>2.522384</td>\n",
              "      <td>0.549779</td>\n",
              "      <td>1.482735</td>\n",
              "      <td>0.817008</td>\n",
              "      <td>1.933099</td>\n",
              "      <td>-2.539294</td>\n",
              "      <td>-0.497640</td>\n",
              "      <td>-1.017591</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.523711</td>\n",
              "      <td>2.362369</td>\n",
              "      <td>-3.787951</td>\n",
              "      <td>4.148966</td>\n",
              "      <td>0.527358</td>\n",
              "      <td>-0.462329</td>\n",
              "      <td>1.958768</td>\n",
              "      <td>-0.515446</td>\n",
              "      <td>0.676892</td>\n",
              "      <td>-0.304709</td>\n",
              "      <td>0.129076</td>\n",
              "      <td>-1.632903</td>\n",
              "      <td>-0.416446</td>\n",
              "      <td>0.201256</td>\n",
              "      <td>1.504616</td>\n",
              "      <td>-1.840399</td>\n",
              "      <td>0.741553</td>\n",
              "      <td>1.197113</td>\n",
              "      <td>0.473898</td>\n",
              "      <td>-0.926339</td>\n",
              "      <td>0.725195</td>\n",
              "      <td>-2.460084</td>\n",
              "      <td>0.610268</td>\n",
              "      <td>2.418910</td>\n",
              "      <td>-0.807308</td>\n",
              "      <td>-2.471540</td>\n",
              "      <td>2.551485</td>\n",
              "      <td>-1.811828</td>\n",
              "      <td>0.100877</td>\n",
              "      <td>0.743698</td>\n",
              "      <td>-1.116395</td>\n",
              "      <td>-0.359674</td>\n",
              "      <td>3.028536</td>\n",
              "      <td>-2.432427</td>\n",
              "      <td>1.507481</td>\n",
              "      <td>1.783897</td>\n",
              "      <td>-0.217515</td>\n",
              "      <td>-2.684258</td>\n",
              "      <td>-2.669885</td>\n",
              "      <td>1.306354</td>\n",
              "      <td>2.197861</td>\n",
              "      <td>0.239669</td>\n",
              "      <td>0.674681</td>\n",
              "      <td>-0.192571</td>\n",
              "      <td>-0.162941</td>\n",
              "      <td>2.512084</td>\n",
              "      <td>-1.096083</td>\n",
              "      <td>3.525563</td>\n",
              "      <td>1.056434</td>\n",
              "      <td>-2.129516</td>\n",
              "      <td>-0.005492</td>\n",
              "      <td>3.827181</td>\n",
              "      <td>-0.358198</td>\n",
              "      <td>-2.009379</td>\n",
              "      <td>-0.224391</td>\n",
              "      <td>0.803851</td>\n",
              "      <td>-0.909498</td>\n",
              "      <td>0.962810</td>\n",
              "      <td>2.601583</td>\n",
              "      <td>0.056328</td>\n",
              "      <td>1.859474</td>\n",
              "      <td>-0.316134</td>\n",
              "      <td>-1.131286</td>\n",
              "      <td>1.701278</td>\n",
              "      <td>2.305405</td>\n",
              "      <td>-1.941271</td>\n",
              "      <td>1.248002</td>\n",
              "      <td>0.291000</td>\n",
              "      <td>0.792067</td>\n",
              "      <td>1.361166</td>\n",
              "      <td>1.129005</td>\n",
              "      <td>1.947404</td>\n",
              "      <td>-0.859423</td>\n",
              "      <td>2.023223</td>\n",
              "      <td>2.348651</td>\n",
              "      <td>4.506127</td>\n",
              "      <td>0.684437</td>\n",
              "      <td>2.064992</td>\n",
              "      <td>0.022901</td>\n",
              "      <td>3.464243</td>\n",
              "      <td>-2.325273</td>\n",
              "      <td>0.131324</td>\n",
              "      <td>-1.876178</td>\n",
              "      <td>1.770354</td>\n",
              "      <td>2.925176</td>\n",
              "      <td>-1.851054</td>\n",
              "      <td>-0.092587</td>\n",
              "      <td>-0.580742</td>\n",
              "      <td>-0.422019</td>\n",
              "      <td>0.923714</td>\n",
              "      <td>-4.582711</td>\n",
              "      <td>-1.056910</td>\n",
              "      <td>-2.568084</td>\n",
              "      <td>-2.038061</td>\n",
              "      <td>2.508719</td>\n",
              "      <td>-0.764789</td>\n",
              "      <td>-0.657116</td>\n",
              "      <td>3.252782</td>\n",
              "      <td>2.687366</td>\n",
              "      <td>0.844332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>63651</td>\n",
              "      <td>2.657970</td>\n",
              "      <td>-0.941863</td>\n",
              "      <td>1.121529</td>\n",
              "      <td>-5.109496</td>\n",
              "      <td>-0.279041</td>\n",
              "      <td>-0.351968</td>\n",
              "      <td>-1.086983</td>\n",
              "      <td>2.703607</td>\n",
              "      <td>-6.494977</td>\n",
              "      <td>-0.746769</td>\n",
              "      <td>-0.068571</td>\n",
              "      <td>-3.894670</td>\n",
              "      <td>4.937046</td>\n",
              "      <td>-1.863204</td>\n",
              "      <td>-1.955068</td>\n",
              "      <td>1.900193</td>\n",
              "      <td>1.743841</td>\n",
              "      <td>-6.024790</td>\n",
              "      <td>1.460414</td>\n",
              "      <td>-2.206104</td>\n",
              "      <td>-1.997572</td>\n",
              "      <td>-3.414536</td>\n",
              "      <td>-0.178739</td>\n",
              "      <td>0.987313</td>\n",
              "      <td>1.255347</td>\n",
              "      <td>-1.187136</td>\n",
              "      <td>2.070518</td>\n",
              "      <td>2.191021</td>\n",
              "      <td>-2.936702</td>\n",
              "      <td>2.617733</td>\n",
              "      <td>0.919181</td>\n",
              "      <td>-3.087907</td>\n",
              "      <td>-0.358938</td>\n",
              "      <td>-0.428679</td>\n",
              "      <td>3.815598</td>\n",
              "      <td>2.440558</td>\n",
              "      <td>1.281061</td>\n",
              "      <td>-0.732530</td>\n",
              "      <td>1.517067</td>\n",
              "      <td>2.790302</td>\n",
              "      <td>-2.019122</td>\n",
              "      <td>2.419042</td>\n",
              "      <td>-2.044806</td>\n",
              "      <td>0.649187</td>\n",
              "      <td>1.940526</td>\n",
              "      <td>-4.965359</td>\n",
              "      <td>0.930460</td>\n",
              "      <td>-1.152011</td>\n",
              "      <td>0.167594</td>\n",
              "      <td>1.351333</td>\n",
              "      <td>1.412025</td>\n",
              "      <td>5.857270</td>\n",
              "      <td>2.955183</td>\n",
              "      <td>-5.290540</td>\n",
              "      <td>3.950262</td>\n",
              "      <td>-1.003028</td>\n",
              "      <td>-0.642327</td>\n",
              "      <td>-0.742141</td>\n",
              "      <td>1.829504</td>\n",
              "      <td>-0.369918</td>\n",
              "      <td>0.551058</td>\n",
              "      <td>-4.042940</td>\n",
              "      <td>-1.858755</td>\n",
              "      <td>1.193245</td>\n",
              "      <td>0.552379</td>\n",
              "      <td>0.840628</td>\n",
              "      <td>-0.199812</td>\n",
              "      <td>-0.531846</td>\n",
              "      <td>0.584006</td>\n",
              "      <td>0.238442</td>\n",
              "      <td>-0.183195</td>\n",
              "      <td>-0.964737</td>\n",
              "      <td>0.003038</td>\n",
              "      <td>-3.869885</td>\n",
              "      <td>0.137756</td>\n",
              "      <td>2.962643</td>\n",
              "      <td>0.865882</td>\n",
              "      <td>4.065734</td>\n",
              "      <td>-2.126682</td>\n",
              "      <td>-0.139429</td>\n",
              "      <td>-0.065178</td>\n",
              "      <td>0.067101</td>\n",
              "      <td>-1.729568</td>\n",
              "      <td>3.514949</td>\n",
              "      <td>1.605098</td>\n",
              "      <td>0.651753</td>\n",
              "      <td>-1.316432</td>\n",
              "      <td>0.430641</td>\n",
              "      <td>-0.993690</td>\n",
              "      <td>-4.693871</td>\n",
              "      <td>-1.967689</td>\n",
              "      <td>3.228312</td>\n",
              "      <td>1.369545</td>\n",
              "      <td>-0.133246</td>\n",
              "      <td>0.455909</td>\n",
              "      <td>-0.918356</td>\n",
              "      <td>-1.434751</td>\n",
              "      <td>0.915808</td>\n",
              "      <td>0.487750</td>\n",
              "      <td>...</td>\n",
              "      <td>-4.442958</td>\n",
              "      <td>1.778195</td>\n",
              "      <td>-4.168824</td>\n",
              "      <td>2.106603</td>\n",
              "      <td>-2.610766</td>\n",
              "      <td>-4.665283</td>\n",
              "      <td>4.229245</td>\n",
              "      <td>1.160626</td>\n",
              "      <td>1.137728</td>\n",
              "      <td>0.350339</td>\n",
              "      <td>3.762218</td>\n",
              "      <td>-1.562948</td>\n",
              "      <td>3.289258</td>\n",
              "      <td>0.676585</td>\n",
              "      <td>-1.116040</td>\n",
              "      <td>-2.379200</td>\n",
              "      <td>0.378596</td>\n",
              "      <td>0.514341</td>\n",
              "      <td>3.422350</td>\n",
              "      <td>1.500889</td>\n",
              "      <td>-2.373203</td>\n",
              "      <td>1.373048</td>\n",
              "      <td>-1.818372</td>\n",
              "      <td>0.209331</td>\n",
              "      <td>-4.099599</td>\n",
              "      <td>-2.291751</td>\n",
              "      <td>1.703648</td>\n",
              "      <td>-1.778213</td>\n",
              "      <td>0.245399</td>\n",
              "      <td>-3.703303</td>\n",
              "      <td>1.452214</td>\n",
              "      <td>2.170496</td>\n",
              "      <td>1.190285</td>\n",
              "      <td>-2.395464</td>\n",
              "      <td>-0.117074</td>\n",
              "      <td>0.612694</td>\n",
              "      <td>-4.343407</td>\n",
              "      <td>-3.707790</td>\n",
              "      <td>-1.968170</td>\n",
              "      <td>1.676934</td>\n",
              "      <td>-1.696593</td>\n",
              "      <td>0.884128</td>\n",
              "      <td>1.813142</td>\n",
              "      <td>1.855076</td>\n",
              "      <td>1.303212</td>\n",
              "      <td>2.047489</td>\n",
              "      <td>0.603224</td>\n",
              "      <td>3.958775</td>\n",
              "      <td>3.746269</td>\n",
              "      <td>-3.498088</td>\n",
              "      <td>-0.733038</td>\n",
              "      <td>-0.913736</td>\n",
              "      <td>-1.296190</td>\n",
              "      <td>4.821739</td>\n",
              "      <td>0.687235</td>\n",
              "      <td>-1.406431</td>\n",
              "      <td>0.669184</td>\n",
              "      <td>-1.847598</td>\n",
              "      <td>-0.817075</td>\n",
              "      <td>-1.181172</td>\n",
              "      <td>2.588552</td>\n",
              "      <td>-1.123118</td>\n",
              "      <td>0.232427</td>\n",
              "      <td>2.170325</td>\n",
              "      <td>0.579414</td>\n",
              "      <td>2.601421</td>\n",
              "      <td>-0.596196</td>\n",
              "      <td>-1.798693</td>\n",
              "      <td>0.312326</td>\n",
              "      <td>0.387486</td>\n",
              "      <td>-2.207365</td>\n",
              "      <td>-1.029329</td>\n",
              "      <td>-1.274233</td>\n",
              "      <td>2.047230</td>\n",
              "      <td>1.928517</td>\n",
              "      <td>2.102633</td>\n",
              "      <td>-0.559383</td>\n",
              "      <td>-0.951418</td>\n",
              "      <td>-2.021749</td>\n",
              "      <td>1.366272</td>\n",
              "      <td>-1.947211</td>\n",
              "      <td>-2.114419</td>\n",
              "      <td>1.140394</td>\n",
              "      <td>-0.796024</td>\n",
              "      <td>1.906361</td>\n",
              "      <td>-0.357520</td>\n",
              "      <td>3.352968</td>\n",
              "      <td>-3.996377</td>\n",
              "      <td>1.520331</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.487683</td>\n",
              "      <td>-1.889119</td>\n",
              "      <td>0.943015</td>\n",
              "      <td>-2.834418</td>\n",
              "      <td>1.633184</td>\n",
              "      <td>2.001801</td>\n",
              "      <td>-2.333152</td>\n",
              "      <td>2.645595</td>\n",
              "      <td>2.280233</td>\n",
              "      <td>-0.694448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>46824</td>\n",
              "      <td>3.192195</td>\n",
              "      <td>-1.936676</td>\n",
              "      <td>1.199909</td>\n",
              "      <td>-2.562152</td>\n",
              "      <td>-2.573456</td>\n",
              "      <td>0.575841</td>\n",
              "      <td>-2.358653</td>\n",
              "      <td>1.620844</td>\n",
              "      <td>-4.302936</td>\n",
              "      <td>-0.487575</td>\n",
              "      <td>0.020896</td>\n",
              "      <td>-0.763327</td>\n",
              "      <td>4.341694</td>\n",
              "      <td>0.698798</td>\n",
              "      <td>3.334580</td>\n",
              "      <td>0.607683</td>\n",
              "      <td>-0.718644</td>\n",
              "      <td>-2.730188</td>\n",
              "      <td>0.193828</td>\n",
              "      <td>-1.706196</td>\n",
              "      <td>-0.468727</td>\n",
              "      <td>-2.281904</td>\n",
              "      <td>-1.837274</td>\n",
              "      <td>-2.849140</td>\n",
              "      <td>0.195873</td>\n",
              "      <td>-0.459765</td>\n",
              "      <td>-0.768752</td>\n",
              "      <td>1.033489</td>\n",
              "      <td>-2.490896</td>\n",
              "      <td>2.077521</td>\n",
              "      <td>-0.171984</td>\n",
              "      <td>-3.406347</td>\n",
              "      <td>2.616670</td>\n",
              "      <td>0.713099</td>\n",
              "      <td>4.450222</td>\n",
              "      <td>0.606497</td>\n",
              "      <td>0.160672</td>\n",
              "      <td>-2.604218</td>\n",
              "      <td>2.110272</td>\n",
              "      <td>4.714019</td>\n",
              "      <td>-2.297905</td>\n",
              "      <td>1.700881</td>\n",
              "      <td>-0.195633</td>\n",
              "      <td>-0.404006</td>\n",
              "      <td>2.140779</td>\n",
              "      <td>-5.351576</td>\n",
              "      <td>1.592488</td>\n",
              "      <td>1.312723</td>\n",
              "      <td>1.610867</td>\n",
              "      <td>0.994072</td>\n",
              "      <td>-1.195971</td>\n",
              "      <td>1.781498</td>\n",
              "      <td>1.785496</td>\n",
              "      <td>-4.071553</td>\n",
              "      <td>2.654091</td>\n",
              "      <td>-5.932536</td>\n",
              "      <td>-0.418919</td>\n",
              "      <td>-0.926006</td>\n",
              "      <td>-0.542602</td>\n",
              "      <td>0.462660</td>\n",
              "      <td>1.463190</td>\n",
              "      <td>-4.160649</td>\n",
              "      <td>0.174760</td>\n",
              "      <td>0.066889</td>\n",
              "      <td>1.971360</td>\n",
              "      <td>1.982323</td>\n",
              "      <td>2.501089</td>\n",
              "      <td>0.240786</td>\n",
              "      <td>-0.528081</td>\n",
              "      <td>0.936410</td>\n",
              "      <td>-0.267544</td>\n",
              "      <td>1.147592</td>\n",
              "      <td>0.277720</td>\n",
              "      <td>-1.576371</td>\n",
              "      <td>-1.375015</td>\n",
              "      <td>2.255514</td>\n",
              "      <td>2.038633</td>\n",
              "      <td>3.813080</td>\n",
              "      <td>-2.544447</td>\n",
              "      <td>2.709035</td>\n",
              "      <td>-1.257679</td>\n",
              "      <td>1.281865</td>\n",
              "      <td>-0.375471</td>\n",
              "      <td>1.086395</td>\n",
              "      <td>3.939014</td>\n",
              "      <td>-0.752492</td>\n",
              "      <td>-0.473545</td>\n",
              "      <td>0.215483</td>\n",
              "      <td>-3.946254</td>\n",
              "      <td>-1.339041</td>\n",
              "      <td>-0.557139</td>\n",
              "      <td>1.841604</td>\n",
              "      <td>-0.263560</td>\n",
              "      <td>-0.572500</td>\n",
              "      <td>1.669172</td>\n",
              "      <td>-0.041288</td>\n",
              "      <td>-1.751370</td>\n",
              "      <td>-0.922569</td>\n",
              "      <td>-0.890117</td>\n",
              "      <td>...</td>\n",
              "      <td>-3.002218</td>\n",
              "      <td>1.309209</td>\n",
              "      <td>0.779997</td>\n",
              "      <td>1.584465</td>\n",
              "      <td>-0.254501</td>\n",
              "      <td>-1.970212</td>\n",
              "      <td>2.601439</td>\n",
              "      <td>0.765639</td>\n",
              "      <td>-0.306522</td>\n",
              "      <td>1.411740</td>\n",
              "      <td>2.045010</td>\n",
              "      <td>-1.435165</td>\n",
              "      <td>0.607862</td>\n",
              "      <td>1.814897</td>\n",
              "      <td>1.915056</td>\n",
              "      <td>1.355841</td>\n",
              "      <td>0.371016</td>\n",
              "      <td>1.591542</td>\n",
              "      <td>-1.356246</td>\n",
              "      <td>-2.078668</td>\n",
              "      <td>-1.496517</td>\n",
              "      <td>-1.535709</td>\n",
              "      <td>0.522328</td>\n",
              "      <td>1.336467</td>\n",
              "      <td>-2.084815</td>\n",
              "      <td>-2.391989</td>\n",
              "      <td>1.279834</td>\n",
              "      <td>-0.479692</td>\n",
              "      <td>0.806861</td>\n",
              "      <td>0.003365</td>\n",
              "      <td>0.133480</td>\n",
              "      <td>1.940574</td>\n",
              "      <td>0.347273</td>\n",
              "      <td>-3.216053</td>\n",
              "      <td>-1.125144</td>\n",
              "      <td>-0.412974</td>\n",
              "      <td>-0.454987</td>\n",
              "      <td>-1.507496</td>\n",
              "      <td>-1.003127</td>\n",
              "      <td>1.459658</td>\n",
              "      <td>0.357251</td>\n",
              "      <td>-1.254804</td>\n",
              "      <td>-0.310848</td>\n",
              "      <td>-1.874668</td>\n",
              "      <td>-1.060506</td>\n",
              "      <td>0.087846</td>\n",
              "      <td>-1.922506</td>\n",
              "      <td>1.139462</td>\n",
              "      <td>0.232495</td>\n",
              "      <td>-1.667729</td>\n",
              "      <td>1.086525</td>\n",
              "      <td>3.235504</td>\n",
              "      <td>-1.360041</td>\n",
              "      <td>-0.573626</td>\n",
              "      <td>-0.343873</td>\n",
              "      <td>-0.862111</td>\n",
              "      <td>-3.036260</td>\n",
              "      <td>-1.016610</td>\n",
              "      <td>-1.149770</td>\n",
              "      <td>0.464140</td>\n",
              "      <td>2.412406</td>\n",
              "      <td>-0.654135</td>\n",
              "      <td>0.486894</td>\n",
              "      <td>1.168054</td>\n",
              "      <td>-0.271420</td>\n",
              "      <td>0.667091</td>\n",
              "      <td>1.163557</td>\n",
              "      <td>-0.132236</td>\n",
              "      <td>0.668463</td>\n",
              "      <td>-0.228185</td>\n",
              "      <td>0.155768</td>\n",
              "      <td>1.546821</td>\n",
              "      <td>0.307640</td>\n",
              "      <td>2.542941</td>\n",
              "      <td>1.240985</td>\n",
              "      <td>2.144569</td>\n",
              "      <td>-1.079753</td>\n",
              "      <td>0.335191</td>\n",
              "      <td>0.245159</td>\n",
              "      <td>2.150169</td>\n",
              "      <td>-1.991440</td>\n",
              "      <td>-2.330727</td>\n",
              "      <td>0.736855</td>\n",
              "      <td>2.126931</td>\n",
              "      <td>0.556061</td>\n",
              "      <td>-1.611493</td>\n",
              "      <td>2.722133</td>\n",
              "      <td>-1.185940</td>\n",
              "      <td>0.399201</td>\n",
              "      <td>1.598617</td>\n",
              "      <td>-0.621475</td>\n",
              "      <td>-2.091410</td>\n",
              "      <td>0.501600</td>\n",
              "      <td>-3.083864</td>\n",
              "      <td>-1.060091</td>\n",
              "      <td>2.053600</td>\n",
              "      <td>-2.025008</td>\n",
              "      <td>2.399251</td>\n",
              "      <td>2.562317</td>\n",
              "      <td>0.694134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108911</th>\n",
              "      <td>79253</td>\n",
              "      <td>2.143652</td>\n",
              "      <td>-1.591184</td>\n",
              "      <td>-0.283598</td>\n",
              "      <td>-2.186552</td>\n",
              "      <td>-1.505779</td>\n",
              "      <td>0.876601</td>\n",
              "      <td>1.302617</td>\n",
              "      <td>-1.762244</td>\n",
              "      <td>-2.847601</td>\n",
              "      <td>0.108608</td>\n",
              "      <td>-1.466877</td>\n",
              "      <td>-2.967015</td>\n",
              "      <td>0.913299</td>\n",
              "      <td>-1.161778</td>\n",
              "      <td>2.752231</td>\n",
              "      <td>-5.542719</td>\n",
              "      <td>-0.901889</td>\n",
              "      <td>-2.699810</td>\n",
              "      <td>-2.309839</td>\n",
              "      <td>-1.778445</td>\n",
              "      <td>-1.089302</td>\n",
              "      <td>-0.462305</td>\n",
              "      <td>0.550925</td>\n",
              "      <td>-1.022714</td>\n",
              "      <td>-2.445610</td>\n",
              "      <td>-2.240845</td>\n",
              "      <td>-3.921844</td>\n",
              "      <td>-1.672699</td>\n",
              "      <td>-1.688246</td>\n",
              "      <td>1.376479</td>\n",
              "      <td>-0.749645</td>\n",
              "      <td>-2.281994</td>\n",
              "      <td>1.904197</td>\n",
              "      <td>-2.702273</td>\n",
              "      <td>-1.578054</td>\n",
              "      <td>-2.232083</td>\n",
              "      <td>-0.220451</td>\n",
              "      <td>-1.909157</td>\n",
              "      <td>-0.809935</td>\n",
              "      <td>-0.584604</td>\n",
              "      <td>-1.899768</td>\n",
              "      <td>-0.358462</td>\n",
              "      <td>-0.916753</td>\n",
              "      <td>4.082227</td>\n",
              "      <td>-1.557145</td>\n",
              "      <td>-2.668177</td>\n",
              "      <td>3.038557</td>\n",
              "      <td>0.201199</td>\n",
              "      <td>1.502191</td>\n",
              "      <td>0.758015</td>\n",
              "      <td>-2.545711</td>\n",
              "      <td>2.391682</td>\n",
              "      <td>-1.727723</td>\n",
              "      <td>-1.179197</td>\n",
              "      <td>0.812665</td>\n",
              "      <td>-2.840585</td>\n",
              "      <td>3.628976</td>\n",
              "      <td>1.470329</td>\n",
              "      <td>0.076995</td>\n",
              "      <td>0.981997</td>\n",
              "      <td>1.813580</td>\n",
              "      <td>-2.348472</td>\n",
              "      <td>0.866408</td>\n",
              "      <td>0.028376</td>\n",
              "      <td>-1.509214</td>\n",
              "      <td>-2.582299</td>\n",
              "      <td>-3.006606</td>\n",
              "      <td>-0.073780</td>\n",
              "      <td>-2.068264</td>\n",
              "      <td>1.675347</td>\n",
              "      <td>3.152147</td>\n",
              "      <td>0.895262</td>\n",
              "      <td>-1.856492</td>\n",
              "      <td>0.034511</td>\n",
              "      <td>-1.582400</td>\n",
              "      <td>-0.485126</td>\n",
              "      <td>-3.780087</td>\n",
              "      <td>-1.715265</td>\n",
              "      <td>-1.510518</td>\n",
              "      <td>1.879917</td>\n",
              "      <td>-2.084981</td>\n",
              "      <td>2.657861</td>\n",
              "      <td>-0.150674</td>\n",
              "      <td>-2.561351</td>\n",
              "      <td>-0.698951</td>\n",
              "      <td>-3.995625</td>\n",
              "      <td>-2.722597</td>\n",
              "      <td>-1.367890</td>\n",
              "      <td>-0.967366</td>\n",
              "      <td>0.293119</td>\n",
              "      <td>2.508693</td>\n",
              "      <td>2.485103</td>\n",
              "      <td>-3.782464</td>\n",
              "      <td>0.356524</td>\n",
              "      <td>0.936141</td>\n",
              "      <td>1.286547</td>\n",
              "      <td>-1.756850</td>\n",
              "      <td>0.721728</td>\n",
              "      <td>2.648691</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.812932</td>\n",
              "      <td>1.195455</td>\n",
              "      <td>1.647590</td>\n",
              "      <td>3.672622</td>\n",
              "      <td>-0.958210</td>\n",
              "      <td>0.426038</td>\n",
              "      <td>0.050856</td>\n",
              "      <td>0.294075</td>\n",
              "      <td>-1.827960</td>\n",
              "      <td>2.254042</td>\n",
              "      <td>0.032561</td>\n",
              "      <td>-1.122103</td>\n",
              "      <td>1.873654</td>\n",
              "      <td>0.354787</td>\n",
              "      <td>-0.085081</td>\n",
              "      <td>2.839442</td>\n",
              "      <td>-0.921125</td>\n",
              "      <td>3.449929</td>\n",
              "      <td>-1.993664</td>\n",
              "      <td>2.745172</td>\n",
              "      <td>0.927272</td>\n",
              "      <td>1.592893</td>\n",
              "      <td>3.730085</td>\n",
              "      <td>1.930457</td>\n",
              "      <td>0.233894</td>\n",
              "      <td>-1.841480</td>\n",
              "      <td>2.312968</td>\n",
              "      <td>-1.052112</td>\n",
              "      <td>-0.093647</td>\n",
              "      <td>-1.134430</td>\n",
              "      <td>0.012588</td>\n",
              "      <td>2.437869</td>\n",
              "      <td>0.776525</td>\n",
              "      <td>-1.485173</td>\n",
              "      <td>-0.380993</td>\n",
              "      <td>-0.018833</td>\n",
              "      <td>-0.966918</td>\n",
              "      <td>2.069371</td>\n",
              "      <td>3.280475</td>\n",
              "      <td>0.936332</td>\n",
              "      <td>1.224270</td>\n",
              "      <td>0.320835</td>\n",
              "      <td>-4.495546</td>\n",
              "      <td>-3.091730</td>\n",
              "      <td>-1.057453</td>\n",
              "      <td>-0.370681</td>\n",
              "      <td>-2.902287</td>\n",
              "      <td>0.605567</td>\n",
              "      <td>-2.249251</td>\n",
              "      <td>-0.685881</td>\n",
              "      <td>3.344256</td>\n",
              "      <td>1.003920</td>\n",
              "      <td>-3.433650</td>\n",
              "      <td>-2.621783</td>\n",
              "      <td>-0.372633</td>\n",
              "      <td>1.700348</td>\n",
              "      <td>-1.022541</td>\n",
              "      <td>1.666146</td>\n",
              "      <td>3.926513</td>\n",
              "      <td>1.593440</td>\n",
              "      <td>3.846366</td>\n",
              "      <td>-3.724903</td>\n",
              "      <td>0.214898</td>\n",
              "      <td>1.602764</td>\n",
              "      <td>3.950767</td>\n",
              "      <td>0.322759</td>\n",
              "      <td>1.632436</td>\n",
              "      <td>2.913508</td>\n",
              "      <td>3.255090</td>\n",
              "      <td>0.124804</td>\n",
              "      <td>-3.038602</td>\n",
              "      <td>1.028680</td>\n",
              "      <td>-0.372231</td>\n",
              "      <td>1.747909</td>\n",
              "      <td>2.259741</td>\n",
              "      <td>1.149775</td>\n",
              "      <td>-1.978496</td>\n",
              "      <td>1.221311</td>\n",
              "      <td>0.619848</td>\n",
              "      <td>-0.702118</td>\n",
              "      <td>-3.045399</td>\n",
              "      <td>-1.687716</td>\n",
              "      <td>-2.313181</td>\n",
              "      <td>3.121440</td>\n",
              "      <td>-0.982756</td>\n",
              "      <td>0.450534</td>\n",
              "      <td>0.706889</td>\n",
              "      <td>-2.271411</td>\n",
              "      <td>-1.142208</td>\n",
              "      <td>2.323842</td>\n",
              "      <td>-1.352005</td>\n",
              "      <td>-3.588055</td>\n",
              "      <td>2.803221</td>\n",
              "      <td>-2.160821</td>\n",
              "      <td>-1.153775</td>\n",
              "      <td>0.290783</td>\n",
              "      <td>1.518086</td>\n",
              "      <td>3.690181</td>\n",
              "      <td>5.391709</td>\n",
              "      <td>0.328971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108912</th>\n",
              "      <td>109138</td>\n",
              "      <td>0.890185</td>\n",
              "      <td>0.042669</td>\n",
              "      <td>2.842594</td>\n",
              "      <td>-4.322702</td>\n",
              "      <td>-1.107593</td>\n",
              "      <td>-0.033230</td>\n",
              "      <td>2.835225</td>\n",
              "      <td>-1.383299</td>\n",
              "      <td>-4.998042</td>\n",
              "      <td>-4.018473</td>\n",
              "      <td>-2.133858</td>\n",
              "      <td>-2.112752</td>\n",
              "      <td>5.674667</td>\n",
              "      <td>-1.652996</td>\n",
              "      <td>-1.637974</td>\n",
              "      <td>-0.246467</td>\n",
              "      <td>0.030858</td>\n",
              "      <td>-0.132066</td>\n",
              "      <td>1.642372</td>\n",
              "      <td>-2.437756</td>\n",
              "      <td>1.211184</td>\n",
              "      <td>-3.797614</td>\n",
              "      <td>2.716340</td>\n",
              "      <td>-1.846051</td>\n",
              "      <td>1.698319</td>\n",
              "      <td>0.771190</td>\n",
              "      <td>4.764339</td>\n",
              "      <td>2.598170</td>\n",
              "      <td>-1.430937</td>\n",
              "      <td>0.347440</td>\n",
              "      <td>0.907071</td>\n",
              "      <td>0.032756</td>\n",
              "      <td>-2.463522</td>\n",
              "      <td>-3.297136</td>\n",
              "      <td>2.716323</td>\n",
              "      <td>1.846584</td>\n",
              "      <td>-1.269165</td>\n",
              "      <td>-1.020392</td>\n",
              "      <td>2.497579</td>\n",
              "      <td>3.490116</td>\n",
              "      <td>-2.338284</td>\n",
              "      <td>3.174366</td>\n",
              "      <td>0.630770</td>\n",
              "      <td>2.929436</td>\n",
              "      <td>1.533297</td>\n",
              "      <td>-3.739271</td>\n",
              "      <td>2.125049</td>\n",
              "      <td>1.888600</td>\n",
              "      <td>1.267531</td>\n",
              "      <td>1.988833</td>\n",
              "      <td>-0.566414</td>\n",
              "      <td>-2.023407</td>\n",
              "      <td>-1.848678</td>\n",
              "      <td>-4.852431</td>\n",
              "      <td>2.402841</td>\n",
              "      <td>1.771225</td>\n",
              "      <td>-1.518038</td>\n",
              "      <td>-3.683095</td>\n",
              "      <td>1.860160</td>\n",
              "      <td>1.633143</td>\n",
              "      <td>0.195921</td>\n",
              "      <td>0.769962</td>\n",
              "      <td>-4.282871</td>\n",
              "      <td>-0.265067</td>\n",
              "      <td>1.666347</td>\n",
              "      <td>1.591646</td>\n",
              "      <td>1.230523</td>\n",
              "      <td>-0.527127</td>\n",
              "      <td>4.065799</td>\n",
              "      <td>3.390041</td>\n",
              "      <td>1.382567</td>\n",
              "      <td>0.413271</td>\n",
              "      <td>-1.279550</td>\n",
              "      <td>-2.449182</td>\n",
              "      <td>-1.438711</td>\n",
              "      <td>2.208716</td>\n",
              "      <td>2.639466</td>\n",
              "      <td>2.007577</td>\n",
              "      <td>-4.979889</td>\n",
              "      <td>-0.850287</td>\n",
              "      <td>-0.397183</td>\n",
              "      <td>-2.782560</td>\n",
              "      <td>-0.545637</td>\n",
              "      <td>3.159307</td>\n",
              "      <td>-0.078705</td>\n",
              "      <td>2.974325</td>\n",
              "      <td>1.127572</td>\n",
              "      <td>-0.806367</td>\n",
              "      <td>-1.360380</td>\n",
              "      <td>-5.414014</td>\n",
              "      <td>-0.427686</td>\n",
              "      <td>-1.091666</td>\n",
              "      <td>4.165022</td>\n",
              "      <td>3.997271</td>\n",
              "      <td>3.885442</td>\n",
              "      <td>1.963333</td>\n",
              "      <td>-3.179239</td>\n",
              "      <td>1.035787</td>\n",
              "      <td>-2.396387</td>\n",
              "      <td>...</td>\n",
              "      <td>0.789993</td>\n",
              "      <td>-0.356636</td>\n",
              "      <td>-1.215572</td>\n",
              "      <td>1.115422</td>\n",
              "      <td>-1.715971</td>\n",
              "      <td>2.240216</td>\n",
              "      <td>-1.055415</td>\n",
              "      <td>0.029975</td>\n",
              "      <td>-2.228453</td>\n",
              "      <td>-1.050905</td>\n",
              "      <td>1.246343</td>\n",
              "      <td>-2.759985</td>\n",
              "      <td>3.012103</td>\n",
              "      <td>2.739157</td>\n",
              "      <td>-2.998512</td>\n",
              "      <td>0.469200</td>\n",
              "      <td>4.019664</td>\n",
              "      <td>-0.022314</td>\n",
              "      <td>-1.993336</td>\n",
              "      <td>-0.990848</td>\n",
              "      <td>1.582859</td>\n",
              "      <td>-3.978954</td>\n",
              "      <td>1.577788</td>\n",
              "      <td>-3.159555</td>\n",
              "      <td>1.886579</td>\n",
              "      <td>-2.230175</td>\n",
              "      <td>2.505482</td>\n",
              "      <td>1.897286</td>\n",
              "      <td>-2.838402</td>\n",
              "      <td>-2.721122</td>\n",
              "      <td>0.833790</td>\n",
              "      <td>2.155062</td>\n",
              "      <td>0.098216</td>\n",
              "      <td>0.083581</td>\n",
              "      <td>0.543047</td>\n",
              "      <td>1.406939</td>\n",
              "      <td>-0.366133</td>\n",
              "      <td>1.074942</td>\n",
              "      <td>-3.693939</td>\n",
              "      <td>-0.185423</td>\n",
              "      <td>0.528465</td>\n",
              "      <td>0.953396</td>\n",
              "      <td>0.305434</td>\n",
              "      <td>-1.719791</td>\n",
              "      <td>-2.661647</td>\n",
              "      <td>-0.332588</td>\n",
              "      <td>0.278220</td>\n",
              "      <td>1.315297</td>\n",
              "      <td>3.398311</td>\n",
              "      <td>-3.397320</td>\n",
              "      <td>0.798742</td>\n",
              "      <td>-2.811525</td>\n",
              "      <td>-1.227957</td>\n",
              "      <td>1.855185</td>\n",
              "      <td>1.397263</td>\n",
              "      <td>-1.272777</td>\n",
              "      <td>-0.695033</td>\n",
              "      <td>-2.074005</td>\n",
              "      <td>-2.157744</td>\n",
              "      <td>-0.613893</td>\n",
              "      <td>3.044159</td>\n",
              "      <td>-1.802477</td>\n",
              "      <td>0.890905</td>\n",
              "      <td>1.535566</td>\n",
              "      <td>1.058227</td>\n",
              "      <td>0.463234</td>\n",
              "      <td>0.884959</td>\n",
              "      <td>0.518636</td>\n",
              "      <td>1.126252</td>\n",
              "      <td>-0.570538</td>\n",
              "      <td>1.777023</td>\n",
              "      <td>0.157465</td>\n",
              "      <td>-2.856526</td>\n",
              "      <td>3.190122</td>\n",
              "      <td>-0.744726</td>\n",
              "      <td>2.207457</td>\n",
              "      <td>1.761704</td>\n",
              "      <td>2.780637</td>\n",
              "      <td>2.130281</td>\n",
              "      <td>-1.689670</td>\n",
              "      <td>-1.385311</td>\n",
              "      <td>-1.727320</td>\n",
              "      <td>3.064378</td>\n",
              "      <td>-0.886842</td>\n",
              "      <td>5.473865</td>\n",
              "      <td>-0.998189</td>\n",
              "      <td>0.228917</td>\n",
              "      <td>-1.734863</td>\n",
              "      <td>-2.065603</td>\n",
              "      <td>0.206962</td>\n",
              "      <td>0.416093</td>\n",
              "      <td>-0.917160</td>\n",
              "      <td>-0.028134</td>\n",
              "      <td>2.624365</td>\n",
              "      <td>1.574156</td>\n",
              "      <td>-0.014772</td>\n",
              "      <td>2.250575</td>\n",
              "      <td>2.005705</td>\n",
              "      <td>0.309760</td>\n",
              "      <td>0.913974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108913</th>\n",
              "      <td>62184</td>\n",
              "      <td>1.458928</td>\n",
              "      <td>-0.638677</td>\n",
              "      <td>-0.957509</td>\n",
              "      <td>-2.936515</td>\n",
              "      <td>-0.897658</td>\n",
              "      <td>-0.992379</td>\n",
              "      <td>0.574731</td>\n",
              "      <td>0.027216</td>\n",
              "      <td>-3.514133</td>\n",
              "      <td>-1.925192</td>\n",
              "      <td>1.451574</td>\n",
              "      <td>0.428331</td>\n",
              "      <td>2.025814</td>\n",
              "      <td>0.447675</td>\n",
              "      <td>-0.660619</td>\n",
              "      <td>-0.872637</td>\n",
              "      <td>-2.048203</td>\n",
              "      <td>0.468547</td>\n",
              "      <td>-2.090118</td>\n",
              "      <td>-2.782267</td>\n",
              "      <td>-4.756662</td>\n",
              "      <td>-0.434126</td>\n",
              "      <td>-2.144065</td>\n",
              "      <td>0.290367</td>\n",
              "      <td>-2.406909</td>\n",
              "      <td>2.708581</td>\n",
              "      <td>2.706972</td>\n",
              "      <td>-0.381109</td>\n",
              "      <td>2.382838</td>\n",
              "      <td>0.911503</td>\n",
              "      <td>0.569131</td>\n",
              "      <td>-2.612042</td>\n",
              "      <td>-1.612692</td>\n",
              "      <td>-2.111382</td>\n",
              "      <td>2.068428</td>\n",
              "      <td>-1.662065</td>\n",
              "      <td>1.491509</td>\n",
              "      <td>-2.189797</td>\n",
              "      <td>-1.101642</td>\n",
              "      <td>0.646667</td>\n",
              "      <td>-1.743810</td>\n",
              "      <td>0.249561</td>\n",
              "      <td>2.283173</td>\n",
              "      <td>-0.826433</td>\n",
              "      <td>1.260813</td>\n",
              "      <td>-4.058594</td>\n",
              "      <td>-0.620825</td>\n",
              "      <td>-0.670673</td>\n",
              "      <td>-1.037455</td>\n",
              "      <td>0.539870</td>\n",
              "      <td>-1.764350</td>\n",
              "      <td>2.234930</td>\n",
              "      <td>0.302537</td>\n",
              "      <td>-2.878370</td>\n",
              "      <td>4.449934</td>\n",
              "      <td>-2.123760</td>\n",
              "      <td>-1.768058</td>\n",
              "      <td>-0.519971</td>\n",
              "      <td>1.830129</td>\n",
              "      <td>1.443018</td>\n",
              "      <td>1.933492</td>\n",
              "      <td>-2.212900</td>\n",
              "      <td>-0.785136</td>\n",
              "      <td>-1.217968</td>\n",
              "      <td>1.596189</td>\n",
              "      <td>0.100395</td>\n",
              "      <td>2.106161</td>\n",
              "      <td>2.176171</td>\n",
              "      <td>-0.866876</td>\n",
              "      <td>1.707775</td>\n",
              "      <td>0.470437</td>\n",
              "      <td>2.538215</td>\n",
              "      <td>0.526563</td>\n",
              "      <td>0.875623</td>\n",
              "      <td>-1.741016</td>\n",
              "      <td>0.810478</td>\n",
              "      <td>0.837013</td>\n",
              "      <td>1.340501</td>\n",
              "      <td>-2.318823</td>\n",
              "      <td>0.065445</td>\n",
              "      <td>-1.924602</td>\n",
              "      <td>1.666222</td>\n",
              "      <td>1.033114</td>\n",
              "      <td>0.100195</td>\n",
              "      <td>1.314486</td>\n",
              "      <td>2.094897</td>\n",
              "      <td>-1.781481</td>\n",
              "      <td>0.079426</td>\n",
              "      <td>-1.249301</td>\n",
              "      <td>-1.422049</td>\n",
              "      <td>1.426089</td>\n",
              "      <td>1.749222</td>\n",
              "      <td>-1.884570</td>\n",
              "      <td>-0.326517</td>\n",
              "      <td>-2.000065</td>\n",
              "      <td>1.287592</td>\n",
              "      <td>-0.672378</td>\n",
              "      <td>-1.637091</td>\n",
              "      <td>-2.586577</td>\n",
              "      <td>...</td>\n",
              "      <td>2.912434</td>\n",
              "      <td>0.792292</td>\n",
              "      <td>-1.331219</td>\n",
              "      <td>3.966785</td>\n",
              "      <td>-3.149431</td>\n",
              "      <td>2.086974</td>\n",
              "      <td>4.014629</td>\n",
              "      <td>-2.470242</td>\n",
              "      <td>-0.326165</td>\n",
              "      <td>1.048685</td>\n",
              "      <td>-2.114103</td>\n",
              "      <td>-0.884933</td>\n",
              "      <td>2.947801</td>\n",
              "      <td>0.514193</td>\n",
              "      <td>-3.516667</td>\n",
              "      <td>-1.065668</td>\n",
              "      <td>0.333623</td>\n",
              "      <td>0.570760</td>\n",
              "      <td>1.542099</td>\n",
              "      <td>1.036982</td>\n",
              "      <td>0.289919</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>1.880710</td>\n",
              "      <td>3.906974</td>\n",
              "      <td>-2.134036</td>\n",
              "      <td>-1.432456</td>\n",
              "      <td>6.798509</td>\n",
              "      <td>-3.465953</td>\n",
              "      <td>-2.104497</td>\n",
              "      <td>-1.058780</td>\n",
              "      <td>-0.118798</td>\n",
              "      <td>0.868572</td>\n",
              "      <td>-0.358550</td>\n",
              "      <td>-1.196152</td>\n",
              "      <td>-3.440636</td>\n",
              "      <td>1.066864</td>\n",
              "      <td>-3.714600</td>\n",
              "      <td>-1.304127</td>\n",
              "      <td>-3.347711</td>\n",
              "      <td>2.633687</td>\n",
              "      <td>-1.828556</td>\n",
              "      <td>-0.990196</td>\n",
              "      <td>-0.788899</td>\n",
              "      <td>-3.984093</td>\n",
              "      <td>1.561347</td>\n",
              "      <td>-0.312444</td>\n",
              "      <td>-0.807412</td>\n",
              "      <td>0.410707</td>\n",
              "      <td>1.738322</td>\n",
              "      <td>-1.268438</td>\n",
              "      <td>1.448271</td>\n",
              "      <td>2.088164</td>\n",
              "      <td>-1.352053</td>\n",
              "      <td>0.129204</td>\n",
              "      <td>0.875063</td>\n",
              "      <td>-1.058863</td>\n",
              "      <td>-3.811529</td>\n",
              "      <td>-2.819438</td>\n",
              "      <td>0.168019</td>\n",
              "      <td>0.799341</td>\n",
              "      <td>2.347459</td>\n",
              "      <td>-1.152050</td>\n",
              "      <td>-0.073379</td>\n",
              "      <td>0.584912</td>\n",
              "      <td>2.391302</td>\n",
              "      <td>-0.847047</td>\n",
              "      <td>-0.198604</td>\n",
              "      <td>1.605899</td>\n",
              "      <td>0.718099</td>\n",
              "      <td>-0.307227</td>\n",
              "      <td>1.443186</td>\n",
              "      <td>1.116030</td>\n",
              "      <td>-0.222231</td>\n",
              "      <td>4.325758</td>\n",
              "      <td>0.777393</td>\n",
              "      <td>1.724637</td>\n",
              "      <td>-0.743674</td>\n",
              "      <td>2.502644</td>\n",
              "      <td>2.662223</td>\n",
              "      <td>0.716697</td>\n",
              "      <td>-4.454898</td>\n",
              "      <td>-1.274869</td>\n",
              "      <td>-0.830480</td>\n",
              "      <td>0.718139</td>\n",
              "      <td>0.722961</td>\n",
              "      <td>-0.474453</td>\n",
              "      <td>2.400864</td>\n",
              "      <td>0.907951</td>\n",
              "      <td>0.312939</td>\n",
              "      <td>0.984343</td>\n",
              "      <td>1.468603</td>\n",
              "      <td>-2.667665</td>\n",
              "      <td>-0.988566</td>\n",
              "      <td>1.012626</td>\n",
              "      <td>1.046013</td>\n",
              "      <td>1.670171</td>\n",
              "      <td>0.804473</td>\n",
              "      <td>2.821836</td>\n",
              "      <td>3.285690</td>\n",
              "      <td>2.215272</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108914</th>\n",
              "      <td>42748</td>\n",
              "      <td>3.383520</td>\n",
              "      <td>-1.669863</td>\n",
              "      <td>1.264212</td>\n",
              "      <td>-2.128029</td>\n",
              "      <td>-2.129893</td>\n",
              "      <td>2.562061</td>\n",
              "      <td>-1.778324</td>\n",
              "      <td>-0.861360</td>\n",
              "      <td>-5.312111</td>\n",
              "      <td>-1.194243</td>\n",
              "      <td>-2.375578</td>\n",
              "      <td>0.247040</td>\n",
              "      <td>2.003000</td>\n",
              "      <td>-0.072495</td>\n",
              "      <td>3.190066</td>\n",
              "      <td>1.868549</td>\n",
              "      <td>-0.431989</td>\n",
              "      <td>-3.087507</td>\n",
              "      <td>0.349909</td>\n",
              "      <td>-2.412557</td>\n",
              "      <td>-0.259443</td>\n",
              "      <td>0.182825</td>\n",
              "      <td>1.727671</td>\n",
              "      <td>-3.584537</td>\n",
              "      <td>-0.412435</td>\n",
              "      <td>-1.705584</td>\n",
              "      <td>1.012528</td>\n",
              "      <td>0.901008</td>\n",
              "      <td>-2.896719</td>\n",
              "      <td>2.248031</td>\n",
              "      <td>0.993419</td>\n",
              "      <td>-2.661560</td>\n",
              "      <td>2.592874</td>\n",
              "      <td>2.524708</td>\n",
              "      <td>3.169341</td>\n",
              "      <td>2.671678</td>\n",
              "      <td>2.032502</td>\n",
              "      <td>-5.340019</td>\n",
              "      <td>2.253168</td>\n",
              "      <td>3.381877</td>\n",
              "      <td>-2.175173</td>\n",
              "      <td>-0.799576</td>\n",
              "      <td>-1.355430</td>\n",
              "      <td>-0.002634</td>\n",
              "      <td>0.259449</td>\n",
              "      <td>-5.751658</td>\n",
              "      <td>-0.684958</td>\n",
              "      <td>-0.275028</td>\n",
              "      <td>1.900147</td>\n",
              "      <td>-0.214058</td>\n",
              "      <td>1.535369</td>\n",
              "      <td>1.807370</td>\n",
              "      <td>1.824506</td>\n",
              "      <td>-4.483827</td>\n",
              "      <td>0.821737</td>\n",
              "      <td>-4.221015</td>\n",
              "      <td>0.975932</td>\n",
              "      <td>-1.052074</td>\n",
              "      <td>-0.615207</td>\n",
              "      <td>1.151293</td>\n",
              "      <td>0.683756</td>\n",
              "      <td>-2.574885</td>\n",
              "      <td>1.859686</td>\n",
              "      <td>-0.413490</td>\n",
              "      <td>0.406037</td>\n",
              "      <td>3.885471</td>\n",
              "      <td>0.946777</td>\n",
              "      <td>0.517306</td>\n",
              "      <td>-1.033148</td>\n",
              "      <td>2.304249</td>\n",
              "      <td>-1.712923</td>\n",
              "      <td>1.500055</td>\n",
              "      <td>0.502091</td>\n",
              "      <td>-1.865179</td>\n",
              "      <td>-2.211487</td>\n",
              "      <td>1.712813</td>\n",
              "      <td>0.581897</td>\n",
              "      <td>2.419595</td>\n",
              "      <td>-1.784679</td>\n",
              "      <td>2.797492</td>\n",
              "      <td>-1.306180</td>\n",
              "      <td>0.915710</td>\n",
              "      <td>0.903072</td>\n",
              "      <td>1.685650</td>\n",
              "      <td>1.769632</td>\n",
              "      <td>-1.761199</td>\n",
              "      <td>0.806649</td>\n",
              "      <td>-0.470639</td>\n",
              "      <td>-2.123776</td>\n",
              "      <td>-0.965421</td>\n",
              "      <td>0.984079</td>\n",
              "      <td>3.021959</td>\n",
              "      <td>-0.971507</td>\n",
              "      <td>1.532547</td>\n",
              "      <td>-0.297451</td>\n",
              "      <td>-1.315823</td>\n",
              "      <td>-0.910824</td>\n",
              "      <td>-2.977850</td>\n",
              "      <td>0.276787</td>\n",
              "      <td>...</td>\n",
              "      <td>-3.671371</td>\n",
              "      <td>2.919145</td>\n",
              "      <td>-0.354430</td>\n",
              "      <td>2.155198</td>\n",
              "      <td>1.272519</td>\n",
              "      <td>-0.692142</td>\n",
              "      <td>0.059904</td>\n",
              "      <td>-0.556941</td>\n",
              "      <td>0.056640</td>\n",
              "      <td>0.154125</td>\n",
              "      <td>2.744786</td>\n",
              "      <td>-2.739786</td>\n",
              "      <td>1.512662</td>\n",
              "      <td>1.191475</td>\n",
              "      <td>1.334174</td>\n",
              "      <td>-1.740190</td>\n",
              "      <td>1.735739</td>\n",
              "      <td>0.162167</td>\n",
              "      <td>-0.790408</td>\n",
              "      <td>-2.942657</td>\n",
              "      <td>-0.712131</td>\n",
              "      <td>-0.983628</td>\n",
              "      <td>-0.669094</td>\n",
              "      <td>0.595622</td>\n",
              "      <td>-1.851003</td>\n",
              "      <td>-2.508376</td>\n",
              "      <td>0.527464</td>\n",
              "      <td>-2.075131</td>\n",
              "      <td>-0.956641</td>\n",
              "      <td>-0.264901</td>\n",
              "      <td>1.204805</td>\n",
              "      <td>1.005664</td>\n",
              "      <td>2.140113</td>\n",
              "      <td>-3.168196</td>\n",
              "      <td>0.915163</td>\n",
              "      <td>1.335524</td>\n",
              "      <td>-0.442423</td>\n",
              "      <td>-3.238333</td>\n",
              "      <td>-3.479846</td>\n",
              "      <td>-0.143950</td>\n",
              "      <td>1.371312</td>\n",
              "      <td>-2.025407</td>\n",
              "      <td>0.626729</td>\n",
              "      <td>-1.739293</td>\n",
              "      <td>1.402521</td>\n",
              "      <td>-0.372969</td>\n",
              "      <td>-0.338624</td>\n",
              "      <td>1.894481</td>\n",
              "      <td>1.619781</td>\n",
              "      <td>-2.315445</td>\n",
              "      <td>-0.885915</td>\n",
              "      <td>1.725065</td>\n",
              "      <td>-0.458364</td>\n",
              "      <td>-0.113217</td>\n",
              "      <td>1.683704</td>\n",
              "      <td>-1.078024</td>\n",
              "      <td>-2.024943</td>\n",
              "      <td>-0.173665</td>\n",
              "      <td>-0.262584</td>\n",
              "      <td>-2.009855</td>\n",
              "      <td>1.953726</td>\n",
              "      <td>2.464684</td>\n",
              "      <td>1.866723</td>\n",
              "      <td>3.098136</td>\n",
              "      <td>1.429997</td>\n",
              "      <td>1.994586</td>\n",
              "      <td>-0.235225</td>\n",
              "      <td>-2.027347</td>\n",
              "      <td>2.489434</td>\n",
              "      <td>-0.328639</td>\n",
              "      <td>0.503968</td>\n",
              "      <td>1.511740</td>\n",
              "      <td>1.208020</td>\n",
              "      <td>1.384978</td>\n",
              "      <td>3.671376</td>\n",
              "      <td>3.584236</td>\n",
              "      <td>0.685376</td>\n",
              "      <td>1.440640</td>\n",
              "      <td>-0.373653</td>\n",
              "      <td>2.983807</td>\n",
              "      <td>-2.187109</td>\n",
              "      <td>-1.982580</td>\n",
              "      <td>0.927802</td>\n",
              "      <td>1.391323</td>\n",
              "      <td>2.578521</td>\n",
              "      <td>-0.332423</td>\n",
              "      <td>0.798493</td>\n",
              "      <td>-1.699570</td>\n",
              "      <td>-0.984258</td>\n",
              "      <td>0.834168</td>\n",
              "      <td>-1.577673</td>\n",
              "      <td>-1.983800</td>\n",
              "      <td>-0.830833</td>\n",
              "      <td>-2.517840</td>\n",
              "      <td>-0.387712</td>\n",
              "      <td>0.237070</td>\n",
              "      <td>-2.524445</td>\n",
              "      <td>1.908586</td>\n",
              "      <td>1.887787</td>\n",
              "      <td>1.021628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108915</th>\n",
              "      <td>61098</td>\n",
              "      <td>2.447854</td>\n",
              "      <td>-0.469942</td>\n",
              "      <td>1.873896</td>\n",
              "      <td>-4.149315</td>\n",
              "      <td>-3.618531</td>\n",
              "      <td>-0.558433</td>\n",
              "      <td>0.162609</td>\n",
              "      <td>1.975269</td>\n",
              "      <td>-5.732625</td>\n",
              "      <td>-4.815576</td>\n",
              "      <td>1.458589</td>\n",
              "      <td>-0.157395</td>\n",
              "      <td>4.123180</td>\n",
              "      <td>0.821072</td>\n",
              "      <td>0.013682</td>\n",
              "      <td>1.206975</td>\n",
              "      <td>0.453557</td>\n",
              "      <td>-2.513904</td>\n",
              "      <td>-1.407518</td>\n",
              "      <td>-1.531497</td>\n",
              "      <td>-5.618808</td>\n",
              "      <td>-0.943977</td>\n",
              "      <td>-1.017109</td>\n",
              "      <td>-2.291309</td>\n",
              "      <td>-0.440314</td>\n",
              "      <td>0.288046</td>\n",
              "      <td>2.175383</td>\n",
              "      <td>1.147492</td>\n",
              "      <td>1.264497</td>\n",
              "      <td>1.151156</td>\n",
              "      <td>-1.025481</td>\n",
              "      <td>-3.679017</td>\n",
              "      <td>-2.111122</td>\n",
              "      <td>-3.165144</td>\n",
              "      <td>2.715713</td>\n",
              "      <td>-4.898654</td>\n",
              "      <td>2.751275</td>\n",
              "      <td>-4.703845</td>\n",
              "      <td>1.822637</td>\n",
              "      <td>-2.490871</td>\n",
              "      <td>1.256222</td>\n",
              "      <td>-0.708914</td>\n",
              "      <td>-0.706023</td>\n",
              "      <td>0.562626</td>\n",
              "      <td>-2.782655</td>\n",
              "      <td>-4.306206</td>\n",
              "      <td>-2.185961</td>\n",
              "      <td>2.108405</td>\n",
              "      <td>4.950135</td>\n",
              "      <td>-3.312389</td>\n",
              "      <td>-1.126098</td>\n",
              "      <td>5.729527</td>\n",
              "      <td>0.643302</td>\n",
              "      <td>-4.457605</td>\n",
              "      <td>2.796445</td>\n",
              "      <td>-1.133119</td>\n",
              "      <td>0.695956</td>\n",
              "      <td>2.956127</td>\n",
              "      <td>-0.633302</td>\n",
              "      <td>-1.519831</td>\n",
              "      <td>3.562393</td>\n",
              "      <td>-4.280138</td>\n",
              "      <td>-5.255344</td>\n",
              "      <td>2.863302</td>\n",
              "      <td>0.061411</td>\n",
              "      <td>-1.341386</td>\n",
              "      <td>-1.337337</td>\n",
              "      <td>1.703181</td>\n",
              "      <td>-2.006601</td>\n",
              "      <td>4.201882</td>\n",
              "      <td>1.242289</td>\n",
              "      <td>0.272231</td>\n",
              "      <td>1.765947</td>\n",
              "      <td>-0.726732</td>\n",
              "      <td>-2.859245</td>\n",
              "      <td>3.293633</td>\n",
              "      <td>-3.036863</td>\n",
              "      <td>-0.779286</td>\n",
              "      <td>-3.258511</td>\n",
              "      <td>2.658521</td>\n",
              "      <td>3.054142</td>\n",
              "      <td>6.156407</td>\n",
              "      <td>0.471332</td>\n",
              "      <td>1.278734</td>\n",
              "      <td>-2.920300</td>\n",
              "      <td>0.480172</td>\n",
              "      <td>-4.350938</td>\n",
              "      <td>-2.538726</td>\n",
              "      <td>-0.122257</td>\n",
              "      <td>1.396373</td>\n",
              "      <td>-0.179927</td>\n",
              "      <td>1.426889</td>\n",
              "      <td>1.606361</td>\n",
              "      <td>1.107465</td>\n",
              "      <td>-1.325785</td>\n",
              "      <td>-1.302385</td>\n",
              "      <td>0.823214</td>\n",
              "      <td>-2.692455</td>\n",
              "      <td>-1.572708</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.435513</td>\n",
              "      <td>-0.460495</td>\n",
              "      <td>2.049898</td>\n",
              "      <td>1.064757</td>\n",
              "      <td>-0.417074</td>\n",
              "      <td>0.133132</td>\n",
              "      <td>2.370134</td>\n",
              "      <td>-1.111871</td>\n",
              "      <td>-0.384299</td>\n",
              "      <td>0.123534</td>\n",
              "      <td>2.619230</td>\n",
              "      <td>-1.402109</td>\n",
              "      <td>-0.863178</td>\n",
              "      <td>1.177824</td>\n",
              "      <td>-1.333709</td>\n",
              "      <td>0.857954</td>\n",
              "      <td>0.409733</td>\n",
              "      <td>1.254296</td>\n",
              "      <td>-0.843010</td>\n",
              "      <td>-0.652145</td>\n",
              "      <td>-4.701323</td>\n",
              "      <td>-0.342422</td>\n",
              "      <td>2.515860</td>\n",
              "      <td>0.744027</td>\n",
              "      <td>-0.759526</td>\n",
              "      <td>-1.492734</td>\n",
              "      <td>-0.776376</td>\n",
              "      <td>0.226138</td>\n",
              "      <td>-1.131623</td>\n",
              "      <td>0.183000</td>\n",
              "      <td>-0.736877</td>\n",
              "      <td>-2.060887</td>\n",
              "      <td>-0.343423</td>\n",
              "      <td>-2.522264</td>\n",
              "      <td>-2.744899</td>\n",
              "      <td>-0.599565</td>\n",
              "      <td>-1.929651</td>\n",
              "      <td>0.655150</td>\n",
              "      <td>0.459797</td>\n",
              "      <td>1.922286</td>\n",
              "      <td>1.685348</td>\n",
              "      <td>-0.147716</td>\n",
              "      <td>1.517651</td>\n",
              "      <td>-0.636391</td>\n",
              "      <td>0.629845</td>\n",
              "      <td>-1.399463</td>\n",
              "      <td>-1.391820</td>\n",
              "      <td>1.030652</td>\n",
              "      <td>-0.024878</td>\n",
              "      <td>-2.390552</td>\n",
              "      <td>1.004328</td>\n",
              "      <td>2.008048</td>\n",
              "      <td>0.340123</td>\n",
              "      <td>-1.387081</td>\n",
              "      <td>-2.523773</td>\n",
              "      <td>-1.018539</td>\n",
              "      <td>-0.198985</td>\n",
              "      <td>-2.278321</td>\n",
              "      <td>0.855287</td>\n",
              "      <td>1.977260</td>\n",
              "      <td>3.336885</td>\n",
              "      <td>-0.026206</td>\n",
              "      <td>2.628304</td>\n",
              "      <td>-0.034228</td>\n",
              "      <td>-1.857510</td>\n",
              "      <td>0.299361</td>\n",
              "      <td>1.335146</td>\n",
              "      <td>-1.908567</td>\n",
              "      <td>-0.318048</td>\n",
              "      <td>1.573966</td>\n",
              "      <td>-2.097476</td>\n",
              "      <td>0.901986</td>\n",
              "      <td>-0.142120</td>\n",
              "      <td>2.523870</td>\n",
              "      <td>0.855082</td>\n",
              "      <td>0.633110</td>\n",
              "      <td>-0.284672</td>\n",
              "      <td>-0.065614</td>\n",
              "      <td>-1.057013</td>\n",
              "      <td>-0.558878</td>\n",
              "      <td>-2.375062</td>\n",
              "      <td>-1.258834</td>\n",
              "      <td>3.204423</td>\n",
              "      <td>0.256820</td>\n",
              "      <td>-1.055324</td>\n",
              "      <td>-2.972080</td>\n",
              "      <td>2.656508</td>\n",
              "      <td>-0.887010</td>\n",
              "      <td>2.091410</td>\n",
              "      <td>0.203728</td>\n",
              "      <td>3.445529</td>\n",
              "      <td>-3.894981</td>\n",
              "      <td>0.318239</td>\n",
              "      <td>-3.956578</td>\n",
              "      <td>0.672438</td>\n",
              "      <td>2.741400</td>\n",
              "      <td>1.146402</td>\n",
              "      <td>3.278049</td>\n",
              "      <td>3.225166</td>\n",
              "      <td>-1.092669</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>108916 rows × 257 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        item_id  txt_embed_0  txt_embed_1  txt_embed_2  txt_embed_3  \\\n",
              "0         42844     4.514945    -2.383720     0.500414     0.407068   \n",
              "1         67898    -2.002905    -0.929881     0.790017    -1.380895   \n",
              "2         66446     4.221673    -1.497139     1.133570    -2.745607   \n",
              "3         63651     2.657970    -0.941863     1.121529    -5.109496   \n",
              "4         46824     3.192195    -1.936676     1.199909    -2.562152   \n",
              "...         ...          ...          ...          ...          ...   \n",
              "108911    79253     2.143652    -1.591184    -0.283598    -2.186552   \n",
              "108912   109138     0.890185     0.042669     2.842594    -4.322702   \n",
              "108913    62184     1.458928    -0.638677    -0.957509    -2.936515   \n",
              "108914    42748     3.383520    -1.669863     1.264212    -2.128029   \n",
              "108915    61098     2.447854    -0.469942     1.873896    -4.149315   \n",
              "\n",
              "        txt_embed_4  txt_embed_5  txt_embed_6  txt_embed_7  txt_embed_8  \\\n",
              "0         -1.995229     0.109078    -0.691775     2.227460    -6.437974   \n",
              "1         -0.510463    -1.810096     1.363962     0.497401    -4.038903   \n",
              "2         -4.197045    -0.542392    -1.396256     1.838419    -6.066454   \n",
              "3         -0.279041    -0.351968    -1.086983     2.703607    -6.494977   \n",
              "4         -2.573456     0.575841    -2.358653     1.620844    -4.302936   \n",
              "...             ...          ...          ...          ...          ...   \n",
              "108911    -1.505779     0.876601     1.302617    -1.762244    -2.847601   \n",
              "108912    -1.107593    -0.033230     2.835225    -1.383299    -4.998042   \n",
              "108913    -0.897658    -0.992379     0.574731     0.027216    -3.514133   \n",
              "108914    -2.129893     2.562061    -1.778324    -0.861360    -5.312111   \n",
              "108915    -3.618531    -0.558433     0.162609     1.975269    -5.732625   \n",
              "\n",
              "        txt_embed_9  txt_embed_10  txt_embed_11  txt_embed_12  txt_embed_13  \\\n",
              "0         -0.824897     -0.138724     -0.379329      0.627660      0.418377   \n",
              "1         -3.057872      0.758558     -1.012155      2.816802      2.086895   \n",
              "2         -2.191799      0.752804      0.868623      6.187662      1.725745   \n",
              "3         -0.746769     -0.068571     -3.894670      4.937046     -1.863204   \n",
              "4         -0.487575      0.020896     -0.763327      4.341694      0.698798   \n",
              "...             ...           ...           ...           ...           ...   \n",
              "108911     0.108608     -1.466877     -2.967015      0.913299     -1.161778   \n",
              "108912    -4.018473     -2.133858     -2.112752      5.674667     -1.652996   \n",
              "108913    -1.925192      1.451574      0.428331      2.025814      0.447675   \n",
              "108914    -1.194243     -2.375578      0.247040      2.003000     -0.072495   \n",
              "108915    -4.815576      1.458589     -0.157395      4.123180      0.821072   \n",
              "\n",
              "        txt_embed_14  txt_embed_15  txt_embed_16  txt_embed_17  txt_embed_18  \\\n",
              "0           4.441218      0.299819      0.578557     -4.699289     -0.394740   \n",
              "1          -1.464331     -1.840496     -2.089971     -1.566872      1.545390   \n",
              "2           2.887859     -1.486026     -0.182256     -3.710785      1.512866   \n",
              "3          -1.955068      1.900193      1.743841     -6.024790      1.460414   \n",
              "4           3.334580      0.607683     -0.718644     -2.730188      0.193828   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      2.752231     -5.542719     -0.901889     -2.699810     -2.309839   \n",
              "108912     -1.637974     -0.246467      0.030858     -0.132066      1.642372   \n",
              "108913     -0.660619     -0.872637     -2.048203      0.468547     -2.090118   \n",
              "108914      3.190066      1.868549     -0.431989     -3.087507      0.349909   \n",
              "108915      0.013682      1.206975      0.453557     -2.513904     -1.407518   \n",
              "\n",
              "        txt_embed_19  txt_embed_20  txt_embed_21  txt_embed_22  txt_embed_23  \\\n",
              "0          -2.391651      0.370532     -1.355466     -1.074178     -2.321640   \n",
              "1           1.284341     -2.270262      0.780126      1.615594     -0.546058   \n",
              "2          -0.636434      0.288435     -3.369717     -0.265998     -3.549319   \n",
              "3          -2.206104     -1.997572     -3.414536     -0.178739      0.987313   \n",
              "4          -1.706196     -0.468727     -2.281904     -1.837274     -2.849140   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.778445     -1.089302     -0.462305      0.550925     -1.022714   \n",
              "108912     -2.437756      1.211184     -3.797614      2.716340     -1.846051   \n",
              "108913     -2.782267     -4.756662     -0.434126     -2.144065      0.290367   \n",
              "108914     -2.412557     -0.259443      0.182825      1.727671     -3.584537   \n",
              "108915     -1.531497     -5.618808     -0.943977     -1.017109     -2.291309   \n",
              "\n",
              "        txt_embed_24  txt_embed_25  txt_embed_26  txt_embed_27  txt_embed_28  \\\n",
              "0          -0.332456      0.123886     -2.439156     -0.345599     -3.304347   \n",
              "1           1.370750     -1.178124      1.346842      0.442434     -1.498540   \n",
              "2           3.375338     -0.901461     -1.558371      1.695343     -4.450464   \n",
              "3           1.255347     -1.187136      2.070518      2.191021     -2.936702   \n",
              "4           0.195873     -0.459765     -0.768752      1.033489     -2.490896   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -2.445610     -2.240845     -3.921844     -1.672699     -1.688246   \n",
              "108912      1.698319      0.771190      4.764339      2.598170     -1.430937   \n",
              "108913     -2.406909      2.708581      2.706972     -0.381109      2.382838   \n",
              "108914     -0.412435     -1.705584      1.012528      0.901008     -2.896719   \n",
              "108915     -0.440314      0.288046      2.175383      1.147492      1.264497   \n",
              "\n",
              "        txt_embed_29  txt_embed_30  txt_embed_31  txt_embed_32  txt_embed_33  \\\n",
              "0           1.485284      0.909802     -1.643002      5.037034      2.780115   \n",
              "1          -0.589944      2.008351     -0.497135     -1.644230      3.140623   \n",
              "2           0.545495      1.000096     -3.468751      3.327641      1.556890   \n",
              "3           2.617733      0.919181     -3.087907     -0.358938     -0.428679   \n",
              "4           2.077521     -0.171984     -3.406347      2.616670      0.713099   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.376479     -0.749645     -2.281994      1.904197     -2.702273   \n",
              "108912      0.347440      0.907071      0.032756     -2.463522     -3.297136   \n",
              "108913      0.911503      0.569131     -2.612042     -1.612692     -2.111382   \n",
              "108914      2.248031      0.993419     -2.661560      2.592874      2.524708   \n",
              "108915      1.151156     -1.025481     -3.679017     -2.111122     -3.165144   \n",
              "\n",
              "        txt_embed_34  txt_embed_35  txt_embed_36  txt_embed_37  txt_embed_38  \\\n",
              "0           4.776496      2.255275      3.769707     -3.661684     -0.649405   \n",
              "1           3.492178      0.335395      1.810923     -4.012080      2.419593   \n",
              "2           4.493203      0.369089      0.167196     -4.837062      1.216016   \n",
              "3           3.815598      2.440558      1.281061     -0.732530      1.517067   \n",
              "4           4.450222      0.606497      0.160672     -2.604218      2.110272   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.578054     -2.232083     -0.220451     -1.909157     -0.809935   \n",
              "108912      2.716323      1.846584     -1.269165     -1.020392      2.497579   \n",
              "108913      2.068428     -1.662065      1.491509     -2.189797     -1.101642   \n",
              "108914      3.169341      2.671678      2.032502     -5.340019      2.253168   \n",
              "108915      2.715713     -4.898654      2.751275     -4.703845      1.822637   \n",
              "\n",
              "        txt_embed_39  txt_embed_40  txt_embed_41  txt_embed_42  txt_embed_43  \\\n",
              "0           4.199636     -0.634806      2.430340     -2.874019     -0.786178   \n",
              "1           0.190941     -0.630611      3.289332     -1.446719     -0.611340   \n",
              "2           4.699153     -1.094529      3.015942     -1.322741     -0.829172   \n",
              "3           2.790302     -2.019122      2.419042     -2.044806      0.649187   \n",
              "4           4.714019     -2.297905      1.700881     -0.195633     -0.404006   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.584604     -1.899768     -0.358462     -0.916753      4.082227   \n",
              "108912      3.490116     -2.338284      3.174366      0.630770      2.929436   \n",
              "108913      0.646667     -1.743810      0.249561      2.283173     -0.826433   \n",
              "108914      3.381877     -2.175173     -0.799576     -1.355430     -0.002634   \n",
              "108915     -2.490871      1.256222     -0.708914     -0.706023      0.562626   \n",
              "\n",
              "        txt_embed_44  txt_embed_45  txt_embed_46  txt_embed_47  txt_embed_48  \\\n",
              "0          -0.504916     -6.007789      1.498495      1.530613      2.379655   \n",
              "1           0.700662     -2.465656     -0.596773      2.498210      3.682916   \n",
              "2           0.555047     -5.592765      1.254898      3.182450      3.053574   \n",
              "3           1.940526     -4.965359      0.930460     -1.152011      0.167594   \n",
              "4           2.140779     -5.351576      1.592488      1.312723      1.610867   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.557145     -2.668177      3.038557      0.201199      1.502191   \n",
              "108912      1.533297     -3.739271      2.125049      1.888600      1.267531   \n",
              "108913      1.260813     -4.058594     -0.620825     -0.670673     -1.037455   \n",
              "108914      0.259449     -5.751658     -0.684958     -0.275028      1.900147   \n",
              "108915     -2.782655     -4.306206     -2.185961      2.108405      4.950135   \n",
              "\n",
              "        txt_embed_49  txt_embed_50  txt_embed_51  txt_embed_52  txt_embed_53  \\\n",
              "0          -0.023146     -0.703605      2.146936      3.944832     -3.098598   \n",
              "1           0.238843      0.570510      0.094637      2.540728     -1.461287   \n",
              "2           1.915569     -1.805712      1.476824      1.445677     -4.286592   \n",
              "3           1.351333      1.412025      5.857270      2.955183     -5.290540   \n",
              "4           0.994072     -1.195971      1.781498      1.785496     -4.071553   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.758015     -2.545711      2.391682     -1.727723     -1.179197   \n",
              "108912      1.988833     -0.566414     -2.023407     -1.848678     -4.852431   \n",
              "108913      0.539870     -1.764350      2.234930      0.302537     -2.878370   \n",
              "108914     -0.214058      1.535369      1.807370      1.824506     -4.483827   \n",
              "108915     -3.312389     -1.126098      5.729527      0.643302     -4.457605   \n",
              "\n",
              "        txt_embed_54  txt_embed_55  txt_embed_56  txt_embed_57  txt_embed_58  \\\n",
              "0           2.513453     -5.395860      0.762132      2.801804      0.877964   \n",
              "1           0.866470     -0.882576     -1.646977      1.915175      2.800210   \n",
              "2           3.866458     -4.053252     -0.571671      2.130672      1.053589   \n",
              "3           3.950262     -1.003028     -0.642327     -0.742141      1.829504   \n",
              "4           2.654091     -5.932536     -0.418919     -0.926006     -0.542602   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.812665     -2.840585      3.628976      1.470329      0.076995   \n",
              "108912      2.402841      1.771225     -1.518038     -3.683095      1.860160   \n",
              "108913      4.449934     -2.123760     -1.768058     -0.519971      1.830129   \n",
              "108914      0.821737     -4.221015      0.975932     -1.052074     -0.615207   \n",
              "108915      2.796445     -1.133119      0.695956      2.956127     -0.633302   \n",
              "\n",
              "        txt_embed_59  txt_embed_60  txt_embed_61  txt_embed_62  txt_embed_63  \\\n",
              "0          -0.585980      1.962556     -5.171217      1.181687      0.541953   \n",
              "1           1.476535      2.345148     -1.675377     -2.948241      4.322546   \n",
              "2           0.110064      2.893591     -4.358958     -1.019454      0.366879   \n",
              "3          -0.369918      0.551058     -4.042940     -1.858755      1.193245   \n",
              "4           0.462660      1.463190     -4.160649      0.174760      0.066889   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.981997      1.813580     -2.348472      0.866408      0.028376   \n",
              "108912      1.633143      0.195921      0.769962     -4.282871     -0.265067   \n",
              "108913      1.443018      1.933492     -2.212900     -0.785136     -1.217968   \n",
              "108914      1.151293      0.683756     -2.574885      1.859686     -0.413490   \n",
              "108915     -1.519831      3.562393     -4.280138     -5.255344      2.863302   \n",
              "\n",
              "        txt_embed_64  txt_embed_65  txt_embed_66  txt_embed_67  txt_embed_68  \\\n",
              "0           0.485833      4.212568      3.458198      1.402939     -0.546293   \n",
              "1           0.006485      1.596134      1.740825      2.517148      1.652603   \n",
              "2           1.841358      4.170247      4.174339      1.262570     -0.029079   \n",
              "3           0.552379      0.840628     -0.199812     -0.531846      0.584006   \n",
              "4           1.971360      1.982323      2.501089      0.240786     -0.528081   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.509214     -2.582299     -3.006606     -0.073780     -2.068264   \n",
              "108912      1.666347      1.591646      1.230523     -0.527127      4.065799   \n",
              "108913      1.596189      0.100395      2.106161      2.176171     -0.866876   \n",
              "108914      0.406037      3.885471      0.946777      0.517306     -1.033148   \n",
              "108915      0.061411     -1.341386     -1.337337      1.703181     -2.006601   \n",
              "\n",
              "        txt_embed_69  txt_embed_70  txt_embed_71  txt_embed_72  txt_embed_73  \\\n",
              "0           2.182101     -0.096255      1.736608      0.685146     -1.613285   \n",
              "1           2.301202     -1.820376      0.313138     -0.460512     -1.465822   \n",
              "2           0.391668      0.851025      2.030272     -0.523211     -2.988503   \n",
              "3           0.238442     -0.183195     -0.964737      0.003038     -3.869885   \n",
              "4           0.936410     -0.267544      1.147592      0.277720     -1.576371   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.675347      3.152147      0.895262     -1.856492      0.034511   \n",
              "108912      3.390041      1.382567      0.413271     -1.279550     -2.449182   \n",
              "108913      1.707775      0.470437      2.538215      0.526563      0.875623   \n",
              "108914      2.304249     -1.712923      1.500055      0.502091     -1.865179   \n",
              "108915      4.201882      1.242289      0.272231      1.765947     -0.726732   \n",
              "\n",
              "        txt_embed_74  txt_embed_75  txt_embed_76  txt_embed_77  txt_embed_78  \\\n",
              "0          -0.912876     -0.532397      1.724842      2.264115     -2.259756   \n",
              "1           0.025661      0.197509      0.952180      1.808614     -3.924314   \n",
              "2           0.468366      2.163268      2.600257      3.421619     -3.726129   \n",
              "3           0.137756      2.962643      0.865882      4.065734     -2.126682   \n",
              "4          -1.375015      2.255514      2.038633      3.813080     -2.544447   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.582400     -0.485126     -3.780087     -1.715265     -1.510518   \n",
              "108912     -1.438711      2.208716      2.639466      2.007577     -4.979889   \n",
              "108913     -1.741016      0.810478      0.837013      1.340501     -2.318823   \n",
              "108914     -2.211487      1.712813      0.581897      2.419595     -1.784679   \n",
              "108915     -2.859245      3.293633     -3.036863     -0.779286     -3.258511   \n",
              "\n",
              "        txt_embed_79  txt_embed_80  txt_embed_81  txt_embed_82  txt_embed_83  \\\n",
              "0           4.506509     -0.346088      0.928198     -2.078261     -0.195576   \n",
              "1           0.874062      1.507638     -1.474959     -0.728147      1.680941   \n",
              "2           3.656601      1.318782      1.944976     -1.118911      2.633650   \n",
              "3          -0.139429     -0.065178      0.067101     -1.729568      3.514949   \n",
              "4           2.709035     -1.257679      1.281865     -0.375471      1.086395   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.879917     -2.084981      2.657861     -0.150674     -2.561351   \n",
              "108912     -0.850287     -0.397183     -2.782560     -0.545637      3.159307   \n",
              "108913      0.065445     -1.924602      1.666222      1.033114      0.100195   \n",
              "108914      2.797492     -1.306180      0.915710      0.903072      1.685650   \n",
              "108915      2.658521      3.054142      6.156407      0.471332      1.278734   \n",
              "\n",
              "        txt_embed_84  txt_embed_85  txt_embed_86  txt_embed_87  txt_embed_88  \\\n",
              "0           4.847578     -2.958686      1.006080      2.082232     -2.259682   \n",
              "1          -2.275249      0.160674     -1.175852      2.707390     -1.540468   \n",
              "2           1.995067     -1.308313     -1.913673      1.838040     -4.906107   \n",
              "3           1.605098      0.651753     -1.316432      0.430641     -0.993690   \n",
              "4           3.939014     -0.752492     -0.473545      0.215483     -3.946254   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.698951     -3.995625     -2.722597     -1.367890     -0.967366   \n",
              "108912     -0.078705      2.974325      1.127572     -0.806367     -1.360380   \n",
              "108913      1.314486      2.094897     -1.781481      0.079426     -1.249301   \n",
              "108914      1.769632     -1.761199      0.806649     -0.470639     -2.123776   \n",
              "108915     -2.920300      0.480172     -4.350938     -2.538726     -0.122257   \n",
              "\n",
              "        txt_embed_89  txt_embed_90  txt_embed_91  txt_embed_92  txt_embed_93  \\\n",
              "0          -2.033314      0.218232      3.975312      2.003447     -0.240628   \n",
              "1          -1.755580      1.266704      0.504936      1.069627      1.892455   \n",
              "2          -3.075503     -0.685768      2.522384      0.549779      1.482735   \n",
              "3          -4.693871     -1.967689      3.228312      1.369545     -0.133246   \n",
              "4          -1.339041     -0.557139      1.841604     -0.263560     -0.572500   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.293119      2.508693      2.485103     -3.782464      0.356524   \n",
              "108912     -5.414014     -0.427686     -1.091666      4.165022      3.997271   \n",
              "108913     -1.422049      1.426089      1.749222     -1.884570     -0.326517   \n",
              "108914     -0.965421      0.984079      3.021959     -0.971507      1.532547   \n",
              "108915      1.396373     -0.179927      1.426889      1.606361      1.107465   \n",
              "\n",
              "        txt_embed_94  txt_embed_95  txt_embed_96  txt_embed_97  txt_embed_98  \\\n",
              "0          -2.468548      1.666064     -2.081961     -2.496872     -1.901637   \n",
              "1          -2.870071      1.314711     -0.647611     -3.864238     -1.128709   \n",
              "2           0.817008      1.933099     -2.539294     -0.497640     -1.017591   \n",
              "3           0.455909     -0.918356     -1.434751      0.915808      0.487750   \n",
              "4           1.669172     -0.041288     -1.751370     -0.922569     -0.890117   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.936141      1.286547     -1.756850      0.721728      2.648691   \n",
              "108912      3.885442      1.963333     -3.179239      1.035787     -2.396387   \n",
              "108913     -2.000065      1.287592     -0.672378     -1.637091     -2.586577   \n",
              "108914     -0.297451     -1.315823     -0.910824     -2.977850      0.276787   \n",
              "108915     -1.325785     -1.302385      0.823214     -2.692455     -1.572708   \n",
              "\n",
              "        ...  img_embed_28  img_embed_29  img_embed_30  img_embed_31  \\\n",
              "0       ...     -2.594815      2.129452     -1.072991      2.495177   \n",
              "1       ...     -2.345706      1.750381     -0.757739      0.708200   \n",
              "2       ...     -2.523711      2.362369     -3.787951      4.148966   \n",
              "3       ...     -4.442958      1.778195     -4.168824      2.106603   \n",
              "4       ...     -3.002218      1.309209      0.779997      1.584465   \n",
              "...     ...           ...           ...           ...           ...   \n",
              "108911  ...     -0.812932      1.195455      1.647590      3.672622   \n",
              "108912  ...      0.789993     -0.356636     -1.215572      1.115422   \n",
              "108913  ...      2.912434      0.792292     -1.331219      3.966785   \n",
              "108914  ...     -3.671371      2.919145     -0.354430      2.155198   \n",
              "108915  ...     -1.435513     -0.460495      2.049898      1.064757   \n",
              "\n",
              "        img_embed_32  img_embed_33  img_embed_34  img_embed_35  img_embed_36  \\\n",
              "0          -0.615316     -0.372666      1.441637     -0.386958      0.574267   \n",
              "1          -2.036261     -1.247846      1.337176      0.381086     -2.195716   \n",
              "2           0.527358     -0.462329      1.958768     -0.515446      0.676892   \n",
              "3          -2.610766     -4.665283      4.229245      1.160626      1.137728   \n",
              "4          -0.254501     -1.970212      2.601439      0.765639     -0.306522   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.958210      0.426038      0.050856      0.294075     -1.827960   \n",
              "108912     -1.715971      2.240216     -1.055415      0.029975     -2.228453   \n",
              "108913     -3.149431      2.086974      4.014629     -2.470242     -0.326165   \n",
              "108914      1.272519     -0.692142      0.059904     -0.556941      0.056640   \n",
              "108915     -0.417074      0.133132      2.370134     -1.111871     -0.384299   \n",
              "\n",
              "        img_embed_37  img_embed_38  img_embed_39  img_embed_40  img_embed_41  \\\n",
              "0           0.290140      2.143984     -2.179755      1.001814      1.709265   \n",
              "1           2.349268      3.234238     -1.073745      2.727566      2.134141   \n",
              "2          -0.304709      0.129076     -1.632903     -0.416446      0.201256   \n",
              "3           0.350339      3.762218     -1.562948      3.289258      0.676585   \n",
              "4           1.411740      2.045010     -1.435165      0.607862      1.814897   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      2.254042      0.032561     -1.122103      1.873654      0.354787   \n",
              "108912     -1.050905      1.246343     -2.759985      3.012103      2.739157   \n",
              "108913      1.048685     -2.114103     -0.884933      2.947801      0.514193   \n",
              "108914      0.154125      2.744786     -2.739786      1.512662      1.191475   \n",
              "108915      0.123534      2.619230     -1.402109     -0.863178      1.177824   \n",
              "\n",
              "        img_embed_42  img_embed_43  img_embed_44  img_embed_45  img_embed_46  \\\n",
              "0           1.765996     -0.978148      2.376266      1.286386     -1.498712   \n",
              "1           1.316549      1.401429      0.322648      1.520445     -1.555399   \n",
              "2           1.504616     -1.840399      0.741553      1.197113      0.473898   \n",
              "3          -1.116040     -2.379200      0.378596      0.514341      3.422350   \n",
              "4           1.915056      1.355841      0.371016      1.591542     -1.356246   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.085081      2.839442     -0.921125      3.449929     -1.993664   \n",
              "108912     -2.998512      0.469200      4.019664     -0.022314     -1.993336   \n",
              "108913     -3.516667     -1.065668      0.333623      0.570760      1.542099   \n",
              "108914      1.334174     -1.740190      1.735739      0.162167     -0.790408   \n",
              "108915     -1.333709      0.857954      0.409733      1.254296     -0.843010   \n",
              "\n",
              "        img_embed_47  img_embed_48  img_embed_49  img_embed_50  img_embed_51  \\\n",
              "0          -2.120687     -1.626103     -1.738368     -0.223271      1.264437   \n",
              "1          -1.759372     -0.522331     -2.062852      1.235842      0.166176   \n",
              "2          -0.926339      0.725195     -2.460084      0.610268      2.418910   \n",
              "3           1.500889     -2.373203      1.373048     -1.818372      0.209331   \n",
              "4          -2.078668     -1.496517     -1.535709      0.522328      1.336467   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      2.745172      0.927272      1.592893      3.730085      1.930457   \n",
              "108912     -0.990848      1.582859     -3.978954      1.577788     -3.159555   \n",
              "108913      1.036982      0.289919     -0.040624      1.880710      3.906974   \n",
              "108914     -2.942657     -0.712131     -0.983628     -0.669094      0.595622   \n",
              "108915     -0.652145     -4.701323     -0.342422      2.515860      0.744027   \n",
              "\n",
              "        img_embed_52  img_embed_53  img_embed_54  img_embed_55  img_embed_56  \\\n",
              "0          -0.987131     -1.909374      2.231456     -2.683646     -0.635318   \n",
              "1          -3.379686     -2.222848      1.613652      0.736073     -2.189353   \n",
              "2          -0.807308     -2.471540      2.551485     -1.811828      0.100877   \n",
              "3          -4.099599     -2.291751      1.703648     -1.778213      0.245399   \n",
              "4          -2.084815     -2.391989      1.279834     -0.479692      0.806861   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.233894     -1.841480      2.312968     -1.052112     -0.093647   \n",
              "108912      1.886579     -2.230175      2.505482      1.897286     -2.838402   \n",
              "108913     -2.134036     -1.432456      6.798509     -3.465953     -2.104497   \n",
              "108914     -1.851003     -2.508376      0.527464     -2.075131     -0.956641   \n",
              "108915     -0.759526     -1.492734     -0.776376      0.226138     -1.131623   \n",
              "\n",
              "        img_embed_57  img_embed_58  img_embed_59  img_embed_60  img_embed_61  \\\n",
              "0           0.085889     -0.823508      0.556983      2.515354     -3.420530   \n",
              "1           1.284548      2.872613      2.676115      0.147529     -1.317109   \n",
              "2           0.743698     -1.116395     -0.359674      3.028536     -2.432427   \n",
              "3          -3.703303      1.452214      2.170496      1.190285     -2.395464   \n",
              "4           0.003365      0.133480      1.940574      0.347273     -3.216053   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.134430      0.012588      2.437869      0.776525     -1.485173   \n",
              "108912     -2.721122      0.833790      2.155062      0.098216      0.083581   \n",
              "108913     -1.058780     -0.118798      0.868572     -0.358550     -1.196152   \n",
              "108914     -0.264901      1.204805      1.005664      2.140113     -3.168196   \n",
              "108915      0.183000     -0.736877     -2.060887     -0.343423     -2.522264   \n",
              "\n",
              "        img_embed_62  img_embed_63  img_embed_64  img_embed_65  img_embed_66  \\\n",
              "0           0.063466      0.009474     -0.065751     -1.075365     -2.971309   \n",
              "1          -2.644052     -1.835089      0.957417     -2.385891     -0.661901   \n",
              "2           1.507481      1.783897     -0.217515     -2.684258     -2.669885   \n",
              "3          -0.117074      0.612694     -4.343407     -3.707790     -1.968170   \n",
              "4          -1.125144     -0.412974     -0.454987     -1.507496     -1.003127   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.380993     -0.018833     -0.966918      2.069371      3.280475   \n",
              "108912      0.543047      1.406939     -0.366133      1.074942     -3.693939   \n",
              "108913     -3.440636      1.066864     -3.714600     -1.304127     -3.347711   \n",
              "108914      0.915163      1.335524     -0.442423     -3.238333     -3.479846   \n",
              "108915     -2.744899     -0.599565     -1.929651      0.655150      0.459797   \n",
              "\n",
              "        img_embed_67  img_embed_68  img_embed_69  img_embed_70  img_embed_71  \\\n",
              "0           1.019620      2.509559     -1.525837      0.542580     -0.269730   \n",
              "1           2.658265     -0.945105     -1.011989     -0.654781     -0.336352   \n",
              "2           1.306354      2.197861      0.239669      0.674681     -0.192571   \n",
              "3           1.676934     -1.696593      0.884128      1.813142      1.855076   \n",
              "4           1.459658      0.357251     -1.254804     -0.310848     -1.874668   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.936332      1.224270      0.320835     -4.495546     -3.091730   \n",
              "108912     -0.185423      0.528465      0.953396      0.305434     -1.719791   \n",
              "108913      2.633687     -1.828556     -0.990196     -0.788899     -3.984093   \n",
              "108914     -0.143950      1.371312     -2.025407      0.626729     -1.739293   \n",
              "108915      1.922286      1.685348     -0.147716      1.517651     -0.636391   \n",
              "\n",
              "        img_embed_72  img_embed_73  img_embed_74  img_embed_75  img_embed_76  \\\n",
              "0          -0.035962      0.391800     -1.234116      2.314029      1.898617   \n",
              "1          -2.126801      1.337513     -1.061840      0.411851      0.246256   \n",
              "2          -0.162941      2.512084     -1.096083      3.525563      1.056434   \n",
              "3           1.303212      2.047489      0.603224      3.958775      3.746269   \n",
              "4          -1.060506      0.087846     -1.922506      1.139462      0.232495   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.057453     -0.370681     -2.902287      0.605567     -2.249251   \n",
              "108912     -2.661647     -0.332588      0.278220      1.315297      3.398311   \n",
              "108913      1.561347     -0.312444     -0.807412      0.410707      1.738322   \n",
              "108914      1.402521     -0.372969     -0.338624      1.894481      1.619781   \n",
              "108915      0.629845     -1.399463     -1.391820      1.030652     -0.024878   \n",
              "\n",
              "        img_embed_77  img_embed_78  img_embed_79  img_embed_80  img_embed_81  \\\n",
              "0          -2.361128      0.312405      3.444607     -0.886250     -1.343637   \n",
              "1          -2.264030      2.399420      2.024863      0.170483     -0.039203   \n",
              "2          -2.129516     -0.005492      3.827181     -0.358198     -2.009379   \n",
              "3          -3.498088     -0.733038     -0.913736     -1.296190      4.821739   \n",
              "4          -1.667729      1.086525      3.235504     -1.360041     -0.573626   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.685881      3.344256      1.003920     -3.433650     -2.621783   \n",
              "108912     -3.397320      0.798742     -2.811525     -1.227957      1.855185   \n",
              "108913     -1.268438      1.448271      2.088164     -1.352053      0.129204   \n",
              "108914     -2.315445     -0.885915      1.725065     -0.458364     -0.113217   \n",
              "108915     -2.390552      1.004328      2.008048      0.340123     -1.387081   \n",
              "\n",
              "        img_embed_82  img_embed_83  img_embed_84  img_embed_85  img_embed_86  \\\n",
              "0           0.954459      0.630835     -2.394722      0.683487      1.149004   \n",
              "1          -1.506677     -1.945932     -0.020228     -0.495499     -0.141013   \n",
              "2          -0.224391      0.803851     -0.909498      0.962810      2.601583   \n",
              "3           0.687235     -1.406431      0.669184     -1.847598     -0.817075   \n",
              "4          -0.343873     -0.862111     -3.036260     -1.016610     -1.149770   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.372633      1.700348     -1.022541      1.666146      3.926513   \n",
              "108912      1.397263     -1.272777     -0.695033     -2.074005     -2.157744   \n",
              "108913      0.875063     -1.058863     -3.811529     -2.819438      0.168019   \n",
              "108914      1.683704     -1.078024     -2.024943     -0.173665     -0.262584   \n",
              "108915     -2.523773     -1.018539     -0.198985     -2.278321      0.855287   \n",
              "\n",
              "        img_embed_87  img_embed_88  img_embed_89  img_embed_90  img_embed_91  \\\n",
              "0          -1.351173      2.023900      1.599198      1.382868      1.605678   \n",
              "1          -1.617521      2.624676     -2.581922      0.220891      0.328793   \n",
              "2           0.056328      1.859474     -0.316134     -1.131286      1.701278   \n",
              "3          -1.181172      2.588552     -1.123118      0.232427      2.170325   \n",
              "4           0.464140      2.412406     -0.654135      0.486894      1.168054   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.593440      3.846366     -3.724903      0.214898      1.602764   \n",
              "108912     -0.613893      3.044159     -1.802477      0.890905      1.535566   \n",
              "108913      0.799341      2.347459     -1.152050     -0.073379      0.584912   \n",
              "108914     -2.009855      1.953726      2.464684      1.866723      3.098136   \n",
              "108915      1.977260      3.336885     -0.026206      2.628304     -0.034228   \n",
              "\n",
              "        img_embed_92  img_embed_93  img_embed_94  img_embed_95  img_embed_96  \\\n",
              "0           1.880667     -0.508161      0.242840     -0.260849      1.875943   \n",
              "1           0.647758      0.231990      1.101486      1.079527      2.953102   \n",
              "2           2.305405     -1.941271      1.248002      0.291000      0.792067   \n",
              "3           0.579414      2.601421     -0.596196     -1.798693      0.312326   \n",
              "4          -0.271420      0.667091      1.163557     -0.132236      0.668463   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      3.950767      0.322759      1.632436      2.913508      3.255090   \n",
              "108912      1.058227      0.463234      0.884959      0.518636      1.126252   \n",
              "108913      2.391302     -0.847047     -0.198604      1.605899      0.718099   \n",
              "108914      1.429997      1.994586     -0.235225     -2.027347      2.489434   \n",
              "108915     -1.857510      0.299361      1.335146     -1.908567     -0.318048   \n",
              "\n",
              "        img_embed_97  img_embed_98  img_embed_99  img_embed_100  \\\n",
              "0           0.206135      0.186973      2.047446      -0.575472   \n",
              "1          -0.528682     -1.140600     -0.373299       0.109811   \n",
              "2           1.361166      1.129005      1.947404      -0.859423   \n",
              "3           0.387486     -2.207365     -1.029329      -1.274233   \n",
              "4          -0.228185      0.155768      1.546821       0.307640   \n",
              "...              ...           ...           ...            ...   \n",
              "108911      0.124804     -3.038602      1.028680      -0.372231   \n",
              "108912     -0.570538      1.777023      0.157465      -2.856526   \n",
              "108913     -0.307227      1.443186      1.116030      -0.222231   \n",
              "108914     -0.328639      0.503968      1.511740       1.208020   \n",
              "108915      1.573966     -2.097476      0.901986      -0.142120   \n",
              "\n",
              "        img_embed_101  img_embed_102  img_embed_103  img_embed_104  \\\n",
              "0            3.016410       2.757146       3.353721      -0.457272   \n",
              "1            2.813541       0.596998       1.754836      -1.359771   \n",
              "2            2.023223       2.348651       4.506127       0.684437   \n",
              "3            2.047230       1.928517       2.102633      -0.559383   \n",
              "4            2.542941       1.240985       2.144569      -1.079753   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       1.747909       2.259741       1.149775      -1.978496   \n",
              "108912       3.190122      -0.744726       2.207457       1.761704   \n",
              "108913       4.325758       0.777393       1.724637      -0.743674   \n",
              "108914       1.384978       3.671376       3.584236       0.685376   \n",
              "108915       2.523870       0.855082       0.633110      -0.284672   \n",
              "\n",
              "        img_embed_105  img_embed_106  img_embed_107  img_embed_108  \\\n",
              "0           -0.125337       2.332963       3.858967      -2.075490   \n",
              "1            0.466501       2.377417      -0.180653      -3.259304   \n",
              "2            2.064992       0.022901       3.464243      -2.325273   \n",
              "3           -0.951418      -2.021749       1.366272      -1.947211   \n",
              "4            0.335191       0.245159       2.150169      -1.991440   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       1.221311       0.619848      -0.702118      -3.045399   \n",
              "108912       2.780637       2.130281      -1.689670      -1.385311   \n",
              "108913       2.502644       2.662223       0.716697      -4.454898   \n",
              "108914       1.440640      -0.373653       2.983807      -2.187109   \n",
              "108915      -0.065614      -1.057013      -0.558878      -2.375062   \n",
              "\n",
              "        img_embed_109  img_embed_110  img_embed_111  img_embed_112  \\\n",
              "0           -0.705496       0.203452       1.719733       2.925039   \n",
              "1            0.120833       2.225643       2.220507      -1.178944   \n",
              "2            0.131324      -1.876178       1.770354       2.925176   \n",
              "3           -2.114419       1.140394      -0.796024       1.906361   \n",
              "4           -2.330727       0.736855       2.126931       0.556061   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -1.687716      -2.313181       3.121440      -0.982756   \n",
              "108912      -1.727320       3.064378      -0.886842       5.473865   \n",
              "108913      -1.274869      -0.830480       0.718139       0.722961   \n",
              "108914      -1.982580       0.927802       1.391323       2.578521   \n",
              "108915      -1.258834       3.204423       0.256820      -1.055324   \n",
              "\n",
              "        img_embed_113  img_embed_114  img_embed_115  img_embed_116  \\\n",
              "0           -0.388639       1.225732      -1.773137       0.052655   \n",
              "1           -0.821367       0.717239      -1.455829      -1.260584   \n",
              "2           -1.851054      -0.092587      -0.580742      -0.422019   \n",
              "3           -0.357520       3.352968      -3.996377       1.520331   \n",
              "4           -1.611493       2.722133      -1.185940       0.399201   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       0.450534       0.706889      -2.271411      -1.142208   \n",
              "108912      -0.998189       0.228917      -1.734863      -2.065603   \n",
              "108913      -0.474453       2.400864       0.907951       0.312939   \n",
              "108914      -0.332423       0.798493      -1.699570      -0.984258   \n",
              "108915      -2.972080       2.656508      -0.887010       2.091410   \n",
              "\n",
              "        img_embed_117  img_embed_118  img_embed_119  img_embed_120  \\\n",
              "0            1.279922      -3.374727      -1.506969      -1.820180   \n",
              "1            2.623467      -0.538330      -2.620164       1.277195   \n",
              "2            0.923714      -4.582711      -1.056910      -2.568084   \n",
              "3           -0.000716      -0.487683      -1.889119       0.943015   \n",
              "4            1.598617      -0.621475      -2.091410       0.501600   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       2.323842      -1.352005      -3.588055       2.803221   \n",
              "108912       0.206962       0.416093      -0.917160      -0.028134   \n",
              "108913       0.984343       1.468603      -2.667665      -0.988566   \n",
              "108914       0.834168      -1.577673      -1.983800      -0.830833   \n",
              "108915       0.203728       3.445529      -3.894981       0.318239   \n",
              "\n",
              "        img_embed_121  img_embed_122  img_embed_123  img_embed_124  \\\n",
              "0           -3.024644       0.445263       0.013933      -1.300239   \n",
              "1            0.601015      -0.345312       0.993457       1.351633   \n",
              "2           -2.038061       2.508719      -0.764789      -0.657116   \n",
              "3           -2.834418       1.633184       2.001801      -2.333152   \n",
              "4           -3.083864      -1.060091       2.053600      -2.025008   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -2.160821      -1.153775       0.290783       1.518086   \n",
              "108912       2.624365       1.574156      -0.014772       2.250575   \n",
              "108913       1.012626       1.046013       1.670171       0.804473   \n",
              "108914      -2.517840      -0.387712       0.237070      -2.524445   \n",
              "108915      -3.956578       0.672438       2.741400       1.146402   \n",
              "\n",
              "        img_embed_125  img_embed_126  img_embed_127  \n",
              "0            2.759948       2.056171       0.508703  \n",
              "1            2.162675       2.768597      -0.937197  \n",
              "2            3.252782       2.687366       0.844332  \n",
              "3            2.645595       2.280233      -0.694448  \n",
              "4            2.399251       2.562317       0.694134  \n",
              "...               ...            ...            ...  \n",
              "108911       3.690181       5.391709       0.328971  \n",
              "108912       2.005705       0.309760       0.913974  \n",
              "108913       2.821836       3.285690       2.215272  \n",
              "108914       1.908586       1.887787       1.021628  \n",
              "108915       3.278049       3.225166      -1.092669  \n",
              "\n",
              "[108916 rows x 257 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 348
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "y0nKbigYH8y1",
        "colab_type": "text"
      },
      "source": [
        "### User Feat"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8KbIu-qgCUsF",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# 6789\n",
        "user_feat_df = pd.read_csv(train_path + '/underexpose_user_feat.csv',header=None, names=['user_id','age_level','gender','city_level'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3PKEWTT-Jc3k",
        "colab_type": "code",
        "outputId": "ac102c83-fcfe-4f6f-d94a-314f44291027",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        }
      },
      "source": [
        "user_feat_df = user_feat_df.drop_duplicates('user_id')\n",
        "user_feat_df # 有缺失值"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>user_id</th>\n",
              "      <th>age_level</th>\n",
              "      <th>gender</th>\n",
              "      <th>city_level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>17</td>\n",
              "      <td>8.0</td>\n",
              "      <td>M</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>26</td>\n",
              "      <td>7.0</td>\n",
              "      <td>M</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>35</td>\n",
              "      <td>6.0</td>\n",
              "      <td>F</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>40</td>\n",
              "      <td>6.0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>49</td>\n",
              "      <td>6.0</td>\n",
              "      <td>M</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6784</th>\n",
              "      <td>35320</td>\n",
              "      <td>1.0</td>\n",
              "      <td>F</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6785</th>\n",
              "      <td>35334</td>\n",
              "      <td>7.0</td>\n",
              "      <td>F</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6786</th>\n",
              "      <td>35340</td>\n",
              "      <td>7.0</td>\n",
              "      <td>F</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6787</th>\n",
              "      <td>35392</td>\n",
              "      <td>5.0</td>\n",
              "      <td>M</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6788</th>\n",
              "      <td>35432</td>\n",
              "      <td>1.0</td>\n",
              "      <td>F</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6786 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      user_id  age_level gender  city_level\n",
              "0          17        8.0      M         4.0\n",
              "1          26        7.0      M         2.0\n",
              "2          35        6.0      F         4.0\n",
              "3          40        6.0      M         1.0\n",
              "4          49        6.0      M         1.0\n",
              "...       ...        ...    ...         ...\n",
              "6784    35320        1.0      F         2.0\n",
              "6785    35334        7.0      F         6.0\n",
              "6786    35340        7.0      F         3.0\n",
              "6787    35392        5.0      M         NaN\n",
              "6788    35432        1.0      F         5.0\n",
              "\n",
              "[6786 rows x 4 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jOpoXEtDlk6x",
        "colab_type": "code",
        "outputId": "bdf2af95-c567-4456-865a-7b60223aeec7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        }
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       8.0\n",
              "1       7.0\n",
              "2       6.0\n",
              "3       6.0\n",
              "4       6.0\n",
              "       ... \n",
              "6784    1.0\n",
              "6785    7.0\n",
              "6786    7.0\n",
              "6787    5.0\n",
              "6788    1.0\n",
              "Name: age_level, Length: 6786, dtype: float64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 274
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4U3nx-zhFabM",
        "colab_type": "code",
        "outputId": "269ca07a-51b8-4fa4-cee4-ae7956253b57",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 170
        }
      },
      "source": [
        "user_feat_df['age_level'].value_counts()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4.0    1425\n",
              "5.0    1363\n",
              "7.0     890\n",
              "2.0     869\n",
              "6.0     817\n",
              "3.0     816\n",
              "8.0     294\n",
              "1.0     232\n",
              "Name: age_level, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6xh2u8HSIEsL",
        "colab_type": "code",
        "outputId": "c57699e1-d02f-4f97-fa20-37c75d052d30",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "user_feat_df['gender'].value_counts()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "F    5211\n",
              "M    1497\n",
              "Name: gender, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "T4SEn3oOIJZc",
        "colab_type": "code",
        "outputId": "a07a8fed-c45e-4ae5-bb21-ec90475582a9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        }
      },
      "source": [
        "user_feat_df['city_level'].value_counts()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6.0    1870\n",
              "2.0    1515\n",
              "3.0    1242\n",
              "5.0     839\n",
              "1.0     760\n",
              "4.0     541\n",
              "Name: city_level, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KP8KC9hxK6k2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def draw_bar_plot(df, y_col, x_col='index'):\n",
        "  fig = sns.barplot(x=df[x_col], y=df[y_col])\n",
        "  for item in fig.get_xticklabels():\n",
        "     item.set_rotation(90)\n",
        "  plt.title(y_col)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "byYf92FrHjVL",
        "colab_type": "code",
        "outputId": "5f1bc163-0b6c-47f3-9dff-5c2a1344dec6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 650
        }
      },
      "source": [
        "plt.figure(figsize=(16, 10))\n",
        "i = 1\n",
        "for col in ['user_id', 'age_level', 'gender', 'city_level']:\n",
        "    plt.subplot(2, 2, i)\n",
        "    i += 1\n",
        "    v = user_feat_df[col].value_counts().reset_index()[:10]\n",
        "    draw_bar_plot(v, col)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x720 with 4 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y_jWCFFLKVF3",
        "colab_type": "code",
        "outputId": "eb0e6d0d-50d2-4681-e5ba-a99001d50a81",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 650
        }
      },
      "source": [
        "plt.figure(figsize=(16, 10))\n",
        "top_50_click_items = whole_click['item_id'].value_counts().reset_index().sort_values('item_id', ascending=False)[:50]\n",
        "draw_bar_plot(top_50_click_items, 'item_id')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_B7UExmJOmFF",
        "colab_type": "code",
        "outputId": "9486d3bb-807a-42db-9466-99c436f56952",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "top_50_click_items"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>item_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>52766</td>\n",
              "      <td>986</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>111225</td>\n",
              "      <td>759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4340</td>\n",
              "      <td>587</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2420</td>\n",
              "      <td>567</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>21426</td>\n",
              "      <td>567</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>114125</td>\n",
              "      <td>532</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>21279</td>\n",
              "      <td>509</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>12845</td>\n",
              "      <td>505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>87254</td>\n",
              "      <td>504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>7156</td>\n",
              "      <td>502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>42651</td>\n",
              "      <td>469</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>77047</td>\n",
              "      <td>456</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>44534</td>\n",
              "      <td>447</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1604</td>\n",
              "      <td>442</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>35452</td>\n",
              "      <td>425</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>6568</td>\n",
              "      <td>409</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>12061</td>\n",
              "      <td>402</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>114201</td>\n",
              "      <td>398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19326</td>\n",
              "      <td>393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20208</td>\n",
              "      <td>392</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>34716</td>\n",
              "      <td>389</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>13845</td>\n",
              "      <td>389</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>91838</td>\n",
              "      <td>381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>76943</td>\n",
              "      <td>379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>17287</td>\n",
              "      <td>379</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>52131</td>\n",
              "      <td>370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>67536</td>\n",
              "      <td>369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>4999</td>\n",
              "      <td>369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>27885</td>\n",
              "      <td>368</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>14239</td>\n",
              "      <td>366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>4230</td>\n",
              "      <td>361</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>14777</td>\n",
              "      <td>359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>13302</td>\n",
              "      <td>358</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>80227</td>\n",
              "      <td>349</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>78364</td>\n",
              "      <td>347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>114055</td>\n",
              "      <td>346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>88605</td>\n",
              "      <td>346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>49787</td>\n",
              "      <td>345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>45198</td>\n",
              "      <td>343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>29594</td>\n",
              "      <td>336</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>59903</td>\n",
              "      <td>334</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>104777</td>\n",
              "      <td>333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>24025</td>\n",
              "      <td>330</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>110172</td>\n",
              "      <td>329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>1518</td>\n",
              "      <td>319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>51182</td>\n",
              "      <td>315</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>55349</td>\n",
              "      <td>309</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>88058</td>\n",
              "      <td>308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>114108</td>\n",
              "      <td>308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>4483</td>\n",
              "      <td>308</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     index  item_id\n",
              "0    52766      986\n",
              "1   111225      759\n",
              "2     4340      587\n",
              "4     2420      567\n",
              "3    21426      567\n",
              "5   114125      532\n",
              "6    21279      509\n",
              "7    12845      505\n",
              "8    87254      504\n",
              "9     7156      502\n",
              "10   42651      469\n",
              "11   77047      456\n",
              "12   44534      447\n",
              "13    1604      442\n",
              "14   35452      425\n",
              "15    6568      409\n",
              "16   12061      402\n",
              "17  114201      398\n",
              "18   19326      393\n",
              "19   20208      392\n",
              "20   34716      389\n",
              "21   13845      389\n",
              "22   91838      381\n",
              "23   76943      379\n",
              "24   17287      379\n",
              "25   52131      370\n",
              "26   67536      369\n",
              "27    4999      369\n",
              "28   27885      368\n",
              "29   14239      366\n",
              "30    4230      361\n",
              "31   14777      359\n",
              "32   13302      358\n",
              "33   80227      349\n",
              "34   78364      347\n",
              "35  114055      346\n",
              "36   88605      346\n",
              "37   49787      345\n",
              "38   45198      343\n",
              "39   29594      336\n",
              "40   59903      334\n",
              "41  104777      333\n",
              "42   24025      330\n",
              "43  110172      329\n",
              "44    1518      319\n",
              "45   51182      315\n",
              "46   55349      309\n",
              "47   88058      308\n",
              "48  114108      308\n",
              "49    4483      308"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Py_GzuI1JxRu",
        "colab_type": "code",
        "outputId": "a0871a7c-7461-45f9-fa2f-0b746da8a012",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# 26046 users \n",
        "len(whole_click['user_id'].unique())"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "26046"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "in-53qplJoRS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "whole_click_user_feat_df = pd.merge(user_feat_df, whole_click, how='inner', on='user_id')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YrGOdEznjzVz",
        "colab_type": "text"
      },
      "source": [
        "### Item Feat"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f7RXcNbckJMK",
        "colab_type": "code",
        "outputId": "08ed4730-7356-4db9-8cdc-b0402c410607",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "# 缺失items\n",
        "len(set(whole_click['item_id'].unique()) - set(item_feat_df['item_id']))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4355"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 337
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RFlv_kSsj9jj",
        "colab_type": "code",
        "outputId": "71e16412-195e-4ed1-c550-86902b5ef5df",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 439
        }
      },
      "source": [
        "item_feat_df # 10w个物品"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>item_id</th>\n",
              "      <th>txt_embed_1</th>\n",
              "      <th>txt_embed_2</th>\n",
              "      <th>txt_embed_3</th>\n",
              "      <th>txt_embed_4</th>\n",
              "      <th>txt_embed_5</th>\n",
              "      <th>txt_embed_6</th>\n",
              "      <th>txt_embed_7</th>\n",
              "      <th>txt_embed_8</th>\n",
              "      <th>txt_embed_9</th>\n",
              "      <th>txt_embed_10</th>\n",
              "      <th>txt_embed_11</th>\n",
              "      <th>txt_embed_12</th>\n",
              "      <th>txt_embed_13</th>\n",
              "      <th>txt_embed_14</th>\n",
              "      <th>txt_embed_15</th>\n",
              "      <th>txt_embed_16</th>\n",
              "      <th>txt_embed_17</th>\n",
              "      <th>txt_embed_18</th>\n",
              "      <th>txt_embed_19</th>\n",
              "      <th>txt_embed_20</th>\n",
              "      <th>txt_embed_21</th>\n",
              "      <th>txt_embed_22</th>\n",
              "      <th>txt_embed_23</th>\n",
              "      <th>txt_embed_24</th>\n",
              "      <th>txt_embed_25</th>\n",
              "      <th>txt_embed_26</th>\n",
              "      <th>txt_embed_27</th>\n",
              "      <th>txt_embed_28</th>\n",
              "      <th>txt_embed_29</th>\n",
              "      <th>txt_embed_30</th>\n",
              "      <th>txt_embed_31</th>\n",
              "      <th>txt_embed_32</th>\n",
              "      <th>txt_embed_33</th>\n",
              "      <th>txt_embed_34</th>\n",
              "      <th>txt_embed_35</th>\n",
              "      <th>txt_embed_36</th>\n",
              "      <th>txt_embed_37</th>\n",
              "      <th>txt_embed_38</th>\n",
              "      <th>txt_embed_39</th>\n",
              "      <th>txt_embed_40</th>\n",
              "      <th>txt_embed_41</th>\n",
              "      <th>txt_embed_42</th>\n",
              "      <th>txt_embed_43</th>\n",
              "      <th>txt_embed_44</th>\n",
              "      <th>txt_embed_45</th>\n",
              "      <th>txt_embed_46</th>\n",
              "      <th>txt_embed_47</th>\n",
              "      <th>txt_embed_48</th>\n",
              "      <th>txt_embed_49</th>\n",
              "      <th>txt_embed_50</th>\n",
              "      <th>txt_embed_51</th>\n",
              "      <th>txt_embed_52</th>\n",
              "      <th>txt_embed_53</th>\n",
              "      <th>txt_embed_54</th>\n",
              "      <th>txt_embed_55</th>\n",
              "      <th>txt_embed_56</th>\n",
              "      <th>txt_embed_57</th>\n",
              "      <th>txt_embed_58</th>\n",
              "      <th>txt_embed_59</th>\n",
              "      <th>txt_embed_60</th>\n",
              "      <th>txt_embed_61</th>\n",
              "      <th>txt_embed_62</th>\n",
              "      <th>txt_embed_63</th>\n",
              "      <th>txt_embed_64</th>\n",
              "      <th>txt_embed_65</th>\n",
              "      <th>txt_embed_66</th>\n",
              "      <th>txt_embed_67</th>\n",
              "      <th>txt_embed_68</th>\n",
              "      <th>txt_embed_69</th>\n",
              "      <th>txt_embed_70</th>\n",
              "      <th>txt_embed_71</th>\n",
              "      <th>txt_embed_72</th>\n",
              "      <th>txt_embed_73</th>\n",
              "      <th>txt_embed_74</th>\n",
              "      <th>txt_embed_75</th>\n",
              "      <th>txt_embed_76</th>\n",
              "      <th>txt_embed_77</th>\n",
              "      <th>txt_embed_78</th>\n",
              "      <th>txt_embed_79</th>\n",
              "      <th>txt_embed_80</th>\n",
              "      <th>txt_embed_81</th>\n",
              "      <th>txt_embed_82</th>\n",
              "      <th>txt_embed_83</th>\n",
              "      <th>txt_embed_84</th>\n",
              "      <th>txt_embed_85</th>\n",
              "      <th>txt_embed_86</th>\n",
              "      <th>txt_embed_87</th>\n",
              "      <th>txt_embed_88</th>\n",
              "      <th>txt_embed_89</th>\n",
              "      <th>txt_embed_90</th>\n",
              "      <th>txt_embed_91</th>\n",
              "      <th>txt_embed_92</th>\n",
              "      <th>txt_embed_93</th>\n",
              "      <th>txt_embed_94</th>\n",
              "      <th>txt_embed_95</th>\n",
              "      <th>txt_embed_96</th>\n",
              "      <th>txt_embed_97</th>\n",
              "      <th>txt_embed_98</th>\n",
              "      <th>txt_embed_99</th>\n",
              "      <th>...</th>\n",
              "      <th>img_embed_157</th>\n",
              "      <th>img_embed_158</th>\n",
              "      <th>img_embed_159</th>\n",
              "      <th>img_embed_160</th>\n",
              "      <th>img_embed_161</th>\n",
              "      <th>img_embed_162</th>\n",
              "      <th>img_embed_163</th>\n",
              "      <th>img_embed_164</th>\n",
              "      <th>img_embed_165</th>\n",
              "      <th>img_embed_166</th>\n",
              "      <th>img_embed_167</th>\n",
              "      <th>img_embed_168</th>\n",
              "      <th>img_embed_169</th>\n",
              "      <th>img_embed_170</th>\n",
              "      <th>img_embed_171</th>\n",
              "      <th>img_embed_172</th>\n",
              "      <th>img_embed_173</th>\n",
              "      <th>img_embed_174</th>\n",
              "      <th>img_embed_175</th>\n",
              "      <th>img_embed_176</th>\n",
              "      <th>img_embed_177</th>\n",
              "      <th>img_embed_178</th>\n",
              "      <th>img_embed_179</th>\n",
              "      <th>img_embed_180</th>\n",
              "      <th>img_embed_181</th>\n",
              "      <th>img_embed_182</th>\n",
              "      <th>img_embed_183</th>\n",
              "      <th>img_embed_184</th>\n",
              "      <th>img_embed_185</th>\n",
              "      <th>img_embed_186</th>\n",
              "      <th>img_embed_187</th>\n",
              "      <th>img_embed_188</th>\n",
              "      <th>img_embed_189</th>\n",
              "      <th>img_embed_190</th>\n",
              "      <th>img_embed_191</th>\n",
              "      <th>img_embed_192</th>\n",
              "      <th>img_embed_193</th>\n",
              "      <th>img_embed_194</th>\n",
              "      <th>img_embed_195</th>\n",
              "      <th>img_embed_196</th>\n",
              "      <th>img_embed_197</th>\n",
              "      <th>img_embed_198</th>\n",
              "      <th>img_embed_199</th>\n",
              "      <th>img_embed_200</th>\n",
              "      <th>img_embed_201</th>\n",
              "      <th>img_embed_202</th>\n",
              "      <th>img_embed_203</th>\n",
              "      <th>img_embed_204</th>\n",
              "      <th>img_embed_205</th>\n",
              "      <th>img_embed_206</th>\n",
              "      <th>img_embed_207</th>\n",
              "      <th>img_embed_208</th>\n",
              "      <th>img_embed_209</th>\n",
              "      <th>img_embed_210</th>\n",
              "      <th>img_embed_211</th>\n",
              "      <th>img_embed_212</th>\n",
              "      <th>img_embed_213</th>\n",
              "      <th>img_embed_214</th>\n",
              "      <th>img_embed_215</th>\n",
              "      <th>img_embed_216</th>\n",
              "      <th>img_embed_217</th>\n",
              "      <th>img_embed_218</th>\n",
              "      <th>img_embed_219</th>\n",
              "      <th>img_embed_220</th>\n",
              "      <th>img_embed_221</th>\n",
              "      <th>img_embed_222</th>\n",
              "      <th>img_embed_223</th>\n",
              "      <th>img_embed_224</th>\n",
              "      <th>img_embed_225</th>\n",
              "      <th>img_embed_226</th>\n",
              "      <th>img_embed_227</th>\n",
              "      <th>img_embed_228</th>\n",
              "      <th>img_embed_229</th>\n",
              "      <th>img_embed_230</th>\n",
              "      <th>img_embed_231</th>\n",
              "      <th>img_embed_232</th>\n",
              "      <th>img_embed_233</th>\n",
              "      <th>img_embed_234</th>\n",
              "      <th>img_embed_235</th>\n",
              "      <th>img_embed_236</th>\n",
              "      <th>img_embed_237</th>\n",
              "      <th>img_embed_238</th>\n",
              "      <th>img_embed_239</th>\n",
              "      <th>img_embed_240</th>\n",
              "      <th>img_embed_241</th>\n",
              "      <th>img_embed_242</th>\n",
              "      <th>img_embed_243</th>\n",
              "      <th>img_embed_244</th>\n",
              "      <th>img_embed_245</th>\n",
              "      <th>img_embed_246</th>\n",
              "      <th>img_embed_247</th>\n",
              "      <th>img_embed_248</th>\n",
              "      <th>img_embed_249</th>\n",
              "      <th>img_embed_250</th>\n",
              "      <th>img_embed_251</th>\n",
              "      <th>img_embed_252</th>\n",
              "      <th>img_embed_253</th>\n",
              "      <th>img_embed_254</th>\n",
              "      <th>img_embed_255</th>\n",
              "      <th>img_embed_256</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>42844</td>\n",
              "      <td>4.514945</td>\n",
              "      <td>-2.383720</td>\n",
              "      <td>0.500414</td>\n",
              "      <td>0.407068</td>\n",
              "      <td>-1.995229</td>\n",
              "      <td>0.109078</td>\n",
              "      <td>-0.691775</td>\n",
              "      <td>2.227460</td>\n",
              "      <td>-6.437974</td>\n",
              "      <td>-0.824897</td>\n",
              "      <td>-0.138724</td>\n",
              "      <td>-0.379329</td>\n",
              "      <td>0.627660</td>\n",
              "      <td>0.418377</td>\n",
              "      <td>4.441218</td>\n",
              "      <td>0.299819</td>\n",
              "      <td>0.578557</td>\n",
              "      <td>-4.699289</td>\n",
              "      <td>-0.394740</td>\n",
              "      <td>-2.391651</td>\n",
              "      <td>0.370532</td>\n",
              "      <td>-1.355466</td>\n",
              "      <td>-1.074178</td>\n",
              "      <td>-2.321640</td>\n",
              "      <td>-0.332456</td>\n",
              "      <td>0.123886</td>\n",
              "      <td>-2.439156</td>\n",
              "      <td>-0.345599</td>\n",
              "      <td>-3.304347</td>\n",
              "      <td>1.485284</td>\n",
              "      <td>0.909802</td>\n",
              "      <td>-1.643002</td>\n",
              "      <td>5.037034</td>\n",
              "      <td>2.780115</td>\n",
              "      <td>4.776496</td>\n",
              "      <td>2.255275</td>\n",
              "      <td>3.769707</td>\n",
              "      <td>-3.661684</td>\n",
              "      <td>-0.649405</td>\n",
              "      <td>4.199636</td>\n",
              "      <td>-0.634806</td>\n",
              "      <td>2.430340</td>\n",
              "      <td>-2.874019</td>\n",
              "      <td>-0.786178</td>\n",
              "      <td>-0.504916</td>\n",
              "      <td>-6.007789</td>\n",
              "      <td>1.498495</td>\n",
              "      <td>1.530613</td>\n",
              "      <td>2.379655</td>\n",
              "      <td>-0.023146</td>\n",
              "      <td>-0.703605</td>\n",
              "      <td>2.146936</td>\n",
              "      <td>3.944832</td>\n",
              "      <td>-3.098598</td>\n",
              "      <td>2.513453</td>\n",
              "      <td>-5.395860</td>\n",
              "      <td>0.762132</td>\n",
              "      <td>2.801804</td>\n",
              "      <td>0.877964</td>\n",
              "      <td>-0.585980</td>\n",
              "      <td>1.962556</td>\n",
              "      <td>-5.171217</td>\n",
              "      <td>1.181687</td>\n",
              "      <td>0.541953</td>\n",
              "      <td>0.485833</td>\n",
              "      <td>4.212568</td>\n",
              "      <td>3.458198</td>\n",
              "      <td>1.402939</td>\n",
              "      <td>-0.546293</td>\n",
              "      <td>2.182101</td>\n",
              "      <td>-0.096255</td>\n",
              "      <td>1.736608</td>\n",
              "      <td>0.685146</td>\n",
              "      <td>-1.613285</td>\n",
              "      <td>-0.912876</td>\n",
              "      <td>-0.532397</td>\n",
              "      <td>1.724842</td>\n",
              "      <td>2.264115</td>\n",
              "      <td>-2.259756</td>\n",
              "      <td>4.506509</td>\n",
              "      <td>-0.346088</td>\n",
              "      <td>0.928198</td>\n",
              "      <td>-2.078261</td>\n",
              "      <td>-0.195576</td>\n",
              "      <td>4.847578</td>\n",
              "      <td>-2.958686</td>\n",
              "      <td>1.006080</td>\n",
              "      <td>2.082232</td>\n",
              "      <td>-2.259682</td>\n",
              "      <td>-2.033314</td>\n",
              "      <td>0.218232</td>\n",
              "      <td>3.975312</td>\n",
              "      <td>2.003447</td>\n",
              "      <td>-0.240628</td>\n",
              "      <td>-2.468548</td>\n",
              "      <td>1.666064</td>\n",
              "      <td>-2.081961</td>\n",
              "      <td>-2.496872</td>\n",
              "      <td>-1.901637</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.594815</td>\n",
              "      <td>2.129452</td>\n",
              "      <td>-1.072991</td>\n",
              "      <td>2.495177</td>\n",
              "      <td>-0.615316</td>\n",
              "      <td>-0.372666</td>\n",
              "      <td>1.441637</td>\n",
              "      <td>-0.386958</td>\n",
              "      <td>0.574267</td>\n",
              "      <td>0.290140</td>\n",
              "      <td>2.143984</td>\n",
              "      <td>-2.179755</td>\n",
              "      <td>1.001814</td>\n",
              "      <td>1.709265</td>\n",
              "      <td>1.765996</td>\n",
              "      <td>-0.978148</td>\n",
              "      <td>2.376266</td>\n",
              "      <td>1.286386</td>\n",
              "      <td>-1.498712</td>\n",
              "      <td>-2.120687</td>\n",
              "      <td>-1.626103</td>\n",
              "      <td>-1.738368</td>\n",
              "      <td>-0.223271</td>\n",
              "      <td>1.264437</td>\n",
              "      <td>-0.987131</td>\n",
              "      <td>-1.909374</td>\n",
              "      <td>2.231456</td>\n",
              "      <td>-2.683646</td>\n",
              "      <td>-0.635318</td>\n",
              "      <td>0.085889</td>\n",
              "      <td>-0.823508</td>\n",
              "      <td>0.556983</td>\n",
              "      <td>2.515354</td>\n",
              "      <td>-3.420530</td>\n",
              "      <td>0.063466</td>\n",
              "      <td>0.009474</td>\n",
              "      <td>-0.065751</td>\n",
              "      <td>-1.075365</td>\n",
              "      <td>-2.971309</td>\n",
              "      <td>1.019620</td>\n",
              "      <td>2.509559</td>\n",
              "      <td>-1.525837</td>\n",
              "      <td>0.542580</td>\n",
              "      <td>-0.269730</td>\n",
              "      <td>-0.035962</td>\n",
              "      <td>0.391800</td>\n",
              "      <td>-1.234116</td>\n",
              "      <td>2.314029</td>\n",
              "      <td>1.898617</td>\n",
              "      <td>-2.361128</td>\n",
              "      <td>0.312405</td>\n",
              "      <td>3.444607</td>\n",
              "      <td>-0.886250</td>\n",
              "      <td>-1.343637</td>\n",
              "      <td>0.954459</td>\n",
              "      <td>0.630835</td>\n",
              "      <td>-2.394722</td>\n",
              "      <td>0.683487</td>\n",
              "      <td>1.149004</td>\n",
              "      <td>-1.351173</td>\n",
              "      <td>2.023900</td>\n",
              "      <td>1.599198</td>\n",
              "      <td>1.382868</td>\n",
              "      <td>1.605678</td>\n",
              "      <td>1.880667</td>\n",
              "      <td>-0.508161</td>\n",
              "      <td>0.242840</td>\n",
              "      <td>-0.260849</td>\n",
              "      <td>1.875943</td>\n",
              "      <td>0.206135</td>\n",
              "      <td>0.186973</td>\n",
              "      <td>2.047446</td>\n",
              "      <td>-0.575472</td>\n",
              "      <td>3.016410</td>\n",
              "      <td>2.757146</td>\n",
              "      <td>3.353721</td>\n",
              "      <td>-0.457272</td>\n",
              "      <td>-0.125337</td>\n",
              "      <td>2.332963</td>\n",
              "      <td>3.858967</td>\n",
              "      <td>-2.075490</td>\n",
              "      <td>-0.705496</td>\n",
              "      <td>0.203452</td>\n",
              "      <td>1.719733</td>\n",
              "      <td>2.925039</td>\n",
              "      <td>-0.388639</td>\n",
              "      <td>1.225732</td>\n",
              "      <td>-1.773137</td>\n",
              "      <td>0.052655</td>\n",
              "      <td>1.279922</td>\n",
              "      <td>-3.374727</td>\n",
              "      <td>-1.506969</td>\n",
              "      <td>-1.820180</td>\n",
              "      <td>-3.024644</td>\n",
              "      <td>0.445263</td>\n",
              "      <td>0.013933</td>\n",
              "      <td>-1.300239</td>\n",
              "      <td>2.759948</td>\n",
              "      <td>2.056171</td>\n",
              "      <td>0.508703</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>67898</td>\n",
              "      <td>-2.002905</td>\n",
              "      <td>-0.929881</td>\n",
              "      <td>0.790017</td>\n",
              "      <td>-1.380895</td>\n",
              "      <td>-0.510463</td>\n",
              "      <td>-1.810096</td>\n",
              "      <td>1.363962</td>\n",
              "      <td>0.497401</td>\n",
              "      <td>-4.038903</td>\n",
              "      <td>-3.057872</td>\n",
              "      <td>0.758558</td>\n",
              "      <td>-1.012155</td>\n",
              "      <td>2.816802</td>\n",
              "      <td>2.086895</td>\n",
              "      <td>-1.464331</td>\n",
              "      <td>-1.840496</td>\n",
              "      <td>-2.089971</td>\n",
              "      <td>-1.566872</td>\n",
              "      <td>1.545390</td>\n",
              "      <td>1.284341</td>\n",
              "      <td>-2.270262</td>\n",
              "      <td>0.780126</td>\n",
              "      <td>1.615594</td>\n",
              "      <td>-0.546058</td>\n",
              "      <td>1.370750</td>\n",
              "      <td>-1.178124</td>\n",
              "      <td>1.346842</td>\n",
              "      <td>0.442434</td>\n",
              "      <td>-1.498540</td>\n",
              "      <td>-0.589944</td>\n",
              "      <td>2.008351</td>\n",
              "      <td>-0.497135</td>\n",
              "      <td>-1.644230</td>\n",
              "      <td>3.140623</td>\n",
              "      <td>3.492178</td>\n",
              "      <td>0.335395</td>\n",
              "      <td>1.810923</td>\n",
              "      <td>-4.012080</td>\n",
              "      <td>2.419593</td>\n",
              "      <td>0.190941</td>\n",
              "      <td>-0.630611</td>\n",
              "      <td>3.289332</td>\n",
              "      <td>-1.446719</td>\n",
              "      <td>-0.611340</td>\n",
              "      <td>0.700662</td>\n",
              "      <td>-2.465656</td>\n",
              "      <td>-0.596773</td>\n",
              "      <td>2.498210</td>\n",
              "      <td>3.682916</td>\n",
              "      <td>0.238843</td>\n",
              "      <td>0.570510</td>\n",
              "      <td>0.094637</td>\n",
              "      <td>2.540728</td>\n",
              "      <td>-1.461287</td>\n",
              "      <td>0.866470</td>\n",
              "      <td>-0.882576</td>\n",
              "      <td>-1.646977</td>\n",
              "      <td>1.915175</td>\n",
              "      <td>2.800210</td>\n",
              "      <td>1.476535</td>\n",
              "      <td>2.345148</td>\n",
              "      <td>-1.675377</td>\n",
              "      <td>-2.948241</td>\n",
              "      <td>4.322546</td>\n",
              "      <td>0.006485</td>\n",
              "      <td>1.596134</td>\n",
              "      <td>1.740825</td>\n",
              "      <td>2.517148</td>\n",
              "      <td>1.652603</td>\n",
              "      <td>2.301202</td>\n",
              "      <td>-1.820376</td>\n",
              "      <td>0.313138</td>\n",
              "      <td>-0.460512</td>\n",
              "      <td>-1.465822</td>\n",
              "      <td>0.025661</td>\n",
              "      <td>0.197509</td>\n",
              "      <td>0.952180</td>\n",
              "      <td>1.808614</td>\n",
              "      <td>-3.924314</td>\n",
              "      <td>0.874062</td>\n",
              "      <td>1.507638</td>\n",
              "      <td>-1.474959</td>\n",
              "      <td>-0.728147</td>\n",
              "      <td>1.680941</td>\n",
              "      <td>-2.275249</td>\n",
              "      <td>0.160674</td>\n",
              "      <td>-1.175852</td>\n",
              "      <td>2.707390</td>\n",
              "      <td>-1.540468</td>\n",
              "      <td>-1.755580</td>\n",
              "      <td>1.266704</td>\n",
              "      <td>0.504936</td>\n",
              "      <td>1.069627</td>\n",
              "      <td>1.892455</td>\n",
              "      <td>-2.870071</td>\n",
              "      <td>1.314711</td>\n",
              "      <td>-0.647611</td>\n",
              "      <td>-3.864238</td>\n",
              "      <td>-1.128709</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.345706</td>\n",
              "      <td>1.750381</td>\n",
              "      <td>-0.757739</td>\n",
              "      <td>0.708200</td>\n",
              "      <td>-2.036261</td>\n",
              "      <td>-1.247846</td>\n",
              "      <td>1.337176</td>\n",
              "      <td>0.381086</td>\n",
              "      <td>-2.195716</td>\n",
              "      <td>2.349268</td>\n",
              "      <td>3.234238</td>\n",
              "      <td>-1.073745</td>\n",
              "      <td>2.727566</td>\n",
              "      <td>2.134141</td>\n",
              "      <td>1.316549</td>\n",
              "      <td>1.401429</td>\n",
              "      <td>0.322648</td>\n",
              "      <td>1.520445</td>\n",
              "      <td>-1.555399</td>\n",
              "      <td>-1.759372</td>\n",
              "      <td>-0.522331</td>\n",
              "      <td>-2.062852</td>\n",
              "      <td>1.235842</td>\n",
              "      <td>0.166176</td>\n",
              "      <td>-3.379686</td>\n",
              "      <td>-2.222848</td>\n",
              "      <td>1.613652</td>\n",
              "      <td>0.736073</td>\n",
              "      <td>-2.189353</td>\n",
              "      <td>1.284548</td>\n",
              "      <td>2.872613</td>\n",
              "      <td>2.676115</td>\n",
              "      <td>0.147529</td>\n",
              "      <td>-1.317109</td>\n",
              "      <td>-2.644052</td>\n",
              "      <td>-1.835089</td>\n",
              "      <td>0.957417</td>\n",
              "      <td>-2.385891</td>\n",
              "      <td>-0.661901</td>\n",
              "      <td>2.658265</td>\n",
              "      <td>-0.945105</td>\n",
              "      <td>-1.011989</td>\n",
              "      <td>-0.654781</td>\n",
              "      <td>-0.336352</td>\n",
              "      <td>-2.126801</td>\n",
              "      <td>1.337513</td>\n",
              "      <td>-1.061840</td>\n",
              "      <td>0.411851</td>\n",
              "      <td>0.246256</td>\n",
              "      <td>-2.264030</td>\n",
              "      <td>2.399420</td>\n",
              "      <td>2.024863</td>\n",
              "      <td>0.170483</td>\n",
              "      <td>-0.039203</td>\n",
              "      <td>-1.506677</td>\n",
              "      <td>-1.945932</td>\n",
              "      <td>-0.020228</td>\n",
              "      <td>-0.495499</td>\n",
              "      <td>-0.141013</td>\n",
              "      <td>-1.617521</td>\n",
              "      <td>2.624676</td>\n",
              "      <td>-2.581922</td>\n",
              "      <td>0.220891</td>\n",
              "      <td>0.328793</td>\n",
              "      <td>0.647758</td>\n",
              "      <td>0.231990</td>\n",
              "      <td>1.101486</td>\n",
              "      <td>1.079527</td>\n",
              "      <td>2.953102</td>\n",
              "      <td>-0.528682</td>\n",
              "      <td>-1.140600</td>\n",
              "      <td>-0.373299</td>\n",
              "      <td>0.109811</td>\n",
              "      <td>2.813541</td>\n",
              "      <td>0.596998</td>\n",
              "      <td>1.754836</td>\n",
              "      <td>-1.359771</td>\n",
              "      <td>0.466501</td>\n",
              "      <td>2.377417</td>\n",
              "      <td>-0.180653</td>\n",
              "      <td>-3.259304</td>\n",
              "      <td>0.120833</td>\n",
              "      <td>2.225643</td>\n",
              "      <td>2.220507</td>\n",
              "      <td>-1.178944</td>\n",
              "      <td>-0.821367</td>\n",
              "      <td>0.717239</td>\n",
              "      <td>-1.455829</td>\n",
              "      <td>-1.260584</td>\n",
              "      <td>2.623467</td>\n",
              "      <td>-0.538330</td>\n",
              "      <td>-2.620164</td>\n",
              "      <td>1.277195</td>\n",
              "      <td>0.601015</td>\n",
              "      <td>-0.345312</td>\n",
              "      <td>0.993457</td>\n",
              "      <td>1.351633</td>\n",
              "      <td>2.162675</td>\n",
              "      <td>2.768597</td>\n",
              "      <td>-0.937197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>66446</td>\n",
              "      <td>4.221673</td>\n",
              "      <td>-1.497139</td>\n",
              "      <td>1.133570</td>\n",
              "      <td>-2.745607</td>\n",
              "      <td>-4.197045</td>\n",
              "      <td>-0.542392</td>\n",
              "      <td>-1.396256</td>\n",
              "      <td>1.838419</td>\n",
              "      <td>-6.066454</td>\n",
              "      <td>-2.191799</td>\n",
              "      <td>0.752804</td>\n",
              "      <td>0.868623</td>\n",
              "      <td>6.187662</td>\n",
              "      <td>1.725745</td>\n",
              "      <td>2.887859</td>\n",
              "      <td>-1.486026</td>\n",
              "      <td>-0.182256</td>\n",
              "      <td>-3.710785</td>\n",
              "      <td>1.512866</td>\n",
              "      <td>-0.636434</td>\n",
              "      <td>0.288435</td>\n",
              "      <td>-3.369717</td>\n",
              "      <td>-0.265998</td>\n",
              "      <td>-3.549319</td>\n",
              "      <td>3.375338</td>\n",
              "      <td>-0.901461</td>\n",
              "      <td>-1.558371</td>\n",
              "      <td>1.695343</td>\n",
              "      <td>-4.450464</td>\n",
              "      <td>0.545495</td>\n",
              "      <td>1.000096</td>\n",
              "      <td>-3.468751</td>\n",
              "      <td>3.327641</td>\n",
              "      <td>1.556890</td>\n",
              "      <td>4.493203</td>\n",
              "      <td>0.369089</td>\n",
              "      <td>0.167196</td>\n",
              "      <td>-4.837062</td>\n",
              "      <td>1.216016</td>\n",
              "      <td>4.699153</td>\n",
              "      <td>-1.094529</td>\n",
              "      <td>3.015942</td>\n",
              "      <td>-1.322741</td>\n",
              "      <td>-0.829172</td>\n",
              "      <td>0.555047</td>\n",
              "      <td>-5.592765</td>\n",
              "      <td>1.254898</td>\n",
              "      <td>3.182450</td>\n",
              "      <td>3.053574</td>\n",
              "      <td>1.915569</td>\n",
              "      <td>-1.805712</td>\n",
              "      <td>1.476824</td>\n",
              "      <td>1.445677</td>\n",
              "      <td>-4.286592</td>\n",
              "      <td>3.866458</td>\n",
              "      <td>-4.053252</td>\n",
              "      <td>-0.571671</td>\n",
              "      <td>2.130672</td>\n",
              "      <td>1.053589</td>\n",
              "      <td>0.110064</td>\n",
              "      <td>2.893591</td>\n",
              "      <td>-4.358958</td>\n",
              "      <td>-1.019454</td>\n",
              "      <td>0.366879</td>\n",
              "      <td>1.841358</td>\n",
              "      <td>4.170247</td>\n",
              "      <td>4.174339</td>\n",
              "      <td>1.262570</td>\n",
              "      <td>-0.029079</td>\n",
              "      <td>0.391668</td>\n",
              "      <td>0.851025</td>\n",
              "      <td>2.030272</td>\n",
              "      <td>-0.523211</td>\n",
              "      <td>-2.988503</td>\n",
              "      <td>0.468366</td>\n",
              "      <td>2.163268</td>\n",
              "      <td>2.600257</td>\n",
              "      <td>3.421619</td>\n",
              "      <td>-3.726129</td>\n",
              "      <td>3.656601</td>\n",
              "      <td>1.318782</td>\n",
              "      <td>1.944976</td>\n",
              "      <td>-1.118911</td>\n",
              "      <td>2.633650</td>\n",
              "      <td>1.995067</td>\n",
              "      <td>-1.308313</td>\n",
              "      <td>-1.913673</td>\n",
              "      <td>1.838040</td>\n",
              "      <td>-4.906107</td>\n",
              "      <td>-3.075503</td>\n",
              "      <td>-0.685768</td>\n",
              "      <td>2.522384</td>\n",
              "      <td>0.549779</td>\n",
              "      <td>1.482735</td>\n",
              "      <td>0.817008</td>\n",
              "      <td>1.933099</td>\n",
              "      <td>-2.539294</td>\n",
              "      <td>-0.497640</td>\n",
              "      <td>-1.017591</td>\n",
              "      <td>...</td>\n",
              "      <td>-2.523711</td>\n",
              "      <td>2.362369</td>\n",
              "      <td>-3.787951</td>\n",
              "      <td>4.148966</td>\n",
              "      <td>0.527358</td>\n",
              "      <td>-0.462329</td>\n",
              "      <td>1.958768</td>\n",
              "      <td>-0.515446</td>\n",
              "      <td>0.676892</td>\n",
              "      <td>-0.304709</td>\n",
              "      <td>0.129076</td>\n",
              "      <td>-1.632903</td>\n",
              "      <td>-0.416446</td>\n",
              "      <td>0.201256</td>\n",
              "      <td>1.504616</td>\n",
              "      <td>-1.840399</td>\n",
              "      <td>0.741553</td>\n",
              "      <td>1.197113</td>\n",
              "      <td>0.473898</td>\n",
              "      <td>-0.926339</td>\n",
              "      <td>0.725195</td>\n",
              "      <td>-2.460084</td>\n",
              "      <td>0.610268</td>\n",
              "      <td>2.418910</td>\n",
              "      <td>-0.807308</td>\n",
              "      <td>-2.471540</td>\n",
              "      <td>2.551485</td>\n",
              "      <td>-1.811828</td>\n",
              "      <td>0.100877</td>\n",
              "      <td>0.743698</td>\n",
              "      <td>-1.116395</td>\n",
              "      <td>-0.359674</td>\n",
              "      <td>3.028536</td>\n",
              "      <td>-2.432427</td>\n",
              "      <td>1.507481</td>\n",
              "      <td>1.783897</td>\n",
              "      <td>-0.217515</td>\n",
              "      <td>-2.684258</td>\n",
              "      <td>-2.669885</td>\n",
              "      <td>1.306354</td>\n",
              "      <td>2.197861</td>\n",
              "      <td>0.239669</td>\n",
              "      <td>0.674681</td>\n",
              "      <td>-0.192571</td>\n",
              "      <td>-0.162941</td>\n",
              "      <td>2.512084</td>\n",
              "      <td>-1.096083</td>\n",
              "      <td>3.525563</td>\n",
              "      <td>1.056434</td>\n",
              "      <td>-2.129516</td>\n",
              "      <td>-0.005492</td>\n",
              "      <td>3.827181</td>\n",
              "      <td>-0.358198</td>\n",
              "      <td>-2.009379</td>\n",
              "      <td>-0.224391</td>\n",
              "      <td>0.803851</td>\n",
              "      <td>-0.909498</td>\n",
              "      <td>0.962810</td>\n",
              "      <td>2.601583</td>\n",
              "      <td>0.056328</td>\n",
              "      <td>1.859474</td>\n",
              "      <td>-0.316134</td>\n",
              "      <td>-1.131286</td>\n",
              "      <td>1.701278</td>\n",
              "      <td>2.305405</td>\n",
              "      <td>-1.941271</td>\n",
              "      <td>1.248002</td>\n",
              "      <td>0.291000</td>\n",
              "      <td>0.792067</td>\n",
              "      <td>1.361166</td>\n",
              "      <td>1.129005</td>\n",
              "      <td>1.947404</td>\n",
              "      <td>-0.859423</td>\n",
              "      <td>2.023223</td>\n",
              "      <td>2.348651</td>\n",
              "      <td>4.506127</td>\n",
              "      <td>0.684437</td>\n",
              "      <td>2.064992</td>\n",
              "      <td>0.022901</td>\n",
              "      <td>3.464243</td>\n",
              "      <td>-2.325273</td>\n",
              "      <td>0.131324</td>\n",
              "      <td>-1.876178</td>\n",
              "      <td>1.770354</td>\n",
              "      <td>2.925176</td>\n",
              "      <td>-1.851054</td>\n",
              "      <td>-0.092587</td>\n",
              "      <td>-0.580742</td>\n",
              "      <td>-0.422019</td>\n",
              "      <td>0.923714</td>\n",
              "      <td>-4.582711</td>\n",
              "      <td>-1.056910</td>\n",
              "      <td>-2.568084</td>\n",
              "      <td>-2.038061</td>\n",
              "      <td>2.508719</td>\n",
              "      <td>-0.764789</td>\n",
              "      <td>-0.657116</td>\n",
              "      <td>3.252782</td>\n",
              "      <td>2.687366</td>\n",
              "      <td>0.844332</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>63651</td>\n",
              "      <td>2.657970</td>\n",
              "      <td>-0.941863</td>\n",
              "      <td>1.121529</td>\n",
              "      <td>-5.109496</td>\n",
              "      <td>-0.279041</td>\n",
              "      <td>-0.351968</td>\n",
              "      <td>-1.086983</td>\n",
              "      <td>2.703607</td>\n",
              "      <td>-6.494977</td>\n",
              "      <td>-0.746769</td>\n",
              "      <td>-0.068571</td>\n",
              "      <td>-3.894670</td>\n",
              "      <td>4.937046</td>\n",
              "      <td>-1.863204</td>\n",
              "      <td>-1.955068</td>\n",
              "      <td>1.900193</td>\n",
              "      <td>1.743841</td>\n",
              "      <td>-6.024790</td>\n",
              "      <td>1.460414</td>\n",
              "      <td>-2.206104</td>\n",
              "      <td>-1.997572</td>\n",
              "      <td>-3.414536</td>\n",
              "      <td>-0.178739</td>\n",
              "      <td>0.987313</td>\n",
              "      <td>1.255347</td>\n",
              "      <td>-1.187136</td>\n",
              "      <td>2.070518</td>\n",
              "      <td>2.191021</td>\n",
              "      <td>-2.936702</td>\n",
              "      <td>2.617733</td>\n",
              "      <td>0.919181</td>\n",
              "      <td>-3.087907</td>\n",
              "      <td>-0.358938</td>\n",
              "      <td>-0.428679</td>\n",
              "      <td>3.815598</td>\n",
              "      <td>2.440558</td>\n",
              "      <td>1.281061</td>\n",
              "      <td>-0.732530</td>\n",
              "      <td>1.517067</td>\n",
              "      <td>2.790302</td>\n",
              "      <td>-2.019122</td>\n",
              "      <td>2.419042</td>\n",
              "      <td>-2.044806</td>\n",
              "      <td>0.649187</td>\n",
              "      <td>1.940526</td>\n",
              "      <td>-4.965359</td>\n",
              "      <td>0.930460</td>\n",
              "      <td>-1.152011</td>\n",
              "      <td>0.167594</td>\n",
              "      <td>1.351333</td>\n",
              "      <td>1.412025</td>\n",
              "      <td>5.857270</td>\n",
              "      <td>2.955183</td>\n",
              "      <td>-5.290540</td>\n",
              "      <td>3.950262</td>\n",
              "      <td>-1.003028</td>\n",
              "      <td>-0.642327</td>\n",
              "      <td>-0.742141</td>\n",
              "      <td>1.829504</td>\n",
              "      <td>-0.369918</td>\n",
              "      <td>0.551058</td>\n",
              "      <td>-4.042940</td>\n",
              "      <td>-1.858755</td>\n",
              "      <td>1.193245</td>\n",
              "      <td>0.552379</td>\n",
              "      <td>0.840628</td>\n",
              "      <td>-0.199812</td>\n",
              "      <td>-0.531846</td>\n",
              "      <td>0.584006</td>\n",
              "      <td>0.238442</td>\n",
              "      <td>-0.183195</td>\n",
              "      <td>-0.964737</td>\n",
              "      <td>0.003038</td>\n",
              "      <td>-3.869885</td>\n",
              "      <td>0.137756</td>\n",
              "      <td>2.962643</td>\n",
              "      <td>0.865882</td>\n",
              "      <td>4.065734</td>\n",
              "      <td>-2.126682</td>\n",
              "      <td>-0.139429</td>\n",
              "      <td>-0.065178</td>\n",
              "      <td>0.067101</td>\n",
              "      <td>-1.729568</td>\n",
              "      <td>3.514949</td>\n",
              "      <td>1.605098</td>\n",
              "      <td>0.651753</td>\n",
              "      <td>-1.316432</td>\n",
              "      <td>0.430641</td>\n",
              "      <td>-0.993690</td>\n",
              "      <td>-4.693871</td>\n",
              "      <td>-1.967689</td>\n",
              "      <td>3.228312</td>\n",
              "      <td>1.369545</td>\n",
              "      <td>-0.133246</td>\n",
              "      <td>0.455909</td>\n",
              "      <td>-0.918356</td>\n",
              "      <td>-1.434751</td>\n",
              "      <td>0.915808</td>\n",
              "      <td>0.487750</td>\n",
              "      <td>...</td>\n",
              "      <td>-4.442958</td>\n",
              "      <td>1.778195</td>\n",
              "      <td>-4.168824</td>\n",
              "      <td>2.106603</td>\n",
              "      <td>-2.610766</td>\n",
              "      <td>-4.665283</td>\n",
              "      <td>4.229245</td>\n",
              "      <td>1.160626</td>\n",
              "      <td>1.137728</td>\n",
              "      <td>0.350339</td>\n",
              "      <td>3.762218</td>\n",
              "      <td>-1.562948</td>\n",
              "      <td>3.289258</td>\n",
              "      <td>0.676585</td>\n",
              "      <td>-1.116040</td>\n",
              "      <td>-2.379200</td>\n",
              "      <td>0.378596</td>\n",
              "      <td>0.514341</td>\n",
              "      <td>3.422350</td>\n",
              "      <td>1.500889</td>\n",
              "      <td>-2.373203</td>\n",
              "      <td>1.373048</td>\n",
              "      <td>-1.818372</td>\n",
              "      <td>0.209331</td>\n",
              "      <td>-4.099599</td>\n",
              "      <td>-2.291751</td>\n",
              "      <td>1.703648</td>\n",
              "      <td>-1.778213</td>\n",
              "      <td>0.245399</td>\n",
              "      <td>-3.703303</td>\n",
              "      <td>1.452214</td>\n",
              "      <td>2.170496</td>\n",
              "      <td>1.190285</td>\n",
              "      <td>-2.395464</td>\n",
              "      <td>-0.117074</td>\n",
              "      <td>0.612694</td>\n",
              "      <td>-4.343407</td>\n",
              "      <td>-3.707790</td>\n",
              "      <td>-1.968170</td>\n",
              "      <td>1.676934</td>\n",
              "      <td>-1.696593</td>\n",
              "      <td>0.884128</td>\n",
              "      <td>1.813142</td>\n",
              "      <td>1.855076</td>\n",
              "      <td>1.303212</td>\n",
              "      <td>2.047489</td>\n",
              "      <td>0.603224</td>\n",
              "      <td>3.958775</td>\n",
              "      <td>3.746269</td>\n",
              "      <td>-3.498088</td>\n",
              "      <td>-0.733038</td>\n",
              "      <td>-0.913736</td>\n",
              "      <td>-1.296190</td>\n",
              "      <td>4.821739</td>\n",
              "      <td>0.687235</td>\n",
              "      <td>-1.406431</td>\n",
              "      <td>0.669184</td>\n",
              "      <td>-1.847598</td>\n",
              "      <td>-0.817075</td>\n",
              "      <td>-1.181172</td>\n",
              "      <td>2.588552</td>\n",
              "      <td>-1.123118</td>\n",
              "      <td>0.232427</td>\n",
              "      <td>2.170325</td>\n",
              "      <td>0.579414</td>\n",
              "      <td>2.601421</td>\n",
              "      <td>-0.596196</td>\n",
              "      <td>-1.798693</td>\n",
              "      <td>0.312326</td>\n",
              "      <td>0.387486</td>\n",
              "      <td>-2.207365</td>\n",
              "      <td>-1.029329</td>\n",
              "      <td>-1.274233</td>\n",
              "      <td>2.047230</td>\n",
              "      <td>1.928517</td>\n",
              "      <td>2.102633</td>\n",
              "      <td>-0.559383</td>\n",
              "      <td>-0.951418</td>\n",
              "      <td>-2.021749</td>\n",
              "      <td>1.366272</td>\n",
              "      <td>-1.947211</td>\n",
              "      <td>-2.114419</td>\n",
              "      <td>1.140394</td>\n",
              "      <td>-0.796024</td>\n",
              "      <td>1.906361</td>\n",
              "      <td>-0.357520</td>\n",
              "      <td>3.352968</td>\n",
              "      <td>-3.996377</td>\n",
              "      <td>1.520331</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.487683</td>\n",
              "      <td>-1.889119</td>\n",
              "      <td>0.943015</td>\n",
              "      <td>-2.834418</td>\n",
              "      <td>1.633184</td>\n",
              "      <td>2.001801</td>\n",
              "      <td>-2.333152</td>\n",
              "      <td>2.645595</td>\n",
              "      <td>2.280233</td>\n",
              "      <td>-0.694448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>46824</td>\n",
              "      <td>3.192195</td>\n",
              "      <td>-1.936676</td>\n",
              "      <td>1.199909</td>\n",
              "      <td>-2.562152</td>\n",
              "      <td>-2.573456</td>\n",
              "      <td>0.575841</td>\n",
              "      <td>-2.358653</td>\n",
              "      <td>1.620844</td>\n",
              "      <td>-4.302936</td>\n",
              "      <td>-0.487575</td>\n",
              "      <td>0.020896</td>\n",
              "      <td>-0.763327</td>\n",
              "      <td>4.341694</td>\n",
              "      <td>0.698798</td>\n",
              "      <td>3.334580</td>\n",
              "      <td>0.607683</td>\n",
              "      <td>-0.718644</td>\n",
              "      <td>-2.730188</td>\n",
              "      <td>0.193828</td>\n",
              "      <td>-1.706196</td>\n",
              "      <td>-0.468727</td>\n",
              "      <td>-2.281904</td>\n",
              "      <td>-1.837274</td>\n",
              "      <td>-2.849140</td>\n",
              "      <td>0.195873</td>\n",
              "      <td>-0.459765</td>\n",
              "      <td>-0.768752</td>\n",
              "      <td>1.033489</td>\n",
              "      <td>-2.490896</td>\n",
              "      <td>2.077521</td>\n",
              "      <td>-0.171984</td>\n",
              "      <td>-3.406347</td>\n",
              "      <td>2.616670</td>\n",
              "      <td>0.713099</td>\n",
              "      <td>4.450222</td>\n",
              "      <td>0.606497</td>\n",
              "      <td>0.160672</td>\n",
              "      <td>-2.604218</td>\n",
              "      <td>2.110272</td>\n",
              "      <td>4.714019</td>\n",
              "      <td>-2.297905</td>\n",
              "      <td>1.700881</td>\n",
              "      <td>-0.195633</td>\n",
              "      <td>-0.404006</td>\n",
              "      <td>2.140779</td>\n",
              "      <td>-5.351576</td>\n",
              "      <td>1.592488</td>\n",
              "      <td>1.312723</td>\n",
              "      <td>1.610867</td>\n",
              "      <td>0.994072</td>\n",
              "      <td>-1.195971</td>\n",
              "      <td>1.781498</td>\n",
              "      <td>1.785496</td>\n",
              "      <td>-4.071553</td>\n",
              "      <td>2.654091</td>\n",
              "      <td>-5.932536</td>\n",
              "      <td>-0.418919</td>\n",
              "      <td>-0.926006</td>\n",
              "      <td>-0.542602</td>\n",
              "      <td>0.462660</td>\n",
              "      <td>1.463190</td>\n",
              "      <td>-4.160649</td>\n",
              "      <td>0.174760</td>\n",
              "      <td>0.066889</td>\n",
              "      <td>1.971360</td>\n",
              "      <td>1.982323</td>\n",
              "      <td>2.501089</td>\n",
              "      <td>0.240786</td>\n",
              "      <td>-0.528081</td>\n",
              "      <td>0.936410</td>\n",
              "      <td>-0.267544</td>\n",
              "      <td>1.147592</td>\n",
              "      <td>0.277720</td>\n",
              "      <td>-1.576371</td>\n",
              "      <td>-1.375015</td>\n",
              "      <td>2.255514</td>\n",
              "      <td>2.038633</td>\n",
              "      <td>3.813080</td>\n",
              "      <td>-2.544447</td>\n",
              "      <td>2.709035</td>\n",
              "      <td>-1.257679</td>\n",
              "      <td>1.281865</td>\n",
              "      <td>-0.375471</td>\n",
              "      <td>1.086395</td>\n",
              "      <td>3.939014</td>\n",
              "      <td>-0.752492</td>\n",
              "      <td>-0.473545</td>\n",
              "      <td>0.215483</td>\n",
              "      <td>-3.946254</td>\n",
              "      <td>-1.339041</td>\n",
              "      <td>-0.557139</td>\n",
              "      <td>1.841604</td>\n",
              "      <td>-0.263560</td>\n",
              "      <td>-0.572500</td>\n",
              "      <td>1.669172</td>\n",
              "      <td>-0.041288</td>\n",
              "      <td>-1.751370</td>\n",
              "      <td>-0.922569</td>\n",
              "      <td>-0.890117</td>\n",
              "      <td>...</td>\n",
              "      <td>-3.002218</td>\n",
              "      <td>1.309209</td>\n",
              "      <td>0.779997</td>\n",
              "      <td>1.584465</td>\n",
              "      <td>-0.254501</td>\n",
              "      <td>-1.970212</td>\n",
              "      <td>2.601439</td>\n",
              "      <td>0.765639</td>\n",
              "      <td>-0.306522</td>\n",
              "      <td>1.411740</td>\n",
              "      <td>2.045010</td>\n",
              "      <td>-1.435165</td>\n",
              "      <td>0.607862</td>\n",
              "      <td>1.814897</td>\n",
              "      <td>1.915056</td>\n",
              "      <td>1.355841</td>\n",
              "      <td>0.371016</td>\n",
              "      <td>1.591542</td>\n",
              "      <td>-1.356246</td>\n",
              "      <td>-2.078668</td>\n",
              "      <td>-1.496517</td>\n",
              "      <td>-1.535709</td>\n",
              "      <td>0.522328</td>\n",
              "      <td>1.336467</td>\n",
              "      <td>-2.084815</td>\n",
              "      <td>-2.391989</td>\n",
              "      <td>1.279834</td>\n",
              "      <td>-0.479692</td>\n",
              "      <td>0.806861</td>\n",
              "      <td>0.003365</td>\n",
              "      <td>0.133480</td>\n",
              "      <td>1.940574</td>\n",
              "      <td>0.347273</td>\n",
              "      <td>-3.216053</td>\n",
              "      <td>-1.125144</td>\n",
              "      <td>-0.412974</td>\n",
              "      <td>-0.454987</td>\n",
              "      <td>-1.507496</td>\n",
              "      <td>-1.003127</td>\n",
              "      <td>1.459658</td>\n",
              "      <td>0.357251</td>\n",
              "      <td>-1.254804</td>\n",
              "      <td>-0.310848</td>\n",
              "      <td>-1.874668</td>\n",
              "      <td>-1.060506</td>\n",
              "      <td>0.087846</td>\n",
              "      <td>-1.922506</td>\n",
              "      <td>1.139462</td>\n",
              "      <td>0.232495</td>\n",
              "      <td>-1.667729</td>\n",
              "      <td>1.086525</td>\n",
              "      <td>3.235504</td>\n",
              "      <td>-1.360041</td>\n",
              "      <td>-0.573626</td>\n",
              "      <td>-0.343873</td>\n",
              "      <td>-0.862111</td>\n",
              "      <td>-3.036260</td>\n",
              "      <td>-1.016610</td>\n",
              "      <td>-1.149770</td>\n",
              "      <td>0.464140</td>\n",
              "      <td>2.412406</td>\n",
              "      <td>-0.654135</td>\n",
              "      <td>0.486894</td>\n",
              "      <td>1.168054</td>\n",
              "      <td>-0.271420</td>\n",
              "      <td>0.667091</td>\n",
              "      <td>1.163557</td>\n",
              "      <td>-0.132236</td>\n",
              "      <td>0.668463</td>\n",
              "      <td>-0.228185</td>\n",
              "      <td>0.155768</td>\n",
              "      <td>1.546821</td>\n",
              "      <td>0.307640</td>\n",
              "      <td>2.542941</td>\n",
              "      <td>1.240985</td>\n",
              "      <td>2.144569</td>\n",
              "      <td>-1.079753</td>\n",
              "      <td>0.335191</td>\n",
              "      <td>0.245159</td>\n",
              "      <td>2.150169</td>\n",
              "      <td>-1.991440</td>\n",
              "      <td>-2.330727</td>\n",
              "      <td>0.736855</td>\n",
              "      <td>2.126931</td>\n",
              "      <td>0.556061</td>\n",
              "      <td>-1.611493</td>\n",
              "      <td>2.722133</td>\n",
              "      <td>-1.185940</td>\n",
              "      <td>0.399201</td>\n",
              "      <td>1.598617</td>\n",
              "      <td>-0.621475</td>\n",
              "      <td>-2.091410</td>\n",
              "      <td>0.501600</td>\n",
              "      <td>-3.083864</td>\n",
              "      <td>-1.060091</td>\n",
              "      <td>2.053600</td>\n",
              "      <td>-2.025008</td>\n",
              "      <td>2.399251</td>\n",
              "      <td>2.562317</td>\n",
              "      <td>0.694134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108911</th>\n",
              "      <td>79253</td>\n",
              "      <td>2.143652</td>\n",
              "      <td>-1.591184</td>\n",
              "      <td>-0.283598</td>\n",
              "      <td>-2.186552</td>\n",
              "      <td>-1.505779</td>\n",
              "      <td>0.876601</td>\n",
              "      <td>1.302617</td>\n",
              "      <td>-1.762244</td>\n",
              "      <td>-2.847601</td>\n",
              "      <td>0.108608</td>\n",
              "      <td>-1.466877</td>\n",
              "      <td>-2.967015</td>\n",
              "      <td>0.913299</td>\n",
              "      <td>-1.161778</td>\n",
              "      <td>2.752231</td>\n",
              "      <td>-5.542719</td>\n",
              "      <td>-0.901889</td>\n",
              "      <td>-2.699810</td>\n",
              "      <td>-2.309839</td>\n",
              "      <td>-1.778445</td>\n",
              "      <td>-1.089302</td>\n",
              "      <td>-0.462305</td>\n",
              "      <td>0.550925</td>\n",
              "      <td>-1.022714</td>\n",
              "      <td>-2.445610</td>\n",
              "      <td>-2.240845</td>\n",
              "      <td>-3.921844</td>\n",
              "      <td>-1.672699</td>\n",
              "      <td>-1.688246</td>\n",
              "      <td>1.376479</td>\n",
              "      <td>-0.749645</td>\n",
              "      <td>-2.281994</td>\n",
              "      <td>1.904197</td>\n",
              "      <td>-2.702273</td>\n",
              "      <td>-1.578054</td>\n",
              "      <td>-2.232083</td>\n",
              "      <td>-0.220451</td>\n",
              "      <td>-1.909157</td>\n",
              "      <td>-0.809935</td>\n",
              "      <td>-0.584604</td>\n",
              "      <td>-1.899768</td>\n",
              "      <td>-0.358462</td>\n",
              "      <td>-0.916753</td>\n",
              "      <td>4.082227</td>\n",
              "      <td>-1.557145</td>\n",
              "      <td>-2.668177</td>\n",
              "      <td>3.038557</td>\n",
              "      <td>0.201199</td>\n",
              "      <td>1.502191</td>\n",
              "      <td>0.758015</td>\n",
              "      <td>-2.545711</td>\n",
              "      <td>2.391682</td>\n",
              "      <td>-1.727723</td>\n",
              "      <td>-1.179197</td>\n",
              "      <td>0.812665</td>\n",
              "      <td>-2.840585</td>\n",
              "      <td>3.628976</td>\n",
              "      <td>1.470329</td>\n",
              "      <td>0.076995</td>\n",
              "      <td>0.981997</td>\n",
              "      <td>1.813580</td>\n",
              "      <td>-2.348472</td>\n",
              "      <td>0.866408</td>\n",
              "      <td>0.028376</td>\n",
              "      <td>-1.509214</td>\n",
              "      <td>-2.582299</td>\n",
              "      <td>-3.006606</td>\n",
              "      <td>-0.073780</td>\n",
              "      <td>-2.068264</td>\n",
              "      <td>1.675347</td>\n",
              "      <td>3.152147</td>\n",
              "      <td>0.895262</td>\n",
              "      <td>-1.856492</td>\n",
              "      <td>0.034511</td>\n",
              "      <td>-1.582400</td>\n",
              "      <td>-0.485126</td>\n",
              "      <td>-3.780087</td>\n",
              "      <td>-1.715265</td>\n",
              "      <td>-1.510518</td>\n",
              "      <td>1.879917</td>\n",
              "      <td>-2.084981</td>\n",
              "      <td>2.657861</td>\n",
              "      <td>-0.150674</td>\n",
              "      <td>-2.561351</td>\n",
              "      <td>-0.698951</td>\n",
              "      <td>-3.995625</td>\n",
              "      <td>-2.722597</td>\n",
              "      <td>-1.367890</td>\n",
              "      <td>-0.967366</td>\n",
              "      <td>0.293119</td>\n",
              "      <td>2.508693</td>\n",
              "      <td>2.485103</td>\n",
              "      <td>-3.782464</td>\n",
              "      <td>0.356524</td>\n",
              "      <td>0.936141</td>\n",
              "      <td>1.286547</td>\n",
              "      <td>-1.756850</td>\n",
              "      <td>0.721728</td>\n",
              "      <td>2.648691</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.812932</td>\n",
              "      <td>1.195455</td>\n",
              "      <td>1.647590</td>\n",
              "      <td>3.672622</td>\n",
              "      <td>-0.958210</td>\n",
              "      <td>0.426038</td>\n",
              "      <td>0.050856</td>\n",
              "      <td>0.294075</td>\n",
              "      <td>-1.827960</td>\n",
              "      <td>2.254042</td>\n",
              "      <td>0.032561</td>\n",
              "      <td>-1.122103</td>\n",
              "      <td>1.873654</td>\n",
              "      <td>0.354787</td>\n",
              "      <td>-0.085081</td>\n",
              "      <td>2.839442</td>\n",
              "      <td>-0.921125</td>\n",
              "      <td>3.449929</td>\n",
              "      <td>-1.993664</td>\n",
              "      <td>2.745172</td>\n",
              "      <td>0.927272</td>\n",
              "      <td>1.592893</td>\n",
              "      <td>3.730085</td>\n",
              "      <td>1.930457</td>\n",
              "      <td>0.233894</td>\n",
              "      <td>-1.841480</td>\n",
              "      <td>2.312968</td>\n",
              "      <td>-1.052112</td>\n",
              "      <td>-0.093647</td>\n",
              "      <td>-1.134430</td>\n",
              "      <td>0.012588</td>\n",
              "      <td>2.437869</td>\n",
              "      <td>0.776525</td>\n",
              "      <td>-1.485173</td>\n",
              "      <td>-0.380993</td>\n",
              "      <td>-0.018833</td>\n",
              "      <td>-0.966918</td>\n",
              "      <td>2.069371</td>\n",
              "      <td>3.280475</td>\n",
              "      <td>0.936332</td>\n",
              "      <td>1.224270</td>\n",
              "      <td>0.320835</td>\n",
              "      <td>-4.495546</td>\n",
              "      <td>-3.091730</td>\n",
              "      <td>-1.057453</td>\n",
              "      <td>-0.370681</td>\n",
              "      <td>-2.902287</td>\n",
              "      <td>0.605567</td>\n",
              "      <td>-2.249251</td>\n",
              "      <td>-0.685881</td>\n",
              "      <td>3.344256</td>\n",
              "      <td>1.003920</td>\n",
              "      <td>-3.433650</td>\n",
              "      <td>-2.621783</td>\n",
              "      <td>-0.372633</td>\n",
              "      <td>1.700348</td>\n",
              "      <td>-1.022541</td>\n",
              "      <td>1.666146</td>\n",
              "      <td>3.926513</td>\n",
              "      <td>1.593440</td>\n",
              "      <td>3.846366</td>\n",
              "      <td>-3.724903</td>\n",
              "      <td>0.214898</td>\n",
              "      <td>1.602764</td>\n",
              "      <td>3.950767</td>\n",
              "      <td>0.322759</td>\n",
              "      <td>1.632436</td>\n",
              "      <td>2.913508</td>\n",
              "      <td>3.255090</td>\n",
              "      <td>0.124804</td>\n",
              "      <td>-3.038602</td>\n",
              "      <td>1.028680</td>\n",
              "      <td>-0.372231</td>\n",
              "      <td>1.747909</td>\n",
              "      <td>2.259741</td>\n",
              "      <td>1.149775</td>\n",
              "      <td>-1.978496</td>\n",
              "      <td>1.221311</td>\n",
              "      <td>0.619848</td>\n",
              "      <td>-0.702118</td>\n",
              "      <td>-3.045399</td>\n",
              "      <td>-1.687716</td>\n",
              "      <td>-2.313181</td>\n",
              "      <td>3.121440</td>\n",
              "      <td>-0.982756</td>\n",
              "      <td>0.450534</td>\n",
              "      <td>0.706889</td>\n",
              "      <td>-2.271411</td>\n",
              "      <td>-1.142208</td>\n",
              "      <td>2.323842</td>\n",
              "      <td>-1.352005</td>\n",
              "      <td>-3.588055</td>\n",
              "      <td>2.803221</td>\n",
              "      <td>-2.160821</td>\n",
              "      <td>-1.153775</td>\n",
              "      <td>0.290783</td>\n",
              "      <td>1.518086</td>\n",
              "      <td>3.690181</td>\n",
              "      <td>5.391709</td>\n",
              "      <td>0.328971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108912</th>\n",
              "      <td>109138</td>\n",
              "      <td>0.890185</td>\n",
              "      <td>0.042669</td>\n",
              "      <td>2.842594</td>\n",
              "      <td>-4.322702</td>\n",
              "      <td>-1.107593</td>\n",
              "      <td>-0.033230</td>\n",
              "      <td>2.835225</td>\n",
              "      <td>-1.383299</td>\n",
              "      <td>-4.998042</td>\n",
              "      <td>-4.018473</td>\n",
              "      <td>-2.133858</td>\n",
              "      <td>-2.112752</td>\n",
              "      <td>5.674667</td>\n",
              "      <td>-1.652996</td>\n",
              "      <td>-1.637974</td>\n",
              "      <td>-0.246467</td>\n",
              "      <td>0.030858</td>\n",
              "      <td>-0.132066</td>\n",
              "      <td>1.642372</td>\n",
              "      <td>-2.437756</td>\n",
              "      <td>1.211184</td>\n",
              "      <td>-3.797614</td>\n",
              "      <td>2.716340</td>\n",
              "      <td>-1.846051</td>\n",
              "      <td>1.698319</td>\n",
              "      <td>0.771190</td>\n",
              "      <td>4.764339</td>\n",
              "      <td>2.598170</td>\n",
              "      <td>-1.430937</td>\n",
              "      <td>0.347440</td>\n",
              "      <td>0.907071</td>\n",
              "      <td>0.032756</td>\n",
              "      <td>-2.463522</td>\n",
              "      <td>-3.297136</td>\n",
              "      <td>2.716323</td>\n",
              "      <td>1.846584</td>\n",
              "      <td>-1.269165</td>\n",
              "      <td>-1.020392</td>\n",
              "      <td>2.497579</td>\n",
              "      <td>3.490116</td>\n",
              "      <td>-2.338284</td>\n",
              "      <td>3.174366</td>\n",
              "      <td>0.630770</td>\n",
              "      <td>2.929436</td>\n",
              "      <td>1.533297</td>\n",
              "      <td>-3.739271</td>\n",
              "      <td>2.125049</td>\n",
              "      <td>1.888600</td>\n",
              "      <td>1.267531</td>\n",
              "      <td>1.988833</td>\n",
              "      <td>-0.566414</td>\n",
              "      <td>-2.023407</td>\n",
              "      <td>-1.848678</td>\n",
              "      <td>-4.852431</td>\n",
              "      <td>2.402841</td>\n",
              "      <td>1.771225</td>\n",
              "      <td>-1.518038</td>\n",
              "      <td>-3.683095</td>\n",
              "      <td>1.860160</td>\n",
              "      <td>1.633143</td>\n",
              "      <td>0.195921</td>\n",
              "      <td>0.769962</td>\n",
              "      <td>-4.282871</td>\n",
              "      <td>-0.265067</td>\n",
              "      <td>1.666347</td>\n",
              "      <td>1.591646</td>\n",
              "      <td>1.230523</td>\n",
              "      <td>-0.527127</td>\n",
              "      <td>4.065799</td>\n",
              "      <td>3.390041</td>\n",
              "      <td>1.382567</td>\n",
              "      <td>0.413271</td>\n",
              "      <td>-1.279550</td>\n",
              "      <td>-2.449182</td>\n",
              "      <td>-1.438711</td>\n",
              "      <td>2.208716</td>\n",
              "      <td>2.639466</td>\n",
              "      <td>2.007577</td>\n",
              "      <td>-4.979889</td>\n",
              "      <td>-0.850287</td>\n",
              "      <td>-0.397183</td>\n",
              "      <td>-2.782560</td>\n",
              "      <td>-0.545637</td>\n",
              "      <td>3.159307</td>\n",
              "      <td>-0.078705</td>\n",
              "      <td>2.974325</td>\n",
              "      <td>1.127572</td>\n",
              "      <td>-0.806367</td>\n",
              "      <td>-1.360380</td>\n",
              "      <td>-5.414014</td>\n",
              "      <td>-0.427686</td>\n",
              "      <td>-1.091666</td>\n",
              "      <td>4.165022</td>\n",
              "      <td>3.997271</td>\n",
              "      <td>3.885442</td>\n",
              "      <td>1.963333</td>\n",
              "      <td>-3.179239</td>\n",
              "      <td>1.035787</td>\n",
              "      <td>-2.396387</td>\n",
              "      <td>...</td>\n",
              "      <td>0.789993</td>\n",
              "      <td>-0.356636</td>\n",
              "      <td>-1.215572</td>\n",
              "      <td>1.115422</td>\n",
              "      <td>-1.715971</td>\n",
              "      <td>2.240216</td>\n",
              "      <td>-1.055415</td>\n",
              "      <td>0.029975</td>\n",
              "      <td>-2.228453</td>\n",
              "      <td>-1.050905</td>\n",
              "      <td>1.246343</td>\n",
              "      <td>-2.759985</td>\n",
              "      <td>3.012103</td>\n",
              "      <td>2.739157</td>\n",
              "      <td>-2.998512</td>\n",
              "      <td>0.469200</td>\n",
              "      <td>4.019664</td>\n",
              "      <td>-0.022314</td>\n",
              "      <td>-1.993336</td>\n",
              "      <td>-0.990848</td>\n",
              "      <td>1.582859</td>\n",
              "      <td>-3.978954</td>\n",
              "      <td>1.577788</td>\n",
              "      <td>-3.159555</td>\n",
              "      <td>1.886579</td>\n",
              "      <td>-2.230175</td>\n",
              "      <td>2.505482</td>\n",
              "      <td>1.897286</td>\n",
              "      <td>-2.838402</td>\n",
              "      <td>-2.721122</td>\n",
              "      <td>0.833790</td>\n",
              "      <td>2.155062</td>\n",
              "      <td>0.098216</td>\n",
              "      <td>0.083581</td>\n",
              "      <td>0.543047</td>\n",
              "      <td>1.406939</td>\n",
              "      <td>-0.366133</td>\n",
              "      <td>1.074942</td>\n",
              "      <td>-3.693939</td>\n",
              "      <td>-0.185423</td>\n",
              "      <td>0.528465</td>\n",
              "      <td>0.953396</td>\n",
              "      <td>0.305434</td>\n",
              "      <td>-1.719791</td>\n",
              "      <td>-2.661647</td>\n",
              "      <td>-0.332588</td>\n",
              "      <td>0.278220</td>\n",
              "      <td>1.315297</td>\n",
              "      <td>3.398311</td>\n",
              "      <td>-3.397320</td>\n",
              "      <td>0.798742</td>\n",
              "      <td>-2.811525</td>\n",
              "      <td>-1.227957</td>\n",
              "      <td>1.855185</td>\n",
              "      <td>1.397263</td>\n",
              "      <td>-1.272777</td>\n",
              "      <td>-0.695033</td>\n",
              "      <td>-2.074005</td>\n",
              "      <td>-2.157744</td>\n",
              "      <td>-0.613893</td>\n",
              "      <td>3.044159</td>\n",
              "      <td>-1.802477</td>\n",
              "      <td>0.890905</td>\n",
              "      <td>1.535566</td>\n",
              "      <td>1.058227</td>\n",
              "      <td>0.463234</td>\n",
              "      <td>0.884959</td>\n",
              "      <td>0.518636</td>\n",
              "      <td>1.126252</td>\n",
              "      <td>-0.570538</td>\n",
              "      <td>1.777023</td>\n",
              "      <td>0.157465</td>\n",
              "      <td>-2.856526</td>\n",
              "      <td>3.190122</td>\n",
              "      <td>-0.744726</td>\n",
              "      <td>2.207457</td>\n",
              "      <td>1.761704</td>\n",
              "      <td>2.780637</td>\n",
              "      <td>2.130281</td>\n",
              "      <td>-1.689670</td>\n",
              "      <td>-1.385311</td>\n",
              "      <td>-1.727320</td>\n",
              "      <td>3.064378</td>\n",
              "      <td>-0.886842</td>\n",
              "      <td>5.473865</td>\n",
              "      <td>-0.998189</td>\n",
              "      <td>0.228917</td>\n",
              "      <td>-1.734863</td>\n",
              "      <td>-2.065603</td>\n",
              "      <td>0.206962</td>\n",
              "      <td>0.416093</td>\n",
              "      <td>-0.917160</td>\n",
              "      <td>-0.028134</td>\n",
              "      <td>2.624365</td>\n",
              "      <td>1.574156</td>\n",
              "      <td>-0.014772</td>\n",
              "      <td>2.250575</td>\n",
              "      <td>2.005705</td>\n",
              "      <td>0.309760</td>\n",
              "      <td>0.913974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108913</th>\n",
              "      <td>62184</td>\n",
              "      <td>1.458928</td>\n",
              "      <td>-0.638677</td>\n",
              "      <td>-0.957509</td>\n",
              "      <td>-2.936515</td>\n",
              "      <td>-0.897658</td>\n",
              "      <td>-0.992379</td>\n",
              "      <td>0.574731</td>\n",
              "      <td>0.027216</td>\n",
              "      <td>-3.514133</td>\n",
              "      <td>-1.925192</td>\n",
              "      <td>1.451574</td>\n",
              "      <td>0.428331</td>\n",
              "      <td>2.025814</td>\n",
              "      <td>0.447675</td>\n",
              "      <td>-0.660619</td>\n",
              "      <td>-0.872637</td>\n",
              "      <td>-2.048203</td>\n",
              "      <td>0.468547</td>\n",
              "      <td>-2.090118</td>\n",
              "      <td>-2.782267</td>\n",
              "      <td>-4.756662</td>\n",
              "      <td>-0.434126</td>\n",
              "      <td>-2.144065</td>\n",
              "      <td>0.290367</td>\n",
              "      <td>-2.406909</td>\n",
              "      <td>2.708581</td>\n",
              "      <td>2.706972</td>\n",
              "      <td>-0.381109</td>\n",
              "      <td>2.382838</td>\n",
              "      <td>0.911503</td>\n",
              "      <td>0.569131</td>\n",
              "      <td>-2.612042</td>\n",
              "      <td>-1.612692</td>\n",
              "      <td>-2.111382</td>\n",
              "      <td>2.068428</td>\n",
              "      <td>-1.662065</td>\n",
              "      <td>1.491509</td>\n",
              "      <td>-2.189797</td>\n",
              "      <td>-1.101642</td>\n",
              "      <td>0.646667</td>\n",
              "      <td>-1.743810</td>\n",
              "      <td>0.249561</td>\n",
              "      <td>2.283173</td>\n",
              "      <td>-0.826433</td>\n",
              "      <td>1.260813</td>\n",
              "      <td>-4.058594</td>\n",
              "      <td>-0.620825</td>\n",
              "      <td>-0.670673</td>\n",
              "      <td>-1.037455</td>\n",
              "      <td>0.539870</td>\n",
              "      <td>-1.764350</td>\n",
              "      <td>2.234930</td>\n",
              "      <td>0.302537</td>\n",
              "      <td>-2.878370</td>\n",
              "      <td>4.449934</td>\n",
              "      <td>-2.123760</td>\n",
              "      <td>-1.768058</td>\n",
              "      <td>-0.519971</td>\n",
              "      <td>1.830129</td>\n",
              "      <td>1.443018</td>\n",
              "      <td>1.933492</td>\n",
              "      <td>-2.212900</td>\n",
              "      <td>-0.785136</td>\n",
              "      <td>-1.217968</td>\n",
              "      <td>1.596189</td>\n",
              "      <td>0.100395</td>\n",
              "      <td>2.106161</td>\n",
              "      <td>2.176171</td>\n",
              "      <td>-0.866876</td>\n",
              "      <td>1.707775</td>\n",
              "      <td>0.470437</td>\n",
              "      <td>2.538215</td>\n",
              "      <td>0.526563</td>\n",
              "      <td>0.875623</td>\n",
              "      <td>-1.741016</td>\n",
              "      <td>0.810478</td>\n",
              "      <td>0.837013</td>\n",
              "      <td>1.340501</td>\n",
              "      <td>-2.318823</td>\n",
              "      <td>0.065445</td>\n",
              "      <td>-1.924602</td>\n",
              "      <td>1.666222</td>\n",
              "      <td>1.033114</td>\n",
              "      <td>0.100195</td>\n",
              "      <td>1.314486</td>\n",
              "      <td>2.094897</td>\n",
              "      <td>-1.781481</td>\n",
              "      <td>0.079426</td>\n",
              "      <td>-1.249301</td>\n",
              "      <td>-1.422049</td>\n",
              "      <td>1.426089</td>\n",
              "      <td>1.749222</td>\n",
              "      <td>-1.884570</td>\n",
              "      <td>-0.326517</td>\n",
              "      <td>-2.000065</td>\n",
              "      <td>1.287592</td>\n",
              "      <td>-0.672378</td>\n",
              "      <td>-1.637091</td>\n",
              "      <td>-2.586577</td>\n",
              "      <td>...</td>\n",
              "      <td>2.912434</td>\n",
              "      <td>0.792292</td>\n",
              "      <td>-1.331219</td>\n",
              "      <td>3.966785</td>\n",
              "      <td>-3.149431</td>\n",
              "      <td>2.086974</td>\n",
              "      <td>4.014629</td>\n",
              "      <td>-2.470242</td>\n",
              "      <td>-0.326165</td>\n",
              "      <td>1.048685</td>\n",
              "      <td>-2.114103</td>\n",
              "      <td>-0.884933</td>\n",
              "      <td>2.947801</td>\n",
              "      <td>0.514193</td>\n",
              "      <td>-3.516667</td>\n",
              "      <td>-1.065668</td>\n",
              "      <td>0.333623</td>\n",
              "      <td>0.570760</td>\n",
              "      <td>1.542099</td>\n",
              "      <td>1.036982</td>\n",
              "      <td>0.289919</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>1.880710</td>\n",
              "      <td>3.906974</td>\n",
              "      <td>-2.134036</td>\n",
              "      <td>-1.432456</td>\n",
              "      <td>6.798509</td>\n",
              "      <td>-3.465953</td>\n",
              "      <td>-2.104497</td>\n",
              "      <td>-1.058780</td>\n",
              "      <td>-0.118798</td>\n",
              "      <td>0.868572</td>\n",
              "      <td>-0.358550</td>\n",
              "      <td>-1.196152</td>\n",
              "      <td>-3.440636</td>\n",
              "      <td>1.066864</td>\n",
              "      <td>-3.714600</td>\n",
              "      <td>-1.304127</td>\n",
              "      <td>-3.347711</td>\n",
              "      <td>2.633687</td>\n",
              "      <td>-1.828556</td>\n",
              "      <td>-0.990196</td>\n",
              "      <td>-0.788899</td>\n",
              "      <td>-3.984093</td>\n",
              "      <td>1.561347</td>\n",
              "      <td>-0.312444</td>\n",
              "      <td>-0.807412</td>\n",
              "      <td>0.410707</td>\n",
              "      <td>1.738322</td>\n",
              "      <td>-1.268438</td>\n",
              "      <td>1.448271</td>\n",
              "      <td>2.088164</td>\n",
              "      <td>-1.352053</td>\n",
              "      <td>0.129204</td>\n",
              "      <td>0.875063</td>\n",
              "      <td>-1.058863</td>\n",
              "      <td>-3.811529</td>\n",
              "      <td>-2.819438</td>\n",
              "      <td>0.168019</td>\n",
              "      <td>0.799341</td>\n",
              "      <td>2.347459</td>\n",
              "      <td>-1.152050</td>\n",
              "      <td>-0.073379</td>\n",
              "      <td>0.584912</td>\n",
              "      <td>2.391302</td>\n",
              "      <td>-0.847047</td>\n",
              "      <td>-0.198604</td>\n",
              "      <td>1.605899</td>\n",
              "      <td>0.718099</td>\n",
              "      <td>-0.307227</td>\n",
              "      <td>1.443186</td>\n",
              "      <td>1.116030</td>\n",
              "      <td>-0.222231</td>\n",
              "      <td>4.325758</td>\n",
              "      <td>0.777393</td>\n",
              "      <td>1.724637</td>\n",
              "      <td>-0.743674</td>\n",
              "      <td>2.502644</td>\n",
              "      <td>2.662223</td>\n",
              "      <td>0.716697</td>\n",
              "      <td>-4.454898</td>\n",
              "      <td>-1.274869</td>\n",
              "      <td>-0.830480</td>\n",
              "      <td>0.718139</td>\n",
              "      <td>0.722961</td>\n",
              "      <td>-0.474453</td>\n",
              "      <td>2.400864</td>\n",
              "      <td>0.907951</td>\n",
              "      <td>0.312939</td>\n",
              "      <td>0.984343</td>\n",
              "      <td>1.468603</td>\n",
              "      <td>-2.667665</td>\n",
              "      <td>-0.988566</td>\n",
              "      <td>1.012626</td>\n",
              "      <td>1.046013</td>\n",
              "      <td>1.670171</td>\n",
              "      <td>0.804473</td>\n",
              "      <td>2.821836</td>\n",
              "      <td>3.285690</td>\n",
              "      <td>2.215272</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108914</th>\n",
              "      <td>42748</td>\n",
              "      <td>3.383520</td>\n",
              "      <td>-1.669863</td>\n",
              "      <td>1.264212</td>\n",
              "      <td>-2.128029</td>\n",
              "      <td>-2.129893</td>\n",
              "      <td>2.562061</td>\n",
              "      <td>-1.778324</td>\n",
              "      <td>-0.861360</td>\n",
              "      <td>-5.312111</td>\n",
              "      <td>-1.194243</td>\n",
              "      <td>-2.375578</td>\n",
              "      <td>0.247040</td>\n",
              "      <td>2.003000</td>\n",
              "      <td>-0.072495</td>\n",
              "      <td>3.190066</td>\n",
              "      <td>1.868549</td>\n",
              "      <td>-0.431989</td>\n",
              "      <td>-3.087507</td>\n",
              "      <td>0.349909</td>\n",
              "      <td>-2.412557</td>\n",
              "      <td>-0.259443</td>\n",
              "      <td>0.182825</td>\n",
              "      <td>1.727671</td>\n",
              "      <td>-3.584537</td>\n",
              "      <td>-0.412435</td>\n",
              "      <td>-1.705584</td>\n",
              "      <td>1.012528</td>\n",
              "      <td>0.901008</td>\n",
              "      <td>-2.896719</td>\n",
              "      <td>2.248031</td>\n",
              "      <td>0.993419</td>\n",
              "      <td>-2.661560</td>\n",
              "      <td>2.592874</td>\n",
              "      <td>2.524708</td>\n",
              "      <td>3.169341</td>\n",
              "      <td>2.671678</td>\n",
              "      <td>2.032502</td>\n",
              "      <td>-5.340019</td>\n",
              "      <td>2.253168</td>\n",
              "      <td>3.381877</td>\n",
              "      <td>-2.175173</td>\n",
              "      <td>-0.799576</td>\n",
              "      <td>-1.355430</td>\n",
              "      <td>-0.002634</td>\n",
              "      <td>0.259449</td>\n",
              "      <td>-5.751658</td>\n",
              "      <td>-0.684958</td>\n",
              "      <td>-0.275028</td>\n",
              "      <td>1.900147</td>\n",
              "      <td>-0.214058</td>\n",
              "      <td>1.535369</td>\n",
              "      <td>1.807370</td>\n",
              "      <td>1.824506</td>\n",
              "      <td>-4.483827</td>\n",
              "      <td>0.821737</td>\n",
              "      <td>-4.221015</td>\n",
              "      <td>0.975932</td>\n",
              "      <td>-1.052074</td>\n",
              "      <td>-0.615207</td>\n",
              "      <td>1.151293</td>\n",
              "      <td>0.683756</td>\n",
              "      <td>-2.574885</td>\n",
              "      <td>1.859686</td>\n",
              "      <td>-0.413490</td>\n",
              "      <td>0.406037</td>\n",
              "      <td>3.885471</td>\n",
              "      <td>0.946777</td>\n",
              "      <td>0.517306</td>\n",
              "      <td>-1.033148</td>\n",
              "      <td>2.304249</td>\n",
              "      <td>-1.712923</td>\n",
              "      <td>1.500055</td>\n",
              "      <td>0.502091</td>\n",
              "      <td>-1.865179</td>\n",
              "      <td>-2.211487</td>\n",
              "      <td>1.712813</td>\n",
              "      <td>0.581897</td>\n",
              "      <td>2.419595</td>\n",
              "      <td>-1.784679</td>\n",
              "      <td>2.797492</td>\n",
              "      <td>-1.306180</td>\n",
              "      <td>0.915710</td>\n",
              "      <td>0.903072</td>\n",
              "      <td>1.685650</td>\n",
              "      <td>1.769632</td>\n",
              "      <td>-1.761199</td>\n",
              "      <td>0.806649</td>\n",
              "      <td>-0.470639</td>\n",
              "      <td>-2.123776</td>\n",
              "      <td>-0.965421</td>\n",
              "      <td>0.984079</td>\n",
              "      <td>3.021959</td>\n",
              "      <td>-0.971507</td>\n",
              "      <td>1.532547</td>\n",
              "      <td>-0.297451</td>\n",
              "      <td>-1.315823</td>\n",
              "      <td>-0.910824</td>\n",
              "      <td>-2.977850</td>\n",
              "      <td>0.276787</td>\n",
              "      <td>...</td>\n",
              "      <td>-3.671371</td>\n",
              "      <td>2.919145</td>\n",
              "      <td>-0.354430</td>\n",
              "      <td>2.155198</td>\n",
              "      <td>1.272519</td>\n",
              "      <td>-0.692142</td>\n",
              "      <td>0.059904</td>\n",
              "      <td>-0.556941</td>\n",
              "      <td>0.056640</td>\n",
              "      <td>0.154125</td>\n",
              "      <td>2.744786</td>\n",
              "      <td>-2.739786</td>\n",
              "      <td>1.512662</td>\n",
              "      <td>1.191475</td>\n",
              "      <td>1.334174</td>\n",
              "      <td>-1.740190</td>\n",
              "      <td>1.735739</td>\n",
              "      <td>0.162167</td>\n",
              "      <td>-0.790408</td>\n",
              "      <td>-2.942657</td>\n",
              "      <td>-0.712131</td>\n",
              "      <td>-0.983628</td>\n",
              "      <td>-0.669094</td>\n",
              "      <td>0.595622</td>\n",
              "      <td>-1.851003</td>\n",
              "      <td>-2.508376</td>\n",
              "      <td>0.527464</td>\n",
              "      <td>-2.075131</td>\n",
              "      <td>-0.956641</td>\n",
              "      <td>-0.264901</td>\n",
              "      <td>1.204805</td>\n",
              "      <td>1.005664</td>\n",
              "      <td>2.140113</td>\n",
              "      <td>-3.168196</td>\n",
              "      <td>0.915163</td>\n",
              "      <td>1.335524</td>\n",
              "      <td>-0.442423</td>\n",
              "      <td>-3.238333</td>\n",
              "      <td>-3.479846</td>\n",
              "      <td>-0.143950</td>\n",
              "      <td>1.371312</td>\n",
              "      <td>-2.025407</td>\n",
              "      <td>0.626729</td>\n",
              "      <td>-1.739293</td>\n",
              "      <td>1.402521</td>\n",
              "      <td>-0.372969</td>\n",
              "      <td>-0.338624</td>\n",
              "      <td>1.894481</td>\n",
              "      <td>1.619781</td>\n",
              "      <td>-2.315445</td>\n",
              "      <td>-0.885915</td>\n",
              "      <td>1.725065</td>\n",
              "      <td>-0.458364</td>\n",
              "      <td>-0.113217</td>\n",
              "      <td>1.683704</td>\n",
              "      <td>-1.078024</td>\n",
              "      <td>-2.024943</td>\n",
              "      <td>-0.173665</td>\n",
              "      <td>-0.262584</td>\n",
              "      <td>-2.009855</td>\n",
              "      <td>1.953726</td>\n",
              "      <td>2.464684</td>\n",
              "      <td>1.866723</td>\n",
              "      <td>3.098136</td>\n",
              "      <td>1.429997</td>\n",
              "      <td>1.994586</td>\n",
              "      <td>-0.235225</td>\n",
              "      <td>-2.027347</td>\n",
              "      <td>2.489434</td>\n",
              "      <td>-0.328639</td>\n",
              "      <td>0.503968</td>\n",
              "      <td>1.511740</td>\n",
              "      <td>1.208020</td>\n",
              "      <td>1.384978</td>\n",
              "      <td>3.671376</td>\n",
              "      <td>3.584236</td>\n",
              "      <td>0.685376</td>\n",
              "      <td>1.440640</td>\n",
              "      <td>-0.373653</td>\n",
              "      <td>2.983807</td>\n",
              "      <td>-2.187109</td>\n",
              "      <td>-1.982580</td>\n",
              "      <td>0.927802</td>\n",
              "      <td>1.391323</td>\n",
              "      <td>2.578521</td>\n",
              "      <td>-0.332423</td>\n",
              "      <td>0.798493</td>\n",
              "      <td>-1.699570</td>\n",
              "      <td>-0.984258</td>\n",
              "      <td>0.834168</td>\n",
              "      <td>-1.577673</td>\n",
              "      <td>-1.983800</td>\n",
              "      <td>-0.830833</td>\n",
              "      <td>-2.517840</td>\n",
              "      <td>-0.387712</td>\n",
              "      <td>0.237070</td>\n",
              "      <td>-2.524445</td>\n",
              "      <td>1.908586</td>\n",
              "      <td>1.887787</td>\n",
              "      <td>1.021628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>108915</th>\n",
              "      <td>61098</td>\n",
              "      <td>2.447854</td>\n",
              "      <td>-0.469942</td>\n",
              "      <td>1.873896</td>\n",
              "      <td>-4.149315</td>\n",
              "      <td>-3.618531</td>\n",
              "      <td>-0.558433</td>\n",
              "      <td>0.162609</td>\n",
              "      <td>1.975269</td>\n",
              "      <td>-5.732625</td>\n",
              "      <td>-4.815576</td>\n",
              "      <td>1.458589</td>\n",
              "      <td>-0.157395</td>\n",
              "      <td>4.123180</td>\n",
              "      <td>0.821072</td>\n",
              "      <td>0.013682</td>\n",
              "      <td>1.206975</td>\n",
              "      <td>0.453557</td>\n",
              "      <td>-2.513904</td>\n",
              "      <td>-1.407518</td>\n",
              "      <td>-1.531497</td>\n",
              "      <td>-5.618808</td>\n",
              "      <td>-0.943977</td>\n",
              "      <td>-1.017109</td>\n",
              "      <td>-2.291309</td>\n",
              "      <td>-0.440314</td>\n",
              "      <td>0.288046</td>\n",
              "      <td>2.175383</td>\n",
              "      <td>1.147492</td>\n",
              "      <td>1.264497</td>\n",
              "      <td>1.151156</td>\n",
              "      <td>-1.025481</td>\n",
              "      <td>-3.679017</td>\n",
              "      <td>-2.111122</td>\n",
              "      <td>-3.165144</td>\n",
              "      <td>2.715713</td>\n",
              "      <td>-4.898654</td>\n",
              "      <td>2.751275</td>\n",
              "      <td>-4.703845</td>\n",
              "      <td>1.822637</td>\n",
              "      <td>-2.490871</td>\n",
              "      <td>1.256222</td>\n",
              "      <td>-0.708914</td>\n",
              "      <td>-0.706023</td>\n",
              "      <td>0.562626</td>\n",
              "      <td>-2.782655</td>\n",
              "      <td>-4.306206</td>\n",
              "      <td>-2.185961</td>\n",
              "      <td>2.108405</td>\n",
              "      <td>4.950135</td>\n",
              "      <td>-3.312389</td>\n",
              "      <td>-1.126098</td>\n",
              "      <td>5.729527</td>\n",
              "      <td>0.643302</td>\n",
              "      <td>-4.457605</td>\n",
              "      <td>2.796445</td>\n",
              "      <td>-1.133119</td>\n",
              "      <td>0.695956</td>\n",
              "      <td>2.956127</td>\n",
              "      <td>-0.633302</td>\n",
              "      <td>-1.519831</td>\n",
              "      <td>3.562393</td>\n",
              "      <td>-4.280138</td>\n",
              "      <td>-5.255344</td>\n",
              "      <td>2.863302</td>\n",
              "      <td>0.061411</td>\n",
              "      <td>-1.341386</td>\n",
              "      <td>-1.337337</td>\n",
              "      <td>1.703181</td>\n",
              "      <td>-2.006601</td>\n",
              "      <td>4.201882</td>\n",
              "      <td>1.242289</td>\n",
              "      <td>0.272231</td>\n",
              "      <td>1.765947</td>\n",
              "      <td>-0.726732</td>\n",
              "      <td>-2.859245</td>\n",
              "      <td>3.293633</td>\n",
              "      <td>-3.036863</td>\n",
              "      <td>-0.779286</td>\n",
              "      <td>-3.258511</td>\n",
              "      <td>2.658521</td>\n",
              "      <td>3.054142</td>\n",
              "      <td>6.156407</td>\n",
              "      <td>0.471332</td>\n",
              "      <td>1.278734</td>\n",
              "      <td>-2.920300</td>\n",
              "      <td>0.480172</td>\n",
              "      <td>-4.350938</td>\n",
              "      <td>-2.538726</td>\n",
              "      <td>-0.122257</td>\n",
              "      <td>1.396373</td>\n",
              "      <td>-0.179927</td>\n",
              "      <td>1.426889</td>\n",
              "      <td>1.606361</td>\n",
              "      <td>1.107465</td>\n",
              "      <td>-1.325785</td>\n",
              "      <td>-1.302385</td>\n",
              "      <td>0.823214</td>\n",
              "      <td>-2.692455</td>\n",
              "      <td>-1.572708</td>\n",
              "      <td>...</td>\n",
              "      <td>-1.435513</td>\n",
              "      <td>-0.460495</td>\n",
              "      <td>2.049898</td>\n",
              "      <td>1.064757</td>\n",
              "      <td>-0.417074</td>\n",
              "      <td>0.133132</td>\n",
              "      <td>2.370134</td>\n",
              "      <td>-1.111871</td>\n",
              "      <td>-0.384299</td>\n",
              "      <td>0.123534</td>\n",
              "      <td>2.619230</td>\n",
              "      <td>-1.402109</td>\n",
              "      <td>-0.863178</td>\n",
              "      <td>1.177824</td>\n",
              "      <td>-1.333709</td>\n",
              "      <td>0.857954</td>\n",
              "      <td>0.409733</td>\n",
              "      <td>1.254296</td>\n",
              "      <td>-0.843010</td>\n",
              "      <td>-0.652145</td>\n",
              "      <td>-4.701323</td>\n",
              "      <td>-0.342422</td>\n",
              "      <td>2.515860</td>\n",
              "      <td>0.744027</td>\n",
              "      <td>-0.759526</td>\n",
              "      <td>-1.492734</td>\n",
              "      <td>-0.776376</td>\n",
              "      <td>0.226138</td>\n",
              "      <td>-1.131623</td>\n",
              "      <td>0.183000</td>\n",
              "      <td>-0.736877</td>\n",
              "      <td>-2.060887</td>\n",
              "      <td>-0.343423</td>\n",
              "      <td>-2.522264</td>\n",
              "      <td>-2.744899</td>\n",
              "      <td>-0.599565</td>\n",
              "      <td>-1.929651</td>\n",
              "      <td>0.655150</td>\n",
              "      <td>0.459797</td>\n",
              "      <td>1.922286</td>\n",
              "      <td>1.685348</td>\n",
              "      <td>-0.147716</td>\n",
              "      <td>1.517651</td>\n",
              "      <td>-0.636391</td>\n",
              "      <td>0.629845</td>\n",
              "      <td>-1.399463</td>\n",
              "      <td>-1.391820</td>\n",
              "      <td>1.030652</td>\n",
              "      <td>-0.024878</td>\n",
              "      <td>-2.390552</td>\n",
              "      <td>1.004328</td>\n",
              "      <td>2.008048</td>\n",
              "      <td>0.340123</td>\n",
              "      <td>-1.387081</td>\n",
              "      <td>-2.523773</td>\n",
              "      <td>-1.018539</td>\n",
              "      <td>-0.198985</td>\n",
              "      <td>-2.278321</td>\n",
              "      <td>0.855287</td>\n",
              "      <td>1.977260</td>\n",
              "      <td>3.336885</td>\n",
              "      <td>-0.026206</td>\n",
              "      <td>2.628304</td>\n",
              "      <td>-0.034228</td>\n",
              "      <td>-1.857510</td>\n",
              "      <td>0.299361</td>\n",
              "      <td>1.335146</td>\n",
              "      <td>-1.908567</td>\n",
              "      <td>-0.318048</td>\n",
              "      <td>1.573966</td>\n",
              "      <td>-2.097476</td>\n",
              "      <td>0.901986</td>\n",
              "      <td>-0.142120</td>\n",
              "      <td>2.523870</td>\n",
              "      <td>0.855082</td>\n",
              "      <td>0.633110</td>\n",
              "      <td>-0.284672</td>\n",
              "      <td>-0.065614</td>\n",
              "      <td>-1.057013</td>\n",
              "      <td>-0.558878</td>\n",
              "      <td>-2.375062</td>\n",
              "      <td>-1.258834</td>\n",
              "      <td>3.204423</td>\n",
              "      <td>0.256820</td>\n",
              "      <td>-1.055324</td>\n",
              "      <td>-2.972080</td>\n",
              "      <td>2.656508</td>\n",
              "      <td>-0.887010</td>\n",
              "      <td>2.091410</td>\n",
              "      <td>0.203728</td>\n",
              "      <td>3.445529</td>\n",
              "      <td>-3.894981</td>\n",
              "      <td>0.318239</td>\n",
              "      <td>-3.956578</td>\n",
              "      <td>0.672438</td>\n",
              "      <td>2.741400</td>\n",
              "      <td>1.146402</td>\n",
              "      <td>3.278049</td>\n",
              "      <td>3.225166</td>\n",
              "      <td>-1.092669</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>108916 rows × 257 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        item_id  txt_embed_1  txt_embed_2  txt_embed_3  txt_embed_4  \\\n",
              "0         42844     4.514945    -2.383720     0.500414     0.407068   \n",
              "1         67898    -2.002905    -0.929881     0.790017    -1.380895   \n",
              "2         66446     4.221673    -1.497139     1.133570    -2.745607   \n",
              "3         63651     2.657970    -0.941863     1.121529    -5.109496   \n",
              "4         46824     3.192195    -1.936676     1.199909    -2.562152   \n",
              "...         ...          ...          ...          ...          ...   \n",
              "108911    79253     2.143652    -1.591184    -0.283598    -2.186552   \n",
              "108912   109138     0.890185     0.042669     2.842594    -4.322702   \n",
              "108913    62184     1.458928    -0.638677    -0.957509    -2.936515   \n",
              "108914    42748     3.383520    -1.669863     1.264212    -2.128029   \n",
              "108915    61098     2.447854    -0.469942     1.873896    -4.149315   \n",
              "\n",
              "        txt_embed_5  txt_embed_6  txt_embed_7  txt_embed_8  txt_embed_9  \\\n",
              "0         -1.995229     0.109078    -0.691775     2.227460    -6.437974   \n",
              "1         -0.510463    -1.810096     1.363962     0.497401    -4.038903   \n",
              "2         -4.197045    -0.542392    -1.396256     1.838419    -6.066454   \n",
              "3         -0.279041    -0.351968    -1.086983     2.703607    -6.494977   \n",
              "4         -2.573456     0.575841    -2.358653     1.620844    -4.302936   \n",
              "...             ...          ...          ...          ...          ...   \n",
              "108911    -1.505779     0.876601     1.302617    -1.762244    -2.847601   \n",
              "108912    -1.107593    -0.033230     2.835225    -1.383299    -4.998042   \n",
              "108913    -0.897658    -0.992379     0.574731     0.027216    -3.514133   \n",
              "108914    -2.129893     2.562061    -1.778324    -0.861360    -5.312111   \n",
              "108915    -3.618531    -0.558433     0.162609     1.975269    -5.732625   \n",
              "\n",
              "        txt_embed_10  txt_embed_11  txt_embed_12  txt_embed_13  txt_embed_14  \\\n",
              "0          -0.824897     -0.138724     -0.379329      0.627660      0.418377   \n",
              "1          -3.057872      0.758558     -1.012155      2.816802      2.086895   \n",
              "2          -2.191799      0.752804      0.868623      6.187662      1.725745   \n",
              "3          -0.746769     -0.068571     -3.894670      4.937046     -1.863204   \n",
              "4          -0.487575      0.020896     -0.763327      4.341694      0.698798   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.108608     -1.466877     -2.967015      0.913299     -1.161778   \n",
              "108912     -4.018473     -2.133858     -2.112752      5.674667     -1.652996   \n",
              "108913     -1.925192      1.451574      0.428331      2.025814      0.447675   \n",
              "108914     -1.194243     -2.375578      0.247040      2.003000     -0.072495   \n",
              "108915     -4.815576      1.458589     -0.157395      4.123180      0.821072   \n",
              "\n",
              "        txt_embed_15  txt_embed_16  txt_embed_17  txt_embed_18  txt_embed_19  \\\n",
              "0           4.441218      0.299819      0.578557     -4.699289     -0.394740   \n",
              "1          -1.464331     -1.840496     -2.089971     -1.566872      1.545390   \n",
              "2           2.887859     -1.486026     -0.182256     -3.710785      1.512866   \n",
              "3          -1.955068      1.900193      1.743841     -6.024790      1.460414   \n",
              "4           3.334580      0.607683     -0.718644     -2.730188      0.193828   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      2.752231     -5.542719     -0.901889     -2.699810     -2.309839   \n",
              "108912     -1.637974     -0.246467      0.030858     -0.132066      1.642372   \n",
              "108913     -0.660619     -0.872637     -2.048203      0.468547     -2.090118   \n",
              "108914      3.190066      1.868549     -0.431989     -3.087507      0.349909   \n",
              "108915      0.013682      1.206975      0.453557     -2.513904     -1.407518   \n",
              "\n",
              "        txt_embed_20  txt_embed_21  txt_embed_22  txt_embed_23  txt_embed_24  \\\n",
              "0          -2.391651      0.370532     -1.355466     -1.074178     -2.321640   \n",
              "1           1.284341     -2.270262      0.780126      1.615594     -0.546058   \n",
              "2          -0.636434      0.288435     -3.369717     -0.265998     -3.549319   \n",
              "3          -2.206104     -1.997572     -3.414536     -0.178739      0.987313   \n",
              "4          -1.706196     -0.468727     -2.281904     -1.837274     -2.849140   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.778445     -1.089302     -0.462305      0.550925     -1.022714   \n",
              "108912     -2.437756      1.211184     -3.797614      2.716340     -1.846051   \n",
              "108913     -2.782267     -4.756662     -0.434126     -2.144065      0.290367   \n",
              "108914     -2.412557     -0.259443      0.182825      1.727671     -3.584537   \n",
              "108915     -1.531497     -5.618808     -0.943977     -1.017109     -2.291309   \n",
              "\n",
              "        txt_embed_25  txt_embed_26  txt_embed_27  txt_embed_28  txt_embed_29  \\\n",
              "0          -0.332456      0.123886     -2.439156     -0.345599     -3.304347   \n",
              "1           1.370750     -1.178124      1.346842      0.442434     -1.498540   \n",
              "2           3.375338     -0.901461     -1.558371      1.695343     -4.450464   \n",
              "3           1.255347     -1.187136      2.070518      2.191021     -2.936702   \n",
              "4           0.195873     -0.459765     -0.768752      1.033489     -2.490896   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -2.445610     -2.240845     -3.921844     -1.672699     -1.688246   \n",
              "108912      1.698319      0.771190      4.764339      2.598170     -1.430937   \n",
              "108913     -2.406909      2.708581      2.706972     -0.381109      2.382838   \n",
              "108914     -0.412435     -1.705584      1.012528      0.901008     -2.896719   \n",
              "108915     -0.440314      0.288046      2.175383      1.147492      1.264497   \n",
              "\n",
              "        txt_embed_30  txt_embed_31  txt_embed_32  txt_embed_33  txt_embed_34  \\\n",
              "0           1.485284      0.909802     -1.643002      5.037034      2.780115   \n",
              "1          -0.589944      2.008351     -0.497135     -1.644230      3.140623   \n",
              "2           0.545495      1.000096     -3.468751      3.327641      1.556890   \n",
              "3           2.617733      0.919181     -3.087907     -0.358938     -0.428679   \n",
              "4           2.077521     -0.171984     -3.406347      2.616670      0.713099   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.376479     -0.749645     -2.281994      1.904197     -2.702273   \n",
              "108912      0.347440      0.907071      0.032756     -2.463522     -3.297136   \n",
              "108913      0.911503      0.569131     -2.612042     -1.612692     -2.111382   \n",
              "108914      2.248031      0.993419     -2.661560      2.592874      2.524708   \n",
              "108915      1.151156     -1.025481     -3.679017     -2.111122     -3.165144   \n",
              "\n",
              "        txt_embed_35  txt_embed_36  txt_embed_37  txt_embed_38  txt_embed_39  \\\n",
              "0           4.776496      2.255275      3.769707     -3.661684     -0.649405   \n",
              "1           3.492178      0.335395      1.810923     -4.012080      2.419593   \n",
              "2           4.493203      0.369089      0.167196     -4.837062      1.216016   \n",
              "3           3.815598      2.440558      1.281061     -0.732530      1.517067   \n",
              "4           4.450222      0.606497      0.160672     -2.604218      2.110272   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.578054     -2.232083     -0.220451     -1.909157     -0.809935   \n",
              "108912      2.716323      1.846584     -1.269165     -1.020392      2.497579   \n",
              "108913      2.068428     -1.662065      1.491509     -2.189797     -1.101642   \n",
              "108914      3.169341      2.671678      2.032502     -5.340019      2.253168   \n",
              "108915      2.715713     -4.898654      2.751275     -4.703845      1.822637   \n",
              "\n",
              "        txt_embed_40  txt_embed_41  txt_embed_42  txt_embed_43  txt_embed_44  \\\n",
              "0           4.199636     -0.634806      2.430340     -2.874019     -0.786178   \n",
              "1           0.190941     -0.630611      3.289332     -1.446719     -0.611340   \n",
              "2           4.699153     -1.094529      3.015942     -1.322741     -0.829172   \n",
              "3           2.790302     -2.019122      2.419042     -2.044806      0.649187   \n",
              "4           4.714019     -2.297905      1.700881     -0.195633     -0.404006   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.584604     -1.899768     -0.358462     -0.916753      4.082227   \n",
              "108912      3.490116     -2.338284      3.174366      0.630770      2.929436   \n",
              "108913      0.646667     -1.743810      0.249561      2.283173     -0.826433   \n",
              "108914      3.381877     -2.175173     -0.799576     -1.355430     -0.002634   \n",
              "108915     -2.490871      1.256222     -0.708914     -0.706023      0.562626   \n",
              "\n",
              "        txt_embed_45  txt_embed_46  txt_embed_47  txt_embed_48  txt_embed_49  \\\n",
              "0          -0.504916     -6.007789      1.498495      1.530613      2.379655   \n",
              "1           0.700662     -2.465656     -0.596773      2.498210      3.682916   \n",
              "2           0.555047     -5.592765      1.254898      3.182450      3.053574   \n",
              "3           1.940526     -4.965359      0.930460     -1.152011      0.167594   \n",
              "4           2.140779     -5.351576      1.592488      1.312723      1.610867   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.557145     -2.668177      3.038557      0.201199      1.502191   \n",
              "108912      1.533297     -3.739271      2.125049      1.888600      1.267531   \n",
              "108913      1.260813     -4.058594     -0.620825     -0.670673     -1.037455   \n",
              "108914      0.259449     -5.751658     -0.684958     -0.275028      1.900147   \n",
              "108915     -2.782655     -4.306206     -2.185961      2.108405      4.950135   \n",
              "\n",
              "        txt_embed_50  txt_embed_51  txt_embed_52  txt_embed_53  txt_embed_54  \\\n",
              "0          -0.023146     -0.703605      2.146936      3.944832     -3.098598   \n",
              "1           0.238843      0.570510      0.094637      2.540728     -1.461287   \n",
              "2           1.915569     -1.805712      1.476824      1.445677     -4.286592   \n",
              "3           1.351333      1.412025      5.857270      2.955183     -5.290540   \n",
              "4           0.994072     -1.195971      1.781498      1.785496     -4.071553   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.758015     -2.545711      2.391682     -1.727723     -1.179197   \n",
              "108912      1.988833     -0.566414     -2.023407     -1.848678     -4.852431   \n",
              "108913      0.539870     -1.764350      2.234930      0.302537     -2.878370   \n",
              "108914     -0.214058      1.535369      1.807370      1.824506     -4.483827   \n",
              "108915     -3.312389     -1.126098      5.729527      0.643302     -4.457605   \n",
              "\n",
              "        txt_embed_55  txt_embed_56  txt_embed_57  txt_embed_58  txt_embed_59  \\\n",
              "0           2.513453     -5.395860      0.762132      2.801804      0.877964   \n",
              "1           0.866470     -0.882576     -1.646977      1.915175      2.800210   \n",
              "2           3.866458     -4.053252     -0.571671      2.130672      1.053589   \n",
              "3           3.950262     -1.003028     -0.642327     -0.742141      1.829504   \n",
              "4           2.654091     -5.932536     -0.418919     -0.926006     -0.542602   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.812665     -2.840585      3.628976      1.470329      0.076995   \n",
              "108912      2.402841      1.771225     -1.518038     -3.683095      1.860160   \n",
              "108913      4.449934     -2.123760     -1.768058     -0.519971      1.830129   \n",
              "108914      0.821737     -4.221015      0.975932     -1.052074     -0.615207   \n",
              "108915      2.796445     -1.133119      0.695956      2.956127     -0.633302   \n",
              "\n",
              "        txt_embed_60  txt_embed_61  txt_embed_62  txt_embed_63  txt_embed_64  \\\n",
              "0          -0.585980      1.962556     -5.171217      1.181687      0.541953   \n",
              "1           1.476535      2.345148     -1.675377     -2.948241      4.322546   \n",
              "2           0.110064      2.893591     -4.358958     -1.019454      0.366879   \n",
              "3          -0.369918      0.551058     -4.042940     -1.858755      1.193245   \n",
              "4           0.462660      1.463190     -4.160649      0.174760      0.066889   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.981997      1.813580     -2.348472      0.866408      0.028376   \n",
              "108912      1.633143      0.195921      0.769962     -4.282871     -0.265067   \n",
              "108913      1.443018      1.933492     -2.212900     -0.785136     -1.217968   \n",
              "108914      1.151293      0.683756     -2.574885      1.859686     -0.413490   \n",
              "108915     -1.519831      3.562393     -4.280138     -5.255344      2.863302   \n",
              "\n",
              "        txt_embed_65  txt_embed_66  txt_embed_67  txt_embed_68  txt_embed_69  \\\n",
              "0           0.485833      4.212568      3.458198      1.402939     -0.546293   \n",
              "1           0.006485      1.596134      1.740825      2.517148      1.652603   \n",
              "2           1.841358      4.170247      4.174339      1.262570     -0.029079   \n",
              "3           0.552379      0.840628     -0.199812     -0.531846      0.584006   \n",
              "4           1.971360      1.982323      2.501089      0.240786     -0.528081   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.509214     -2.582299     -3.006606     -0.073780     -2.068264   \n",
              "108912      1.666347      1.591646      1.230523     -0.527127      4.065799   \n",
              "108913      1.596189      0.100395      2.106161      2.176171     -0.866876   \n",
              "108914      0.406037      3.885471      0.946777      0.517306     -1.033148   \n",
              "108915      0.061411     -1.341386     -1.337337      1.703181     -2.006601   \n",
              "\n",
              "        txt_embed_70  txt_embed_71  txt_embed_72  txt_embed_73  txt_embed_74  \\\n",
              "0           2.182101     -0.096255      1.736608      0.685146     -1.613285   \n",
              "1           2.301202     -1.820376      0.313138     -0.460512     -1.465822   \n",
              "2           0.391668      0.851025      2.030272     -0.523211     -2.988503   \n",
              "3           0.238442     -0.183195     -0.964737      0.003038     -3.869885   \n",
              "4           0.936410     -0.267544      1.147592      0.277720     -1.576371   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.675347      3.152147      0.895262     -1.856492      0.034511   \n",
              "108912      3.390041      1.382567      0.413271     -1.279550     -2.449182   \n",
              "108913      1.707775      0.470437      2.538215      0.526563      0.875623   \n",
              "108914      2.304249     -1.712923      1.500055      0.502091     -1.865179   \n",
              "108915      4.201882      1.242289      0.272231      1.765947     -0.726732   \n",
              "\n",
              "        txt_embed_75  txt_embed_76  txt_embed_77  txt_embed_78  txt_embed_79  \\\n",
              "0          -0.912876     -0.532397      1.724842      2.264115     -2.259756   \n",
              "1           0.025661      0.197509      0.952180      1.808614     -3.924314   \n",
              "2           0.468366      2.163268      2.600257      3.421619     -3.726129   \n",
              "3           0.137756      2.962643      0.865882      4.065734     -2.126682   \n",
              "4          -1.375015      2.255514      2.038633      3.813080     -2.544447   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -1.582400     -0.485126     -3.780087     -1.715265     -1.510518   \n",
              "108912     -1.438711      2.208716      2.639466      2.007577     -4.979889   \n",
              "108913     -1.741016      0.810478      0.837013      1.340501     -2.318823   \n",
              "108914     -2.211487      1.712813      0.581897      2.419595     -1.784679   \n",
              "108915     -2.859245      3.293633     -3.036863     -0.779286     -3.258511   \n",
              "\n",
              "        txt_embed_80  txt_embed_81  txt_embed_82  txt_embed_83  txt_embed_84  \\\n",
              "0           4.506509     -0.346088      0.928198     -2.078261     -0.195576   \n",
              "1           0.874062      1.507638     -1.474959     -0.728147      1.680941   \n",
              "2           3.656601      1.318782      1.944976     -1.118911      2.633650   \n",
              "3          -0.139429     -0.065178      0.067101     -1.729568      3.514949   \n",
              "4           2.709035     -1.257679      1.281865     -0.375471      1.086395   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      1.879917     -2.084981      2.657861     -0.150674     -2.561351   \n",
              "108912     -0.850287     -0.397183     -2.782560     -0.545637      3.159307   \n",
              "108913      0.065445     -1.924602      1.666222      1.033114      0.100195   \n",
              "108914      2.797492     -1.306180      0.915710      0.903072      1.685650   \n",
              "108915      2.658521      3.054142      6.156407      0.471332      1.278734   \n",
              "\n",
              "        txt_embed_85  txt_embed_86  txt_embed_87  txt_embed_88  txt_embed_89  \\\n",
              "0           4.847578     -2.958686      1.006080      2.082232     -2.259682   \n",
              "1          -2.275249      0.160674     -1.175852      2.707390     -1.540468   \n",
              "2           1.995067     -1.308313     -1.913673      1.838040     -4.906107   \n",
              "3           1.605098      0.651753     -1.316432      0.430641     -0.993690   \n",
              "4           3.939014     -0.752492     -0.473545      0.215483     -3.946254   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911     -0.698951     -3.995625     -2.722597     -1.367890     -0.967366   \n",
              "108912     -0.078705      2.974325      1.127572     -0.806367     -1.360380   \n",
              "108913      1.314486      2.094897     -1.781481      0.079426     -1.249301   \n",
              "108914      1.769632     -1.761199      0.806649     -0.470639     -2.123776   \n",
              "108915     -2.920300      0.480172     -4.350938     -2.538726     -0.122257   \n",
              "\n",
              "        txt_embed_90  txt_embed_91  txt_embed_92  txt_embed_93  txt_embed_94  \\\n",
              "0          -2.033314      0.218232      3.975312      2.003447     -0.240628   \n",
              "1          -1.755580      1.266704      0.504936      1.069627      1.892455   \n",
              "2          -3.075503     -0.685768      2.522384      0.549779      1.482735   \n",
              "3          -4.693871     -1.967689      3.228312      1.369545     -0.133246   \n",
              "4          -1.339041     -0.557139      1.841604     -0.263560     -0.572500   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.293119      2.508693      2.485103     -3.782464      0.356524   \n",
              "108912     -5.414014     -0.427686     -1.091666      4.165022      3.997271   \n",
              "108913     -1.422049      1.426089      1.749222     -1.884570     -0.326517   \n",
              "108914     -0.965421      0.984079      3.021959     -0.971507      1.532547   \n",
              "108915      1.396373     -0.179927      1.426889      1.606361      1.107465   \n",
              "\n",
              "        txt_embed_95  txt_embed_96  txt_embed_97  txt_embed_98  txt_embed_99  \\\n",
              "0          -2.468548      1.666064     -2.081961     -2.496872     -1.901637   \n",
              "1          -2.870071      1.314711     -0.647611     -3.864238     -1.128709   \n",
              "2           0.817008      1.933099     -2.539294     -0.497640     -1.017591   \n",
              "3           0.455909     -0.918356     -1.434751      0.915808      0.487750   \n",
              "4           1.669172     -0.041288     -1.751370     -0.922569     -0.890117   \n",
              "...              ...           ...           ...           ...           ...   \n",
              "108911      0.936141      1.286547     -1.756850      0.721728      2.648691   \n",
              "108912      3.885442      1.963333     -3.179239      1.035787     -2.396387   \n",
              "108913     -2.000065      1.287592     -0.672378     -1.637091     -2.586577   \n",
              "108914     -0.297451     -1.315823     -0.910824     -2.977850      0.276787   \n",
              "108915     -1.325785     -1.302385      0.823214     -2.692455     -1.572708   \n",
              "\n",
              "        ...  img_embed_157  img_embed_158  img_embed_159  img_embed_160  \\\n",
              "0       ...      -2.594815       2.129452      -1.072991       2.495177   \n",
              "1       ...      -2.345706       1.750381      -0.757739       0.708200   \n",
              "2       ...      -2.523711       2.362369      -3.787951       4.148966   \n",
              "3       ...      -4.442958       1.778195      -4.168824       2.106603   \n",
              "4       ...      -3.002218       1.309209       0.779997       1.584465   \n",
              "...     ...            ...            ...            ...            ...   \n",
              "108911  ...      -0.812932       1.195455       1.647590       3.672622   \n",
              "108912  ...       0.789993      -0.356636      -1.215572       1.115422   \n",
              "108913  ...       2.912434       0.792292      -1.331219       3.966785   \n",
              "108914  ...      -3.671371       2.919145      -0.354430       2.155198   \n",
              "108915  ...      -1.435513      -0.460495       2.049898       1.064757   \n",
              "\n",
              "        img_embed_161  img_embed_162  img_embed_163  img_embed_164  \\\n",
              "0           -0.615316      -0.372666       1.441637      -0.386958   \n",
              "1           -2.036261      -1.247846       1.337176       0.381086   \n",
              "2            0.527358      -0.462329       1.958768      -0.515446   \n",
              "3           -2.610766      -4.665283       4.229245       1.160626   \n",
              "4           -0.254501      -1.970212       2.601439       0.765639   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -0.958210       0.426038       0.050856       0.294075   \n",
              "108912      -1.715971       2.240216      -1.055415       0.029975   \n",
              "108913      -3.149431       2.086974       4.014629      -2.470242   \n",
              "108914       1.272519      -0.692142       0.059904      -0.556941   \n",
              "108915      -0.417074       0.133132       2.370134      -1.111871   \n",
              "\n",
              "        img_embed_165  img_embed_166  img_embed_167  img_embed_168  \\\n",
              "0            0.574267       0.290140       2.143984      -2.179755   \n",
              "1           -2.195716       2.349268       3.234238      -1.073745   \n",
              "2            0.676892      -0.304709       0.129076      -1.632903   \n",
              "3            1.137728       0.350339       3.762218      -1.562948   \n",
              "4           -0.306522       1.411740       2.045010      -1.435165   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -1.827960       2.254042       0.032561      -1.122103   \n",
              "108912      -2.228453      -1.050905       1.246343      -2.759985   \n",
              "108913      -0.326165       1.048685      -2.114103      -0.884933   \n",
              "108914       0.056640       0.154125       2.744786      -2.739786   \n",
              "108915      -0.384299       0.123534       2.619230      -1.402109   \n",
              "\n",
              "        img_embed_169  img_embed_170  img_embed_171  img_embed_172  \\\n",
              "0            1.001814       1.709265       1.765996      -0.978148   \n",
              "1            2.727566       2.134141       1.316549       1.401429   \n",
              "2           -0.416446       0.201256       1.504616      -1.840399   \n",
              "3            3.289258       0.676585      -1.116040      -2.379200   \n",
              "4            0.607862       1.814897       1.915056       1.355841   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       1.873654       0.354787      -0.085081       2.839442   \n",
              "108912       3.012103       2.739157      -2.998512       0.469200   \n",
              "108913       2.947801       0.514193      -3.516667      -1.065668   \n",
              "108914       1.512662       1.191475       1.334174      -1.740190   \n",
              "108915      -0.863178       1.177824      -1.333709       0.857954   \n",
              "\n",
              "        img_embed_173  img_embed_174  img_embed_175  img_embed_176  \\\n",
              "0            2.376266       1.286386      -1.498712      -2.120687   \n",
              "1            0.322648       1.520445      -1.555399      -1.759372   \n",
              "2            0.741553       1.197113       0.473898      -0.926339   \n",
              "3            0.378596       0.514341       3.422350       1.500889   \n",
              "4            0.371016       1.591542      -1.356246      -2.078668   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -0.921125       3.449929      -1.993664       2.745172   \n",
              "108912       4.019664      -0.022314      -1.993336      -0.990848   \n",
              "108913       0.333623       0.570760       1.542099       1.036982   \n",
              "108914       1.735739       0.162167      -0.790408      -2.942657   \n",
              "108915       0.409733       1.254296      -0.843010      -0.652145   \n",
              "\n",
              "        img_embed_177  img_embed_178  img_embed_179  img_embed_180  \\\n",
              "0           -1.626103      -1.738368      -0.223271       1.264437   \n",
              "1           -0.522331      -2.062852       1.235842       0.166176   \n",
              "2            0.725195      -2.460084       0.610268       2.418910   \n",
              "3           -2.373203       1.373048      -1.818372       0.209331   \n",
              "4           -1.496517      -1.535709       0.522328       1.336467   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       0.927272       1.592893       3.730085       1.930457   \n",
              "108912       1.582859      -3.978954       1.577788      -3.159555   \n",
              "108913       0.289919      -0.040624       1.880710       3.906974   \n",
              "108914      -0.712131      -0.983628      -0.669094       0.595622   \n",
              "108915      -4.701323      -0.342422       2.515860       0.744027   \n",
              "\n",
              "        img_embed_181  img_embed_182  img_embed_183  img_embed_184  \\\n",
              "0           -0.987131      -1.909374       2.231456      -2.683646   \n",
              "1           -3.379686      -2.222848       1.613652       0.736073   \n",
              "2           -0.807308      -2.471540       2.551485      -1.811828   \n",
              "3           -4.099599      -2.291751       1.703648      -1.778213   \n",
              "4           -2.084815      -2.391989       1.279834      -0.479692   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       0.233894      -1.841480       2.312968      -1.052112   \n",
              "108912       1.886579      -2.230175       2.505482       1.897286   \n",
              "108913      -2.134036      -1.432456       6.798509      -3.465953   \n",
              "108914      -1.851003      -2.508376       0.527464      -2.075131   \n",
              "108915      -0.759526      -1.492734      -0.776376       0.226138   \n",
              "\n",
              "       img_embed_185 img_embed_186  img_embed_187  img_embed_188  \\\n",
              "0          -0.635318      0.085889      -0.823508       0.556983   \n",
              "1          -2.189353      1.284548       2.872613       2.676115   \n",
              "2           0.100877      0.743698      -1.116395      -0.359674   \n",
              "3           0.245399     -3.703303       1.452214       2.170496   \n",
              "4           0.806861      0.003365       0.133480       1.940574   \n",
              "...              ...           ...            ...            ...   \n",
              "108911     -0.093647     -1.134430       0.012588       2.437869   \n",
              "108912     -2.838402     -2.721122       0.833790       2.155062   \n",
              "108913     -2.104497     -1.058780      -0.118798       0.868572   \n",
              "108914     -0.956641     -0.264901       1.204805       1.005664   \n",
              "108915     -1.131623      0.183000      -0.736877      -2.060887   \n",
              "\n",
              "        img_embed_189  img_embed_190  img_embed_191  img_embed_192  \\\n",
              "0            2.515354      -3.420530       0.063466       0.009474   \n",
              "1            0.147529      -1.317109      -2.644052      -1.835089   \n",
              "2            3.028536      -2.432427       1.507481       1.783897   \n",
              "3            1.190285      -2.395464      -0.117074       0.612694   \n",
              "4            0.347273      -3.216053      -1.125144      -0.412974   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       0.776525      -1.485173      -0.380993      -0.018833   \n",
              "108912       0.098216       0.083581       0.543047       1.406939   \n",
              "108913      -0.358550      -1.196152      -3.440636       1.066864   \n",
              "108914       2.140113      -3.168196       0.915163       1.335524   \n",
              "108915      -0.343423      -2.522264      -2.744899      -0.599565   \n",
              "\n",
              "        img_embed_193  img_embed_194  img_embed_195  img_embed_196  \\\n",
              "0           -0.065751      -1.075365      -2.971309       1.019620   \n",
              "1            0.957417      -2.385891      -0.661901       2.658265   \n",
              "2           -0.217515      -2.684258      -2.669885       1.306354   \n",
              "3           -4.343407      -3.707790      -1.968170       1.676934   \n",
              "4           -0.454987      -1.507496      -1.003127       1.459658   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -0.966918       2.069371       3.280475       0.936332   \n",
              "108912      -0.366133       1.074942      -3.693939      -0.185423   \n",
              "108913      -3.714600      -1.304127      -3.347711       2.633687   \n",
              "108914      -0.442423      -3.238333      -3.479846      -0.143950   \n",
              "108915      -1.929651       0.655150       0.459797       1.922286   \n",
              "\n",
              "        img_embed_197  img_embed_198  img_embed_199  img_embed_200  \\\n",
              "0            2.509559      -1.525837       0.542580      -0.269730   \n",
              "1           -0.945105      -1.011989      -0.654781      -0.336352   \n",
              "2            2.197861       0.239669       0.674681      -0.192571   \n",
              "3           -1.696593       0.884128       1.813142       1.855076   \n",
              "4            0.357251      -1.254804      -0.310848      -1.874668   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       1.224270       0.320835      -4.495546      -3.091730   \n",
              "108912       0.528465       0.953396       0.305434      -1.719791   \n",
              "108913      -1.828556      -0.990196      -0.788899      -3.984093   \n",
              "108914       1.371312      -2.025407       0.626729      -1.739293   \n",
              "108915       1.685348      -0.147716       1.517651      -0.636391   \n",
              "\n",
              "        img_embed_201  img_embed_202  img_embed_203  img_embed_204  \\\n",
              "0           -0.035962       0.391800      -1.234116       2.314029   \n",
              "1           -2.126801       1.337513      -1.061840       0.411851   \n",
              "2           -0.162941       2.512084      -1.096083       3.525563   \n",
              "3            1.303212       2.047489       0.603224       3.958775   \n",
              "4           -1.060506       0.087846      -1.922506       1.139462   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -1.057453      -0.370681      -2.902287       0.605567   \n",
              "108912      -2.661647      -0.332588       0.278220       1.315297   \n",
              "108913       1.561347      -0.312444      -0.807412       0.410707   \n",
              "108914       1.402521      -0.372969      -0.338624       1.894481   \n",
              "108915       0.629845      -1.399463      -1.391820       1.030652   \n",
              "\n",
              "        img_embed_205  img_embed_206  img_embed_207  img_embed_208  \\\n",
              "0            1.898617      -2.361128       0.312405       3.444607   \n",
              "1            0.246256      -2.264030       2.399420       2.024863   \n",
              "2            1.056434      -2.129516      -0.005492       3.827181   \n",
              "3            3.746269      -3.498088      -0.733038      -0.913736   \n",
              "4            0.232495      -1.667729       1.086525       3.235504   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -2.249251      -0.685881       3.344256       1.003920   \n",
              "108912       3.398311      -3.397320       0.798742      -2.811525   \n",
              "108913       1.738322      -1.268438       1.448271       2.088164   \n",
              "108914       1.619781      -2.315445      -0.885915       1.725065   \n",
              "108915      -0.024878      -2.390552       1.004328       2.008048   \n",
              "\n",
              "        img_embed_209  img_embed_210  img_embed_211  img_embed_212  \\\n",
              "0           -0.886250      -1.343637       0.954459       0.630835   \n",
              "1            0.170483      -0.039203      -1.506677      -1.945932   \n",
              "2           -0.358198      -2.009379      -0.224391       0.803851   \n",
              "3           -1.296190       4.821739       0.687235      -1.406431   \n",
              "4           -1.360041      -0.573626      -0.343873      -0.862111   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -3.433650      -2.621783      -0.372633       1.700348   \n",
              "108912      -1.227957       1.855185       1.397263      -1.272777   \n",
              "108913      -1.352053       0.129204       0.875063      -1.058863   \n",
              "108914      -0.458364      -0.113217       1.683704      -1.078024   \n",
              "108915       0.340123      -1.387081      -2.523773      -1.018539   \n",
              "\n",
              "        img_embed_213  img_embed_214  img_embed_215  img_embed_216  \\\n",
              "0           -2.394722       0.683487       1.149004      -1.351173   \n",
              "1           -0.020228      -0.495499      -0.141013      -1.617521   \n",
              "2           -0.909498       0.962810       2.601583       0.056328   \n",
              "3            0.669184      -1.847598      -0.817075      -1.181172   \n",
              "4           -3.036260      -1.016610      -1.149770       0.464140   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -1.022541       1.666146       3.926513       1.593440   \n",
              "108912      -0.695033      -2.074005      -2.157744      -0.613893   \n",
              "108913      -3.811529      -2.819438       0.168019       0.799341   \n",
              "108914      -2.024943      -0.173665      -0.262584      -2.009855   \n",
              "108915      -0.198985      -2.278321       0.855287       1.977260   \n",
              "\n",
              "        img_embed_217  img_embed_218  img_embed_219  img_embed_220  \\\n",
              "0            2.023900       1.599198       1.382868       1.605678   \n",
              "1            2.624676      -2.581922       0.220891       0.328793   \n",
              "2            1.859474      -0.316134      -1.131286       1.701278   \n",
              "3            2.588552      -1.123118       0.232427       2.170325   \n",
              "4            2.412406      -0.654135       0.486894       1.168054   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       3.846366      -3.724903       0.214898       1.602764   \n",
              "108912       3.044159      -1.802477       0.890905       1.535566   \n",
              "108913       2.347459      -1.152050      -0.073379       0.584912   \n",
              "108914       1.953726       2.464684       1.866723       3.098136   \n",
              "108915       3.336885      -0.026206       2.628304      -0.034228   \n",
              "\n",
              "        img_embed_221  img_embed_222  img_embed_223  img_embed_224  \\\n",
              "0            1.880667      -0.508161       0.242840      -0.260849   \n",
              "1            0.647758       0.231990       1.101486       1.079527   \n",
              "2            2.305405      -1.941271       1.248002       0.291000   \n",
              "3            0.579414       2.601421      -0.596196      -1.798693   \n",
              "4           -0.271420       0.667091       1.163557      -0.132236   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       3.950767       0.322759       1.632436       2.913508   \n",
              "108912       1.058227       0.463234       0.884959       0.518636   \n",
              "108913       2.391302      -0.847047      -0.198604       1.605899   \n",
              "108914       1.429997       1.994586      -0.235225      -2.027347   \n",
              "108915      -1.857510       0.299361       1.335146      -1.908567   \n",
              "\n",
              "        img_embed_225  img_embed_226  img_embed_227  img_embed_228  \\\n",
              "0            1.875943       0.206135       0.186973       2.047446   \n",
              "1            2.953102      -0.528682      -1.140600      -0.373299   \n",
              "2            0.792067       1.361166       1.129005       1.947404   \n",
              "3            0.312326       0.387486      -2.207365      -1.029329   \n",
              "4            0.668463      -0.228185       0.155768       1.546821   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       3.255090       0.124804      -3.038602       1.028680   \n",
              "108912       1.126252      -0.570538       1.777023       0.157465   \n",
              "108913       0.718099      -0.307227       1.443186       1.116030   \n",
              "108914       2.489434      -0.328639       0.503968       1.511740   \n",
              "108915      -0.318048       1.573966      -2.097476       0.901986   \n",
              "\n",
              "        img_embed_229  img_embed_230  img_embed_231  img_embed_232  \\\n",
              "0           -0.575472       3.016410       2.757146       3.353721   \n",
              "1            0.109811       2.813541       0.596998       1.754836   \n",
              "2           -0.859423       2.023223       2.348651       4.506127   \n",
              "3           -1.274233       2.047230       1.928517       2.102633   \n",
              "4            0.307640       2.542941       1.240985       2.144569   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -0.372231       1.747909       2.259741       1.149775   \n",
              "108912      -2.856526       3.190122      -0.744726       2.207457   \n",
              "108913      -0.222231       4.325758       0.777393       1.724637   \n",
              "108914       1.208020       1.384978       3.671376       3.584236   \n",
              "108915      -0.142120       2.523870       0.855082       0.633110   \n",
              "\n",
              "        img_embed_233  img_embed_234  img_embed_235  img_embed_236  \\\n",
              "0           -0.457272      -0.125337       2.332963       3.858967   \n",
              "1           -1.359771       0.466501       2.377417      -0.180653   \n",
              "2            0.684437       2.064992       0.022901       3.464243   \n",
              "3           -0.559383      -0.951418      -2.021749       1.366272   \n",
              "4           -1.079753       0.335191       0.245159       2.150169   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -1.978496       1.221311       0.619848      -0.702118   \n",
              "108912       1.761704       2.780637       2.130281      -1.689670   \n",
              "108913      -0.743674       2.502644       2.662223       0.716697   \n",
              "108914       0.685376       1.440640      -0.373653       2.983807   \n",
              "108915      -0.284672      -0.065614      -1.057013      -0.558878   \n",
              "\n",
              "        img_embed_237  img_embed_238  img_embed_239  img_embed_240  \\\n",
              "0           -2.075490      -0.705496       0.203452       1.719733   \n",
              "1           -3.259304       0.120833       2.225643       2.220507   \n",
              "2           -2.325273       0.131324      -1.876178       1.770354   \n",
              "3           -1.947211      -2.114419       1.140394      -0.796024   \n",
              "4           -1.991440      -2.330727       0.736855       2.126931   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -3.045399      -1.687716      -2.313181       3.121440   \n",
              "108912      -1.385311      -1.727320       3.064378      -0.886842   \n",
              "108913      -4.454898      -1.274869      -0.830480       0.718139   \n",
              "108914      -2.187109      -1.982580       0.927802       1.391323   \n",
              "108915      -2.375062      -1.258834       3.204423       0.256820   \n",
              "\n",
              "        img_embed_241  img_embed_242  img_embed_243  img_embed_244  \\\n",
              "0            2.925039      -0.388639       1.225732      -1.773137   \n",
              "1           -1.178944      -0.821367       0.717239      -1.455829   \n",
              "2            2.925176      -1.851054      -0.092587      -0.580742   \n",
              "3            1.906361      -0.357520       3.352968      -3.996377   \n",
              "4            0.556061      -1.611493       2.722133      -1.185940   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -0.982756       0.450534       0.706889      -2.271411   \n",
              "108912       5.473865      -0.998189       0.228917      -1.734863   \n",
              "108913       0.722961      -0.474453       2.400864       0.907951   \n",
              "108914       2.578521      -0.332423       0.798493      -1.699570   \n",
              "108915      -1.055324      -2.972080       2.656508      -0.887010   \n",
              "\n",
              "        img_embed_245  img_embed_246  img_embed_247  img_embed_248  \\\n",
              "0            0.052655       1.279922      -3.374727      -1.506969   \n",
              "1           -1.260584       2.623467      -0.538330      -2.620164   \n",
              "2           -0.422019       0.923714      -4.582711      -1.056910   \n",
              "3            1.520331      -0.000716      -0.487683      -1.889119   \n",
              "4            0.399201       1.598617      -0.621475      -2.091410   \n",
              "...               ...            ...            ...            ...   \n",
              "108911      -1.142208       2.323842      -1.352005      -3.588055   \n",
              "108912      -2.065603       0.206962       0.416093      -0.917160   \n",
              "108913       0.312939       0.984343       1.468603      -2.667665   \n",
              "108914      -0.984258       0.834168      -1.577673      -1.983800   \n",
              "108915       2.091410       0.203728       3.445529      -3.894981   \n",
              "\n",
              "        img_embed_249  img_embed_250  img_embed_251  img_embed_252  \\\n",
              "0           -1.820180      -3.024644       0.445263       0.013933   \n",
              "1            1.277195       0.601015      -0.345312       0.993457   \n",
              "2           -2.568084      -2.038061       2.508719      -0.764789   \n",
              "3            0.943015      -2.834418       1.633184       2.001801   \n",
              "4            0.501600      -3.083864      -1.060091       2.053600   \n",
              "...               ...            ...            ...            ...   \n",
              "108911       2.803221      -2.160821      -1.153775       0.290783   \n",
              "108912      -0.028134       2.624365       1.574156      -0.014772   \n",
              "108913      -0.988566       1.012626       1.046013       1.670171   \n",
              "108914      -0.830833      -2.517840      -0.387712       0.237070   \n",
              "108915       0.318239      -3.956578       0.672438       2.741400   \n",
              "\n",
              "        img_embed_253  img_embed_254  img_embed_255  img_embed_256  \n",
              "0           -1.300239       2.759948       2.056171       0.508703  \n",
              "1            1.351633       2.162675       2.768597      -0.937197  \n",
              "2           -0.657116       3.252782       2.687366       0.844332  \n",
              "3           -2.333152       2.645595       2.280233      -0.694448  \n",
              "4           -2.025008       2.399251       2.562317       0.694134  \n",
              "...               ...            ...            ...            ...  \n",
              "108911       1.518086       3.690181       5.391709       0.328971  \n",
              "108912       2.250575       2.005705       0.309760       0.913974  \n",
              "108913       0.804473       2.821836       3.285690       2.215272  \n",
              "108914      -2.524445       1.908586       1.887787       1.021628  \n",
              "108915       1.146402       3.278049       3.225166      -1.092669  \n",
              "\n",
              "[108916 rows x 257 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 334
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uvyRovZKnjRR",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "txt_item_feat_df = item_feat_df.filter(regex=\"txt*\")\n",
        "img_item_feat_df = item_feat_df.filter(regex=\"img*\")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9AiUuKHvtN6P",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "item_idx_2_rawid_dict = dict(zip(item_feat_df.index, item_feat_df['item_id']))\n",
        "txt_item_feat_np = np.ascontiguousarray(txt_item_feat_df.values, dtype=np.float32)\n",
        "img_item_feat_np = np.ascontiguousarray(img_item_feat_df.values, dtype=np.float32)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "b276XdCIv1t0",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# norm\n",
        "txt_item_feat_np = txt_item_feat_np / np.linalg.norm(txt_item_feat_np, axis=1, keepdims=True)\n",
        "img_item_feat_np = img_item_feat_np / np.linalg.norm(img_item_feat_np, axis=1, keepdims=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BHmR0C-XyiX9",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "for item_raw_id, item_idx in item_rawid_2_idx_dict.items():\n",
        "  "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CJ_YWXfVr1Ay",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import faiss    \n",
        "txt_index = faiss.IndexFlatIP(128)\n",
        "txt_index.add(txt_item_feat_np)\n",
        "img_index = faiss.IndexFlatIP(128)\n",
        "img_index.add(img_item_feat_np)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qzxup9MytIS8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "sim, idx = txt_index.search(txt_item_feat_np[0:10], 5)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uOB9Hv3Jzl3C",
        "colab_type": "code",
        "outputId": "2aba0cf0-9fb3-436b-a887-03b14cd461a0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        }
      },
      "source": [
        "import collections\n",
        "item_sim_dict = collections.defaultdict(dict)\n",
        "for target_idx, sim_value_list, rele_idx_list in zip(range(10), sim, idx):\n",
        "  print(target_idx, sim_value_list, rele_idx_list)\n",
        "  target_raw_id = item_idx_2_rawid_dict[target_idx]\n",
        "  for rele_idx, sim_value in zip(rele_idx_list[1:], sim_value_list[1: ]):\n",
        "    rele_raw_id = item_idx_2_rawid_dict[rele_idx]\n",
        "    item_sim_dict[target_raw_id][rele_raw_id] = sim_value"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0 [1.         0.94953716 0.945301   0.93995166 0.9381529 ] [     0  10855  45538 104364  83935]\n",
            "1 [1.         0.93457955 0.9270703  0.92593944 0.9232254 ] [    1 33934 48998 96062 51743]\n",
            "2 [1.0000001  0.9893191  0.9759518  0.9748367  0.97011316] [    2  7580  7546 49395 24403]\n",
            "3 [0.99999994 0.9683949  0.9665514  0.966322   0.9658968 ] [    3 51477 47119 16540 80682]\n",
            "4 [1.         0.94928163 0.94629085 0.9452878  0.9400582 ] [    4 77903  9254 17079 79050]\n",
            "5 [1.        0.9526849 0.9480044 0.9473692 0.9445448] [    5 73243 22428 88874  4870]\n",
            "6 [0.99999994 0.9443679  0.934728   0.93358696 0.92849445] [    6 98262 95110 69109  6098]\n",
            "7 [1.         0.98527634 0.9787564  0.97731054 0.9764797 ] [    7 11161 82526 56053 82068]\n",
            "8 [0.9999999  0.9225727  0.9049795  0.90105915 0.90013605] [    8 49711 74584 95437  7156]\n",
            "9 [1.        0.9866784 0.9787462 0.9768922 0.9763875] [     9  17907 108888  36616  72644]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O1-0KAunq0SU",
        "colab_type": "text"
      },
      "source": [
        "## 观察未来点击的item在各个阶段出现的比例"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8gHi0YAmj1Rv",
        "colab_type": "code",
        "outputId": "261d0242-9c9c-48f6-8205-ffe5c36d8839",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 527
        }
      },
      "source": [
        "total_click = pd.DataFrame()\n",
        "for c in range(now_phase + 1):\n",
        "    print('phase:', c)\n",
        "    click_train = pd.read_csv(train_path + '/underexpose_train_click-{}.csv'.format(c), header=None,\n",
        "                              names=['user_id', 'item_id', 'time'])\n",
        "    click_train['phase'] = c\n",
        "    total_click = total_click.append(click_train)\n",
        "\n",
        "\n",
        "for c in range(now_phase + 1):\n",
        "\n",
        "  user_answer_click = pd.read_csv(offline_answer_path + '/underexpose_test_qtime_with_answer-{}.csv'.format(c), header=None, names=['user_id', 'item_id', 'time'])\n",
        "  \n",
        "  for i in range(now_phase + 1):\n",
        "    user_click_train = total_click[total_click['phase'] == i]\n",
        "    phase_item_ids = set(user_click_train['item_id'].unique())\n",
        "    phase_user_answer_click = user_answer_click[user_answer_click['item_id'].isin(phase_item_ids)]\n",
        "    hit_count = phase_user_answer_click.shape[0]\n",
        "    hit_percent = 1.0 * hit_count / user_answer_click.shape[0]\n",
        "\n",
        "    print('target_phase={}, obs_phase={}, hit_count={}, hit_percent={}'.format( c, i, hit_count, hit_percent))\n",
        "\n",
        "  "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "phase: 0\n",
            "phase: 1\n",
            "phase: 2\n",
            "phase: 3\n",
            "phase: 4\n",
            "target_phase=0, obs_phase=0, hit_count=1659, hit_percent=0.9975947083583885\n",
            "target_phase=0, obs_phase=1, hit_count=1398, hit_percent=0.8406494287432351\n",
            "target_phase=0, obs_phase=2, hit_count=1155, hit_percent=0.6945279615153337\n",
            "target_phase=0, obs_phase=3, hit_count=1022, hit_percent=0.6145520144317499\n",
            "target_phase=0, obs_phase=4, hit_count=839, hit_percent=0.5045099218280217\n",
            "target_phase=1, obs_phase=0, hit_count=1258, hit_percent=0.7288528389339514\n",
            "target_phase=1, obs_phase=1, hit_count=1722, hit_percent=0.9976825028968713\n",
            "target_phase=1, obs_phase=2, hit_count=1382, hit_percent=0.8006952491309386\n",
            "target_phase=1, obs_phase=3, hit_count=1223, hit_percent=0.7085747392815759\n",
            "target_phase=1, obs_phase=4, hit_count=1047, hit_percent=0.6066048667439166\n",
            "target_phase=2, obs_phase=0, hit_count=1046, hit_percent=0.6189349112426036\n",
            "target_phase=2, obs_phase=1, hit_count=1242, hit_percent=0.7349112426035503\n",
            "target_phase=2, obs_phase=2, hit_count=1688, hit_percent=0.9988165680473373\n",
            "target_phase=2, obs_phase=3, hit_count=1403, hit_percent=0.8301775147928994\n",
            "target_phase=2, obs_phase=4, hit_count=1191, hit_percent=0.7047337278106509\n",
            "target_phase=3, obs_phase=0, hit_count=905, hit_percent=0.5402985074626866\n",
            "target_phase=3, obs_phase=1, hit_count=1040, hit_percent=0.6208955223880597\n",
            "target_phase=3, obs_phase=2, hit_count=1247, hit_percent=0.7444776119402985\n",
            "target_phase=3, obs_phase=3, hit_count=1670, hit_percent=0.9970149253731343\n",
            "target_phase=3, obs_phase=4, hit_count=1369, hit_percent=0.8173134328358209\n",
            "target_phase=4, obs_phase=0, hit_count=858, hit_percent=0.5023419203747073\n",
            "target_phase=4, obs_phase=1, hit_count=946, hit_percent=0.5538641686182669\n",
            "target_phase=4, obs_phase=2, hit_count=1078, hit_percent=0.6311475409836066\n",
            "target_phase=4, obs_phase=3, hit_count=1283, hit_percent=0.7511709601873536\n",
            "target_phase=4, obs_phase=4, hit_count=1702, hit_percent=0.9964871194379391\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HA697EMGrblV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TVSqYaGz0J5X",
        "colab_type": "text"
      },
      "source": [
        "# Evaluation"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uTqoUbpKDqGB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# coding=utf-8\n",
        "from __future__ import division\n",
        "from __future__ import print_function\n",
        "\n",
        "import datetime\n",
        "import json\n",
        "import sys\n",
        "import time\n",
        "from collections import defaultdict\n",
        "\n",
        "import numpy as np\n",
        "\n",
        "# the higher scores, the better performance\n",
        "def evaluate_each_phase(predictions, answers):\n",
        "    list_item_degress = []\n",
        "    for user_id in answers:\n",
        "        item_id, item_degree = answers[user_id]\n",
        "        list_item_degress.append(item_degree)\n",
        "    list_item_degress.sort()\n",
        "    median_item_degree = list_item_degress[len(list_item_degress) // 2]\n",
        "\n",
        "    num_cases_full = 0.0\n",
        "    ndcg_50_full = 0.0\n",
        "    ndcg_50_half = 0.0\n",
        "    num_cases_half = 0.0\n",
        "    hitrate_50_full = 0.0\n",
        "    hitrate_50_half = 0.0\n",
        "    for user_id in answers:\n",
        "        item_id, item_degree = answers[user_id]\n",
        "        rank = 0\n",
        "        while rank < 50 and predictions[user_id][rank] != item_id:\n",
        "            rank += 1\n",
        "        num_cases_full += 1.0\n",
        "        if rank < 50:\n",
        "            ndcg_50_full += 1.0 / np.log2(rank + 2.0)\n",
        "            hitrate_50_full += 1.0\n",
        "        if item_degree <= median_item_degree:\n",
        "            num_cases_half += 1.0\n",
        "            if rank < 50:\n",
        "                ndcg_50_half += 1.0 / np.log2(rank + 2.0)\n",
        "                hitrate_50_half += 1.0\n",
        "    ndcg_50_full /= num_cases_full\n",
        "    hitrate_50_full /= num_cases_full\n",
        "    ndcg_50_half /= num_cases_half\n",
        "    hitrate_50_half /= num_cases_half\n",
        "    return np.array([ndcg_50_full, ndcg_50_half,\n",
        "                     hitrate_50_full, hitrate_50_half], dtype=np.float32)\n",
        "\n",
        "# submit_fname is the path to the file submitted by the participants.\n",
        "# debias_track_answer.csv is the standard answer, which is not released.\n",
        "def evaluate(submit_fname,\n",
        "             answer_fname='debias_track_answer.csv', current_time=None):\n",
        "    schedule_in_unix_time = [\n",
        "        0,  # ........ 1970-01-01 08:00:00 (T=0)\n",
        "        1586534399,  # 2020-04-10 23:59:59 (T=1)\n",
        "        1587139199,  # 2020-04-17 23:59:59 (T=2)\n",
        "        1587743999,  # 2020-04-24 23:59:59 (T=3)\n",
        "        1588348799,  # 2020-05-01 23:59:59 (T=4)\n",
        "        1588953599,  # 2020-05-08 23:59:59 (T=5)\n",
        "        1589558399,  # 2020-05-15 23:59:59 (T=6)\n",
        "        1590163199,  # 2020-05-22 23:59:59 (T=7)\n",
        "        1590767999,  # 2020-05-29 23:59:59 (T=8)\n",
        "        1591372799  # .2020-06-05 23:59:59 (T=9)\n",
        "    ]\n",
        "    assert len(schedule_in_unix_time) == 10\n",
        "    for i in range(1, len(schedule_in_unix_time) - 1):\n",
        "        # 604800 == one week\n",
        "        assert schedule_in_unix_time[i] + 604800 == schedule_in_unix_time[i + 1]\n",
        "\n",
        "    if current_time is None:\n",
        "        current_time = int(time.time())\n",
        "    print('current_time:', current_time)\n",
        "    print('date_time:', datetime.datetime.fromtimestamp(current_time))\n",
        "    current_phase = 0\n",
        "    while (current_phase < 9) and (\n",
        "            current_time > schedule_in_unix_time[current_phase + 1]):\n",
        "        current_phase += 1\n",
        "    print('current_phase:', current_phase)\n",
        "  \n",
        "    try:\n",
        "        answers = [{} for _ in range(10)]\n",
        "        with open(answer_fname, 'r') as fin:\n",
        "            for line in fin:\n",
        "                line = [int(x) for x in line.split(',')]\n",
        "                phase_id, user_id, item_id, item_degree = line\n",
        "                if mode == 'online':\n",
        "                  assert user_id % 11 == phase_id\n",
        "                # exactly one test case for each user_id\n",
        "                answers[phase_id][user_id] = (item_id, item_degree)\n",
        "    except Exception as e:\n",
        "        return print('server-side error: answer file incorrect', e)\n",
        "\n",
        "    try:\n",
        "        predictions = {}\n",
        "        with open(submit_fname, 'r') as fin:\n",
        "            for line in fin:\n",
        "                line = line.strip()\n",
        "                if line == '':\n",
        "                    continue\n",
        "                line = line.split(',')\n",
        "                user_id = int(line[0])\n",
        "                if user_id in predictions:\n",
        "                    return print('submitted duplicate user_ids')\n",
        "                item_ids = [int(i) for i in line[1:]]\n",
        "                if len(item_ids) != 50:\n",
        "                    return print('each row need have 50 items')\n",
        "                if len(set(item_ids)) != 50:\n",
        "                    return print('each row need have 50 DISTINCT items')\n",
        "                predictions[user_id] = item_ids\n",
        "    except Exception as e:\n",
        "        return print('submission not in correct format,e={}'.format(e))\n",
        "\n",
        "    scores = np.zeros(4, dtype=np.float32)\n",
        "\n",
        "    # The final winning teams will be decided based on phase T=7,8,9 only.\n",
        "    # We thus fix the scores to 1.0 for phase 0,1,2,...,6 at the final stage.\n",
        "    if current_phase >= 7:  # if at the final stage, i.e., T=7,8,9\n",
        "        scores += 7.0  # then fix the scores to 1.0 for phase 0,1,2,...,6\n",
        "    phase_beg = (7 if (current_phase >= 7) else 0)\n",
        "    phase_end = current_phase + 1\n",
        "    for phase_id in range(phase_beg, phase_end):\n",
        "        for user_id in answers[phase_id]:\n",
        "            if user_id not in predictions:\n",
        "                return print('user_id %d of phase %d not in submission' % (\n",
        "                        user_id, phase_id))\n",
        "        try:\n",
        "            # We sum the scores from all the phases, instead of averaging them.\n",
        "            phase_score = evaluate_each_phase(predictions, answers[phase_id])\n",
        "            print('phase_id={}, score={}'.format(phase_id, phase_score))\n",
        "            scores += phase_score\n",
        "        except Exception as _:\n",
        "            return print('error occurred during evaluation')\n",
        "    \n",
        "    print(\"score={},\\nhitrate_50_full={},\\nndcg_50_full={},\\nhitrate_50_half={}, \\nndcg_50_half={}\".format(\n",
        "        float(scores[0]), float(scores[2]), float(scores[0]), float(scores[3]), float(scores[1])\n",
        "    ))\n",
        "    return scores[0]\n",
        "    # return report_score(\n",
        "    #     stdout, score=float(scores[0]),\n",
        "    #     ndcg_50_full=float(scores[0]), ndcg_50_half=float(scores[1]),\n",
        "    #     hitrate_50_full=float(scores[2]), hitrate_50_half=float(scores[3]))\n",
        "\n",
        "# FYI. You can create a fake answer file for validation based on this. For example,\n",
        "# you can mask the latest ONE click made by each user in underexpose_test_click-T.csv,\n",
        "# and use those masked clicks to create your own validation set, i.e.,\n",
        "# a fake underexpose_test_qtime_with_answer-T.csv for validation.\n",
        "def _create_answer_file_for_evaluation(output_answer_fname='debias_track_answer.csv'):\n",
        "    train = train_path + '/underexpose_train_click-%d.csv'\n",
        "    test = test_path + '/underexpose_test_click-%d.csv'\n",
        "\n",
        "    # underexpose_test_qtime-T.csv contains only <user_id, time>\n",
        "    # underexpose_test_qtime_with_answer-T.csv contains <user_id, item_id, time>\n",
        "    answer = offline_answer_path + '/underexpose_test_qtime_with_answer-%d.csv'  # not released\n",
        "\n",
        "    item_deg = defaultdict(lambda: 0)\n",
        "    with open(output_answer_fname, 'w') as fout:\n",
        "        for phase_id in range(now_phase+1):\n",
        "            with open(train % phase_id) as fin:\n",
        "                for line in fin:\n",
        "                    user_id, item_id, timestamp = line.split(',')\n",
        "                    user_id, item_id, timestamp = (\n",
        "                        int(user_id), int(item_id), float(timestamp))\n",
        "                    item_deg[item_id] += 1\n",
        "            with open(test % phase_id) as fin:\n",
        "                for line in fin:\n",
        "                    user_id, item_id, timestamp = line.split(',')\n",
        "                    user_id, item_id, timestamp = (\n",
        "                        int(user_id), int(item_id), float(timestamp))\n",
        "                    item_deg[item_id] += 1\n",
        "            with open(answer % phase_id) as fin:\n",
        "                for line in fin:\n",
        "                    user_id, item_id, timestamp = line.split(',')\n",
        "                    user_id, item_id, timestamp = (\n",
        "                        int(user_id), int(item_id), float(timestamp))\n",
        "                    if mode == 'online':\n",
        "                       assert user_id % 11 == phase_id\n",
        "                    print(phase_id, user_id, item_id, item_deg[item_id],\n",
        "                          sep=',', file=fout)\n",
        "                    \n",
        "      "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yrnb5l8_K32u",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# submit_fname is the path to the file submitted by the participants.\n",
        "# debias_track_answer.csv is the standard answer, which is not released.\n",
        "def evaluate_target_phase(submit_fname, target_phase, \n",
        "             answer_fname='debias_track_answer.csv', current_time=None):\n",
        "    schedule_in_unix_time = [\n",
        "        0,  # ........ 1970-01-01 08:00:00 (T=0)\n",
        "        1586534399,  # 2020-04-10 23:59:59 (T=1)\n",
        "        1587139199,  # 2020-04-17 23:59:59 (T=2)\n",
        "        1587743999,  # 2020-04-24 23:59:59 (T=3)\n",
        "        1588348799,  # 2020-05-01 23:59:59 (T=4)\n",
        "        1588953599,  # 2020-05-08 23:59:59 (T=5)\n",
        "        1589558399,  # 2020-05-15 23:59:59 (T=6)\n",
        "        1590163199,  # 2020-05-22 23:59:59 (T=7)\n",
        "        1590767999,  # 2020-05-29 23:59:59 (T=8)\n",
        "        1591372799  # .2020-06-05 23:59:59 (T=9)\n",
        "    ]\n",
        "    assert len(schedule_in_unix_time) == 10\n",
        "    for i in range(1, len(schedule_in_unix_time) - 1):\n",
        "        # 604800 == one week\n",
        "        assert schedule_in_unix_time[i] + 604800 == schedule_in_unix_time[i + 1]\n",
        "\n",
        "    if current_time is None:\n",
        "        current_time = int(time.time())\n",
        "    print('current_time:', current_time)\n",
        "    print('date_time:', datetime.datetime.fromtimestamp(current_time))\n",
        "    current_phase = 0\n",
        "    while (current_phase < 9) and (\n",
        "            current_time > schedule_in_unix_time[current_phase + 1]):\n",
        "        current_phase += 1\n",
        "    print('current_phase:', current_phase)\n",
        "  \n",
        "    try:\n",
        "        answers = [{} for _ in range(10)]\n",
        "        with open(answer_fname, 'r') as fin:\n",
        "            for line in fin:\n",
        "                line = [int(x) for x in line.split(',')]\n",
        "                phase_id, user_id, item_id, item_degree = line\n",
        "                # assert user_id % 11 == phase_id\n",
        "                # exactly one test case for each user_id\n",
        "                answers[phase_id][user_id] = (item_id, item_degree)\n",
        "    except Exception as e:\n",
        "        return print('server-side error: answer file incorrect', e)\n",
        "\n",
        "    try:\n",
        "        predictions = {}\n",
        "        with open(submit_fname, 'r') as fin:\n",
        "            for line in fin:\n",
        "                line = line.strip()\n",
        "                if line == '':\n",
        "                    continue\n",
        "                line = line.split(',')\n",
        "                user_id = int(line[0])\n",
        "                if user_id in predictions:\n",
        "                    return print('submitted duplicate user_ids')\n",
        "                item_ids = [int(i) for i in line[1:]]\n",
        "                if len(item_ids) != 50:\n",
        "                    return print('each row need have 50 items')\n",
        "                if len(set(item_ids)) != 50:\n",
        "                    return print('each row need have 50 DISTINCT items')\n",
        "                predictions[user_id] = item_ids\n",
        "    except Exception as e:\n",
        "        return print('submission not in correct format,e={}'.format(e))\n",
        "\n",
        "    scores = np.zeros(4, dtype=np.float32)\n",
        "\n",
        "    # The final winning teams will be decided based on phase T=7,8,9 only.\n",
        "    # We thus fix the scores to 1.0 for phase 0,1,2,...,6 at the final stage.\n",
        "    if current_phase >= 7:  # if at the final stage, i.e., T=7,8,9\n",
        "        scores += 7.0  # then fix the scores to 1.0 for phase 0,1,2,...,6\n",
        "    phase_beg = (7 if (current_phase >= 7) else 0)\n",
        "    phase_end = current_phase + 1\n",
        "    for phase_id in [target_phase]:\n",
        "        for user_id in answers[phase_id]:\n",
        "            if user_id not in predictions:\n",
        "                return print('user_id %d of phase %d not in submission' % (\n",
        "                        user_id, phase_id))\n",
        "        try:\n",
        "            # We sum the scores from all the phases, instead of averaging them.\n",
        "            phase_score = evaluate_each_phase(predictions, answers[phase_id])\n",
        "            print('phase_id={}, score={}'.format(phase_id, phase_score))\n",
        "            scores += phase_score\n",
        "        except Exception as _:\n",
        "            return print('error occurred during evaluation')\n",
        "    \n",
        "    print(\"score={},\\nhitrate_50_full={},\\nndcg_50_full={},\\nhitrate_50_half={}, \\nndcg_50_half={}\".format(\n",
        "        float(scores[0]), float(scores[2]), float(scores[0]), float(scores[3]), float(scores[1])\n",
        "    ))\n",
        "    return scores[0]\n",
        "    # return report_score(\n",
        "    #     stdout, score=float(scores[0]),\n",
        "    #     ndcg_50_full=float(scores[0]), ndcg_50_half=float(scores[1]),\n",
        "    #     hitrate_50_full=float(scores[2]), hitrate_50_half=float(scores[3]))\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a64o_36qRZUe",
        "colab_type": "text"
      },
      "source": [
        "### \bCreate Answers"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RX9KdQSCw9IK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "# read answers(val data) in offline_answer_path, and output to output_answer_fname\n",
        "_create_answer_file_for_evaluation(output_answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xwfxWQ7JRdoy",
        "colab_type": "text"
      },
      "source": [
        "### Eval"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uInPmytOBG32",
        "colab_type": "text"
      },
      "source": [
        "#### ranking"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TWLa1uv33h0J",
        "colab_type": "code",
        "outputId": "436527ee-219e-4856-adc3-c256bc3f1bec",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_itemcf_ranking_v2.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # topk"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588232227\n",
            "date_time: 2020-04-30 07:37:07\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.05431427 0.03196861 0.1262778  0.08512931]\n",
            "phase_id=1, score=[0.0563328  0.03113179 0.1373117  0.0839779 ]\n",
            "phase_id=2, score=[0.0572561  0.03215351 0.13846155 0.09133489]\n",
            "phase_id=3, score=[0.06205731 0.03299478 0.13910447 0.08323699]\n",
            "score=0.22996050119400024,\n",
            "hitrate_50_full=0.5411555171012878,\n",
            "ndcg_50_full=0.22996050119400024,\n",
            "hitrate_50_half=0.3436791002750397, \n",
            "ndcg_50_half=0.1282486915588379\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.2299605"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I5RTpWgFRNQK",
        "colab_type": "code",
        "outputId": "07b23173-e8df-48da-f9a3-b52860e0108f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_itemcf_ranking_v2.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # topk"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588171995\n",
            "date_time: 2020-04-29 14:53:15\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.05633515 0.031284   0.12206855 0.07112069]\n",
            "phase_id=1, score=[0.05699028 0.0297606  0.13615295 0.07734807]\n",
            "phase_id=2, score=[0.05671949 0.02964629 0.13076924 0.07611241]\n",
            "phase_id=3, score=[0.06344776 0.03046726 0.13611941 0.0716763 ]\n",
            "score=0.2334926724433899,\n",
            "hitrate_50_full=0.5251101851463318,\n",
            "ndcg_50_full=0.2334926724433899,\n",
            "hitrate_50_half=0.29625749588012695, \n",
            "ndcg_50_half=0.12115815281867981\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.23349267"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cTd8MYYmRh_Z",
        "colab_type": "code",
        "outputId": "d205e3d1-1b58-457f-b97a-aca606360b50",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_itemcf_ranking_v2.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # topk"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588169417\n",
            "date_time: 2020-04-29 14:10:17\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.05691471 0.03626158 0.1232712  0.08297414]\n",
            "phase_id=1, score=[0.05686697 0.03338301 0.13325608 0.0839779 ]\n",
            "phase_id=2, score=[0.06035042 0.03519556 0.1408284  0.09367681]\n",
            "phase_id=3, score=[0.06496235 0.03615527 0.14149253 0.08439306]\n",
            "score=0.23909443616867065,\n",
            "hitrate_50_full=0.5388482213020325,\n",
            "ndcg_50_full=0.23909443616867065,\n",
            "hitrate_50_half=0.34502190351486206, \n",
            "ndcg_50_half=0.14099541306495667\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.23909444"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GUV65YR2P6ER",
        "colab_type": "code",
        "outputId": "12da893a-d337-4621-af15-f884cd892694",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_topk_v2.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # topk"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588087230\n",
            "date_time: 2020-04-28 15:20:30\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.00881705 0.00176447 0.03126879 0.00646552]\n",
            "phase_id=1, score=[0.00750677 0.00289712 0.02433372 0.01104972]\n",
            "phase_id=2, score=[0.00539894 0.00039032 0.01597633 0.00117096]\n",
            "phase_id=3, score=[0.00612162 0.0007294  0.0161194  0.00115607]\n",
            "score=0.02784438244998455,\n",
            "hitrate_50_full=0.08769825100898743,\n",
            "ndcg_50_full=0.02784438244998455,\n",
            "hitrate_50_half=0.019842270761728287, \n",
            "ndcg_50_half=0.005781307816505432\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.027844382"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3kxVCNggBKJK",
        "colab_type": "text"
      },
      "source": [
        "#### content"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gUfCL_4IPNbK",
        "colab_type": "code",
        "outputId": "c594aced-186d-405d-c24a-2fc2a7e055d6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_content_v1.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # content"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588084935\n",
            "date_time: 2020-04-28 14:42:15\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.01705771 0.01573092 0.04630186 0.04418103]\n",
            "phase_id=1, score=[0.01608825 0.01719159 0.05156431 0.05303868]\n",
            "phase_id=2, score=[0.02322774 0.02524391 0.06568047 0.07259953]\n",
            "phase_id=3, score=[0.0185796  0.0221896  0.05552239 0.06589595]\n",
            "score=0.07495329529047012,\n",
            "hitrate_50_full=0.21906903386116028,\n",
            "ndcg_50_full=0.07495329529047012,\n",
            "hitrate_50_half=0.23571518063545227, \n",
            "ndcg_50_half=0.08035602420568466\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.074953295"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H1FhfceGBS0S",
        "colab_type": "text"
      },
      "source": [
        "#### merged"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DZL1AddIMASn",
        "colab_type": "code",
        "outputId": "384029d3-d839-4016-d2b6-2221d9d99387",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_merged_bi_itemcf_prod_V5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # itemcf+bi"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588847407\n",
            "date_time: 2020-05-07 10:30:07\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05531776 0.04054064 0.1175     0.08872651]\n",
            "phase_id=1, score=[0.06476017 0.03918603 0.1375     0.08548009]\n",
            "phase_id=2, score=[0.06129935 0.04525077 0.145625   0.10449575]\n",
            "phase_id=3, score=[0.05409797 0.03236645 0.13125    0.08114558]\n",
            "phase_id=4, score=[0.0658744  0.05347476 0.149375   0.10974106]\n",
            "score=0.3013496398925781,\n",
            "hitrate_50_full=0.6812500357627869,\n",
            "ndcg_50_full=0.3013496398925781,\n",
            "hitrate_50_half=0.4695890247821808, \n",
            "ndcg_50_half=0.21081864833831787\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.30134964"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qH-vL3vN0vUE",
        "colab_type": "code",
        "outputId": "34e59605-ecf3-4fed-88b6-ec6f4d6c6f5b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_merged_swing_itemcf_bi_prod_V5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # itemcf+swing+bi"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588736169\n",
            "date_time: 2020-05-06 03:36:09\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05576802 0.03677448 0.1225     0.08768267]\n",
            "phase_id=1, score=[0.06581796 0.03465415 0.14       0.08196721]\n",
            "phase_id=2, score=[0.0602272  0.04141461 0.14375    0.09842041]\n",
            "phase_id=3, score=[0.05372899 0.02661713 0.125      0.07398568]\n",
            "phase_id=4, score=[0.0646553  0.05008801 0.148125   0.10357583]\n",
            "score=0.3001974821090698,\n",
            "hitrate_50_full=0.6793749928474426,\n",
            "ndcg_50_full=0.3001974821090698,\n",
            "hitrate_50_half=0.44563180208206177, \n",
            "ndcg_50_half=0.18954840302467346\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.30019748"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DCJ42vY1sacQ",
        "colab_type": "code",
        "outputId": "0d451172-ddfa-4d07-969a-0511c6811a77",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_merged_swing_itemcf_prod_V5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # swing+itemcf"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588847649\n",
            "date_time: 2020-05-07 10:34:09\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05310708 0.03697404 0.11875    0.0908142 ]\n",
            "phase_id=1, score=[0.06404969 0.03590831 0.138125   0.08313818]\n",
            "phase_id=2, score=[0.05853497 0.04425216 0.148125   0.10814095]\n",
            "phase_id=3, score=[0.05208233 0.02997804 0.125      0.08353222]\n",
            "phase_id=4, score=[0.06276943 0.05040764 0.14875    0.10850801]\n",
            "score=0.29054349660873413,\n",
            "hitrate_50_full=0.6787499785423279,\n",
            "ndcg_50_full=0.29054349660873413,\n",
            "hitrate_50_half=0.47413355112075806, \n",
            "ndcg_50_half=0.1975201964378357\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.2905435"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_IXx4fDYsRyB",
        "colab_type": "code",
        "outputId": "7084f995-b33a-4b54-e4bc-259759f5ff31",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_merged_usercf_itemcf_prod_V5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # itemcf+usercf     "
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588847536\n",
            "date_time: 2020-05-07 10:32:16\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.04881728 0.04338655 0.11       0.09394572]\n",
            "phase_id=1, score=[0.05950935 0.04019093 0.1275     0.07962529]\n",
            "phase_id=2, score=[0.05597435 0.0469877  0.140625   0.10692588]\n",
            "phase_id=3, score=[0.0493467  0.03501153 0.121875   0.0823389 ]\n",
            "phase_id=4, score=[0.06135697 0.05726045 0.14125    0.1109741 ]\n",
            "score=0.27500465512275696,\n",
            "hitrate_50_full=0.6412500143051147,\n",
            "ndcg_50_full=0.27500465512275696,\n",
            "hitrate_50_half=0.4738098978996277, \n",
            "ndcg_50_half=0.2228371649980545\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.27500466"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OSjo0KV5F6KG",
        "colab_type": "code",
        "outputId": "7c9cda06-d4a7-4854-e423-73738359119f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_merged_cf_prod_V5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # itemcf+swing+bi+usercf"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588847242\n",
            "date_time: 2020-05-07 10:27:22\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05579004 0.03755619 0.123125   0.08872651]\n",
            "phase_id=1, score=[0.06769208 0.03797466 0.14375    0.08665106]\n",
            "phase_id=2, score=[0.06127562 0.04276738 0.15375    0.10449575]\n",
            "phase_id=3, score=[0.05699316 0.03278254 0.140625   0.09785203]\n",
            "phase_id=4, score=[0.06445526 0.0504238  0.15125    0.10850801]\n",
            "score=0.3062061667442322,\n",
            "hitrate_50_full=0.7124999761581421,\n",
            "ndcg_50_full=0.3062061667442322,\n",
            "hitrate_50_half=0.48623335361480713, \n",
            "ndcg_50_half=0.20150458812713623\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.30620617"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 81
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g4Byenu1sRHo",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "G493q8diBWUm",
        "colab_type": "text"
      },
      "source": [
        "#### swing"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QnvEyYW-_bIW",
        "colab_type": "code",
        "outputId": "c82e2e5a-c09d-48ab-94bc-e632f15ce1c1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "swing_score = evaluate(submit_fname=output_path + \"/baseline_swing_v5.csv\", \n",
        "                  answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588692570\n",
            "date_time: 2020-05-05 15:29:30\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.03969191 0.01383153 0.085      0.02818372]\n",
            "phase_id=1, score=[0.04537091 0.01391804 0.1025     0.03395785]\n",
            "phase_id=2, score=[0.03840959 0.01464578 0.089375   0.03159174]\n",
            "phase_id=3, score=[0.03918154 0.01019358 0.085625   0.0274463 ]\n",
            "phase_id=4, score=[0.04458172 0.02142944 0.100625   0.04808878]\n",
            "score=0.2072356790304184,\n",
            "hitrate_50_full=0.46312499046325684,\n",
            "ndcg_50_full=0.2072356790304184,\n",
            "hitrate_50_half=0.16926836967468262, \n",
            "ndcg_50_half=0.07401836663484573\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NrjtvEztysmZ",
        "colab_type": "code",
        "outputId": "0831d350-8d81-4354-ea5b-9745e933a592",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "swing_score = evaluate(submit_fname=output_path + \"/baseline_swing_v5.csv\", \n",
        "                  answer_fname=output_path +'/debias_track_answer.csv') # 加入content"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588735944\n",
            "date_time: 2020-05-06 03:32:24\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.03973202 0.01412783 0.083125   0.02922756]\n",
            "phase_id=1, score=[0.04650062 0.01482858 0.105      0.03395785]\n",
            "phase_id=2, score=[0.03846044 0.01638059 0.091875   0.03402187]\n",
            "phase_id=3, score=[0.03983149 0.01126237 0.086875   0.02983293]\n",
            "phase_id=4, score=[0.04597548 0.02255498 0.103125   0.04808878]\n",
            "score=0.2105000615119934,\n",
            "hitrate_50_full=0.4699999988079071,\n",
            "ndcg_50_full=0.2105000615119934,\n",
            "hitrate_50_half=0.1751289814710617, \n",
            "ndcg_50_half=0.0791543573141098\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TDRRvPT7n0gH",
        "colab_type": "code",
        "outputId": "808a9d8b-8fa1-4059-9af7-c1a4063eac24",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "swing_score = evaluate(submit_fname=output_path + \"/baseline_swing_v5.csv\", \n",
        "                  answer_fname=output_path +'/debias_track_answer.csv') # 加入content"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588846351\n",
            "date_time: 2020-05-07 10:12:31\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.03914815 0.01420305 0.0825     0.02922756]\n",
            "phase_id=1, score=[0.04539801 0.01423333 0.105      0.03395785]\n",
            "phase_id=2, score=[0.03878891 0.01726873 0.09375    0.03645201]\n",
            "phase_id=3, score=[0.03894826 0.01123129 0.086875   0.02983293]\n",
            "phase_id=4, score=[0.04579657 0.02352817 0.104375   0.04808878]\n",
            "score=0.20807990431785583,\n",
            "hitrate_50_full=0.4724999964237213,\n",
            "ndcg_50_full=0.20807990431785583,\n",
            "hitrate_50_half=0.17755910754203796, \n",
            "ndcg_50_half=0.08046455681324005\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OTfUrlkjRD7e",
        "colab_type": "code",
        "outputId": "ae69f9f0-4b39-4b84-ff02-cdb3f3273651",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "swing_score = evaluate(submit_fname=output_path + \"/baseline_swing_v8.csv\", \n",
        "                  answer_fname=output_path +'/debias_track_answer.csv') # 所有阶段数据。但是对每个阶段，只使用该阶段的item"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588488064\n",
            "date_time: 2020-05-03 06:41:04\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.04611659 0.02455347 0.10125    0.05414013]\n",
            "phase_id=1, score=[0.04119527 0.01783129 0.1025     0.04112808]\n",
            "phase_id=2, score=[0.04439043 0.01844744 0.103125   0.04848485]\n",
            "phase_id=3, score=[0.03729697 0.01721874 0.093125   0.04252734]\n",
            "phase_id=4, score=[0.03911983 0.0156168  0.094375   0.04310345]\n",
            "score=0.20811907947063446,\n",
            "hitrate_50_full=0.49437499046325684,\n",
            "ndcg_50_full=0.20811907947063446,\n",
            "hitrate_50_half=0.22938385605812073, \n",
            "ndcg_50_half=0.09366774559020996\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8vDyqW4RBYHN",
        "colab_type": "text"
      },
      "source": [
        "#### usercf"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wqeZMv5qKS8S",
        "colab_type": "code",
        "outputId": "b5dd2ac7-00ce-46cf-fe99-785272face23",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_usercf_v5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588847071\n",
            "date_time: 2020-05-07 10:24:31\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.04483164 0.02986231 0.114375   0.08246347]\n",
            "phase_id=1, score=[0.05301827 0.03082772 0.126875   0.07845433]\n",
            "phase_id=2, score=[0.04681583 0.03225856 0.131875   0.09113001]\n",
            "phase_id=3, score=[0.05055523 0.02886515 0.121875   0.0823389 ]\n",
            "phase_id=4, score=[0.04648095 0.03835057 0.1175     0.08754624]\n",
            "score=0.24170193076133728,\n",
            "hitrate_50_full=0.612500011920929,\n",
            "ndcg_50_full=0.24170193076133728,\n",
            "hitrate_50_half=0.4219329357147217, \n",
            "ndcg_50_half=0.16016432642936707\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.24170193"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "u7cCrSc2BZpu",
        "colab_type": "text"
      },
      "source": [
        "#### itemcf"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bhvGQiywZqcE",
        "colab_type": "code",
        "outputId": "c8bad045-d409-48bd-be27-4c6dec7e5ec0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        }
      },
      "source": [
        "\n",
        "item_aware_score = evaluate(submit_fname=output_path + \"/baseline_itemcf_J_v0.1.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1589717709\n",
            "date_time: 2020-05-17 12:15:09\n",
            "current_phase: 6\n",
            "phase_id=0, score=[0.03888857 0.04183277 0.06975346 0.06573276]\n",
            "phase_id=1, score=[0.04165721 0.04981231 0.06952491 0.07734807]\n",
            "phase_id=2, score=[0.02426972 0.02073091 0.04733728 0.03864169]\n",
            "phase_id=3, score=[0.0276337  0.02905134 0.05492537 0.05549133]\n",
            "phase_id=4, score=[0.02518157 0.02777075 0.05327869 0.05730994]\n",
            "phase_id=5, score=[0.02147476 0.02255099 0.04949944 0.04714912]\n",
            "phase_id=6, score=[0.04363883 0.03033652 0.10104338 0.07574094]\n",
            "score=0.22274434566497803,\n",
            "hitrate_50_full=0.44536253809928894,\n",
            "ndcg_50_full=0.22274434566497803,\n",
            "hitrate_50_half=0.4174138307571411, \n",
            "ndcg_50_half=0.2220856249332428\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "g1pVe5Xj0hyQ",
        "colab_type": "code",
        "outputId": "d0086ead-8400-4d20-8129-7da2f9b0011d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        }
      },
      "source": [
        "item_aware_score = evaluate(submit_fname=output_path + \"/baseline_itemcf_J_v0.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1589722106\n",
            "date_time: 2020-05-17 13:28:26\n",
            "current_phase: 6\n",
            "phase_id=0, score=[0.01001888 0.00859571 0.02465424 0.02155172]\n",
            "phase_id=1, score=[0.00504449 0.00593169 0.01274623 0.01436464]\n",
            "phase_id=2, score=[0.00249079 0.00253998 0.00828402 0.00936768]\n",
            "phase_id=3, score=[0.00277496 0.00250007 0.00776119 0.00693642]\n",
            "phase_id=4, score=[0.00388849 0.00297963 0.00995316 0.00935673]\n",
            "phase_id=5, score=[0.00333254 0.00258225 0.01167964 0.00986842]\n",
            "phase_id=6, score=[0.03894879 0.02678847 0.09610105 0.07025247]\n",
            "score=0.06649894267320633,\n",
            "hitrate_50_full=0.17117953300476074,\n",
            "ndcg_50_full=0.06649894267320633,\n",
            "hitrate_50_half=0.14169809222221375, \n",
            "ndcg_50_half=0.051917798817157745\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1RW-sYm8JxvZ",
        "colab_type": "code",
        "outputId": "e6902b40-284e-490a-a4af-9d576f5b0aa0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        }
      },
      "source": [
        "item_aware_score = evaluate(submit_fname=output_path + \"/baseline_itemcf_v1.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1589695739\n",
            "date_time: 2020-05-17 06:08:59\n",
            "current_phase: 6\n",
            "phase_id=0, score=[0.05826443 0.03924764 0.1262778  0.0862069 ]\n",
            "phase_id=1, score=[0.05805666 0.03857392 0.13789108 0.09834254]\n",
            "phase_id=2, score=[0.06512814 0.04380858 0.14615385 0.10538641]\n",
            "phase_id=3, score=[0.06784842 0.04465891 0.15044776 0.10057803]\n",
            "phase_id=4, score=[0.06865654 0.05538133 0.1586651  0.12397661]\n",
            "phase_id=5, score=[0.05948687 0.04137931 0.15628476 0.1118421 ]\n",
            "phase_id=6, score=[0.07347859 0.05051387 0.1619989  0.11086718]\n",
            "score=0.45091962814331055,\n",
            "hitrate_50_full=1.0377192497253418,\n",
            "ndcg_50_full=0.45091962814331055,\n",
            "hitrate_50_half=0.7371997833251953, \n",
            "ndcg_50_half=0.3135635554790497\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r2NA-EnARjQv",
        "colab_type": "code",
        "outputId": "6b80bc62-875b-4d1c-d434-be7d55967f15",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        }
      },
      "source": [
        "item_aware_score = evaluate(submit_fname=output_path + \"/baseline_itemcf_v5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # 考虑content"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1589697599\n",
            "date_time: 2020-05-17 06:39:59\n",
            "current_phase: 6\n",
            "phase_id=0, score=[0.05988082 0.04748497 0.1262778  0.09806035]\n",
            "phase_id=1, score=[0.05590829 0.0464769  0.1419467  0.1038674 ]\n",
            "phase_id=2, score=[0.05976747 0.04872143 0.13846155 0.10421546]\n",
            "phase_id=3, score=[0.06197795 0.05059453 0.13970149 0.09710982]\n",
            "phase_id=4, score=[0.06295248 0.05562443 0.1440281  0.11812866]\n",
            "phase_id=5, score=[0.06052082 0.05094159 0.14738598 0.11842106]\n",
            "phase_id=6, score=[0.07102142 0.05997963 0.16694124 0.1273326 ]\n",
            "score=0.43202924728393555,\n",
            "hitrate_50_full=1.0047428607940674,\n",
            "ndcg_50_full=0.43202924728393555,\n",
            "hitrate_50_half=0.7671353816986084, \n",
            "ndcg_50_half=0.35982346534729004\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1iKHgNGtTBDZ",
        "colab_type": "code",
        "outputId": "7f9ab67f-4120-44ab-ed80-baa3fc19bf7a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 278
        }
      },
      "source": [
        "item_aware_score = evaluate(submit_fname=output_path + \"/baseline_itemcf_v6.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # content 双向"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1589699357\n",
            "date_time: 2020-05-17 07:09:17\n",
            "current_phase: 6\n",
            "phase_id=0, score=[0.05943941 0.04905468 0.12988575 0.10560345]\n",
            "phase_id=1, score=[0.05554119 0.04787156 0.14020857 0.11381216]\n",
            "phase_id=2, score=[0.06409562 0.0535158  0.14201184 0.11241218]\n",
            "phase_id=3, score=[0.06525324 0.05370773 0.14507462 0.10751445]\n",
            "phase_id=4, score=[0.06512102 0.05972685 0.15105386 0.13450292]\n",
            "phase_id=5, score=[0.05969381 0.051167   0.15016685 0.12390351]\n",
            "phase_id=6, score=[0.06896532 0.05727677 0.15925315 0.11964874]\n",
            "score=0.4381096065044403,\n",
            "hitrate_50_full=1.0176546573638916,\n",
            "ndcg_50_full=0.4381096065044403,\n",
            "hitrate_50_half=0.81739741563797, \n",
            "ndcg_50_half=0.37232038378715515\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qjfvqEw1S6mn",
        "colab_type": "code",
        "outputId": "513588d3-33bd-4272-c465-f8918389e205",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "!head -100 {output_path + \"/baseline_itemcf_v5.csv\"}"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2,23824,4207,4983,4168,7053,93552,104635,18297,23028,109065,4619,100283,5291,19695,3907,74411,8481,977,14925,25177,115561,115599,56960,45866,51933,73084,36399,54712,10054,4504,40093,5663,116491,33602,116531,5514,56825,111576,6248,20281,13577,47164,4102,102784,111215,11886,54142,8198,2602,4175\n",
            "3,64509,114094,113582,68822,95508,51939,99557,115003,73822,96087,112174,51966,84922,45313,106442,113733,32683,92761,83618,105381,37127,82091,59650,6427,88385,95433,105308,112329,100042,98556,112177,55578,86401,103612,81876,68987,6436,71594,42389,31867,85868,2838,112907,69640,6392,80324,63512,82324,106260,20577\n",
            "6,93189,105788,27948,73465,59765,4671,24743,28977,36537,831,53547,1414,287,5249,8010,3196,37588,75017,12132,107256,101578,107075,105313,106909,11936,19939,22408,106080,68771,18551,25752,71721,35144,107747,14437,110812,109607,53262,16947,79737,69995,53488,87504,61830,96863,61625,14260,30951,69440,29356\n",
            "9,8552,28034,17710,46565,65525,95295,42163,38285,21476,18781,88371,30767,109463,63439,63216,35702,96862,40493,100713,38846,29476,69083,50753,62902,75771,78360,99141,41220,6230,26515,67481,52328,31992,113733,49030,95536,114463,24232,69187,55892,88062,59717,4568,107895,4387,47697,55551,46373,27179,4784\n",
            "10,96274,26664,52009,86978,7298,68096,79829,35393,102075,57701,2954,11166,43104,85589,10404,88804,2427,35012,12892,94823,51603,44551,24496,17459,5490,90324,17210,2331,41355,22346,11615,19809,98453,108164,34811,74012,2798,47940,20,75205,486,11250,107138,42458,4176,38070,75694,54994,7484,86467\n",
            "11,88639,107410,97305,78804,13883,7685,41118,96461,22808,823,81835,10661,24824,16220,50043,25635,76460,28233,28210,41136,3492,22113,38163,76062,25546,8052,109667,112719,81447,23323,20317,19047,28873,16018,28427,10104,8698,81924,12652,23623,6385,106324,79875,44328,71613,42260,20284,10528,59376,24917\n",
            "13,84395,29444,39856,40145,42230,81672,35164,32908,43964,16950,66980,21082,96910,39021,57533,60423,10177,64936,1933,94015,60365,78601,48417,97522,89237,98112,15649,71738,32580,36304,100997,108782,33195,39945,105172,18354,108028,96361,57140,101201,107207,106965,114044,29656,97518,91581,77301,97582,37073,105666\n",
            "19,63715,95746,8217,56077,28250,30963,72387,2838,29941,4446,30165,11558,86943,13891,64070,97824,70130,109101,59135,23385,84647,48691,61433,85528,57526,68503,99319,94465,73699,56381,51096,47711,91181,72302,14838,4195,5676,30980,35297,83427,84375,49851,67746,50193,84889,25613,19103,54123,106285,42703\n",
            "26,90926,66177,38891,112995,47875,112070,93024,111077,90237,65344,107032,92421,36127,65285,92433,37127,110172,79532,88297,80341,7179,107295,36071,80735,108205,104670,92861,25356,73832,12530,96013,27600,48034,25105,28137,101553,36683,49308,26962,78709,79890,86734,70844,96087,90990,101183,113577,79782,94852,77757\n",
            "34,77242,75725,104899,71519,14305,105521,95468,86749,44106,22380,75492,18173,16489,77638,77482,22471,74257,23883,87234,100528,60347,83953,79813,97355,24197,4698,14723,78861,4923,103458,108057,14819,97885,23439,41879,96779,81675,38424,33845,57995,96416,110192,73893,111599,5348,99289,25264,893,50661,61261\n",
            "42,95696,38223,36567,26206,43887,27484,41557,46317,96028,91310,10297,101677,24853,75815,19564,30515,14759,2423,7103,43139,54326,59454,90958,33524,2552,5097,40486,25658,42260,9236,32033,18167,52129,12961,74856,83534,18578,35695,1621,12758,59563,81337,30345,27490,111085,55421,36485,17028,87765,40181\n",
            "46,115009,113026,110804,45935,58931,7225,24591,25430,79491,6491,13308,21911,115908,39165,112859,14691,112784,77542,75043,93473,4765,1161,2570,51716,48604,17820,72943,32531,37259,36482,40325,114174,3504,30608,53687,95979,18064,31271,52601,6475,11288,112258,18536,54786,85970,73272,669,26751,1020,91113\n",
            "47,81023,93252,111622,16752,47402,69930,43669,16425,28427,97419,36995,13207,26394,15068,28957,10042,80816,12124,3524,53508,94795,2224,34879,46530,78323,1571,8061,89495,83598,5507,63963,50613,68031,38924,101179,1199,78397,76735,82479,4283,12713,10555,113119,4463,58486,76134,31617,11259,109600,111457\n",
            "53,85447,114626,114896,32217,86751,113504,111215,112916,49163,21351,51963,19230,6491,7225,73157,113442,1973,76996,110519,115272,77248,8453,14246,112388,13827,48848,11354,1477,114107,61586,31192,42949,63734,112514,89568,13123,39648,71657,3198,12918,9127,16659,52098,44818,109226,113482,114204,113941,37473,5645\n",
            "59,52693,105842,109237,27337,111114,76943,5320,108907,111225,855,55349,110412,52131,86755,109635,112560,114108,105489,115059,106352,31776,5984,82529,23226,108068,113362,110744,114055,32023,79116,92987,86218,13845,80085,100058,35655,112303,79315,2226,64599,91130,83579,56429,75835,102129,101172,90091,52618,71954,111952\n",
            "61,46377,107941,53300,85276,25473,41604,3028,39763,57719,16362,31692,60,47356,62781,87942,58664,68590,35653,30865,86,1925,93352,33257,84738,7185,110559,32990,16400,8072,40160,67605,2518,62366,34701,27211,59311,80969,70310,3588,13135,28395,52993,39887,100784,17475,91215,89441,2753,107208,65476\n",
            "62,90566,103967,48538,66680,84663,46605,100661,77165,55132,46241,72931,98640,104462,87299,99917,41566,39941,83597,74772,60175,106799,57872,59406,43439,33827,32184,48963,94905,94827,54416,93528,67994,91477,78831,71105,101380,36100,84974,112873,21449,90997,43628,111401,84727,54019,27099,63173,11762,97610,54277\n",
            "66,43211,93353,85158,110293,23748,26758,66752,80782,50506,85159,72970,76663,82194,72078,23613,72872,20956,83000,24923,21020,115018,91976,42952,48089,46689,77822,34607,30923,34850,18207,13224,92024,87420,64436,10716,31792,8219,3595,78780,53657,90064,41619,45106,60086,27879,48020,30754,28663,111464,96135\n",
            "77,17930,51596,113828,29396,21082,104219,28915,43269,102898,12399,80589,38701,40100,50524,23947,105275,12888,73471,115852,52977,44621,67702,26899,6605,36896,46865,26589,23924,26906,85492,19855,2094,113730,88593,52535,107675,16029,961,2777,26644,23816,37152,17663,113332,7746,30940,12064,116550,50694,116858\n",
            "78,64334,40925,3684,5813,37596,68701,8810,33876,92115,28515,52431,64477,71497,12041,42903,1545,35254,34799,12111,39849,7478,54447,57769,40857,29045,66251,44210,7179,28073,53553,11768,19045,89707,77495,22870,29813,33016,49223,76095,94531,63019,98752,108869,53566,92645,58111,1178,9666,1182,198\n",
            "81,68658,47984,52551,112866,39007,93584,65192,110723,39381,17879,80134,19001,106164,105386,25486,57838,63229,34597,22558,53393,14547,96885,14384,51694,48352,17657,79424,40578,42748,31402,18265,73511,96600,93345,71918,97636,20831,50127,43571,81835,33359,9471,11848,17868,95113,103050,41592,17484,37152,107299\n",
            "85,7490,51372,36968,84732,29427,48516,15392,7235,9777,78736,39273,9331,78234,78561,50112,100879,42736,17451,89565,56988,9547,22519,68287,4395,83918,8938,41247,64892,40000,56706,50508,97377,4694,26638,18287,30036,89603,12026,8259,105700,1948,12420,40070,38737,43949,42598,31022,94846,6174,40626\n",
            "88,93044,96640,64238,556,96852,43695,107382,105620,109770,105800,82667,83155,48889,108498,92936,114084,88453,102559,60197,110756,91635,71265,6332,42784,100796,9465,75781,18823,44214,112083,92407,10923,95299,57616,13109,77247,1415,43562,88513,6655,107166,89435,114847,59395,97209,73908,96594,107280,44690,85982\n",
            "97,34309,50218,31768,79087,78318,44905,99092,57381,72354,116911,81600,79247,84435,72527,59444,77852,15297,73491,66838,218,45948,39935,4477,12134,650,41959,110728,29184,64973,66638,84923,4273,75864,19785,61395,39370,21080,39053,72751,21820,29605,8834,113148,61586,15248,86453,52796,86677,71874,50832\n",
            "106,84611,52280,15266,64518,92423,95384,27543,98334,107487,81205,20716,26347,32884,12589,6041,67812,4692,21193,40409,8033,77064,80299,59187,20540,79677,85435,97550,5888,96445,19774,12713,510,4630,85270,60647,85752,50812,76684,34535,9276,93157,26005,10226,59136,78114,95374,82887,42547,56784,67828\n",
            "107,109645,71092,27873,96590,80017,70568,80415,102799,94169,58695,110872,26352,64820,51971,23526,84480,67925,70728,5346,92443,41388,37351,51537,102578,20208,37210,5251,79643,40541,17287,85547,34861,59471,105453,97135,27522,74479,42576,116713,116728,81600,67812,55848,44690,21399,68969,36560,99722,64238,15850\n",
            "115,26637,27495,65618,90992,35420,63621,42798,95128,25762,65473,63971,27024,102212,41047,112989,67799,6739,19466,94466,69507,30650,4984,2646,43887,55449,56952,36913,66426,9731,62402,81052,94112,21385,98425,6113,13791,37111,90813,14079,39348,80339,89594,32726,61042,64774,77359,54874,64588,1854,37812\n",
            "121,11650,4538,18592,97923,10803,59198,6085,38164,16902,15395,19262,12327,40486,74277,15746,39502,105312,486,13566,21078,80766,36234,44279,17453,10268,50108,4389,63355,794,5046,46291,22809,22637,33866,82519,67161,110761,9296,25765,26365,56873,24910,51295,5638,6158,60264,58210,96005,49796,25790\n",
            "132,24213,23047,116135,97377,74551,2173,42991,10396,77375,38242,17687,68310,7484,99808,108832,8938,116057,113941,82224,115515,47703,4725,67869,19150,68466,54284,48562,14360,34385,58256,111191,8259,87451,114268,84732,84999,73727,47092,76902,83347,22972,1085,43221,66833,111223,65899,68491,103941,94618,87931\n",
            "134,100815,94518,89153,93165,93164,81807,2460,12844,3868,9261,5040,100318,5006,108839,34737,106862,21465,22048,1711,11023,70646,15344,29957,25393,21794,116587,29389,79885,52395,304,5007,44177,88658,23201,394,12698,8927,10164,10565,27408,17825,43814,48711,16135,2490,1011,23632,22681,34940,33653\n",
            "148,67015,25998,9134,94407,28027,37757,15753,24170,10990,38616,26407,54058,100497,77371,112183,8537,1815,26717,27754,80007,16691,106888,18997,12631,66496,86206,34577,95436,20830,67519,16489,24405,83945,70334,4394,7445,28322,45393,37278,84269,44056,53561,11383,88346,59448,53667,41362,78785,89478,38211\n",
            "149,4258,11915,90681,16665,62332,14055,98333,60053,71225,63558,97131,76996,67492,23522,14165,60408,58644,20685,69600,25177,74621,9204,72831,56599,107089,45530,68810,98498,36298,23677,104399,36635,61723,97715,60050,95559,4861,18659,84476,34000,19253,10106,69550,9189,96051,15859,22216,8473,86277,21757\n",
            "157,33974,30978,35868,31378,6218,107956,52336,78260,45361,68976,96411,6160,14702,87302,113976,19088,6180,6554,63279,8200,15242,113547,24418,113345,105902,115361,76208,24309,46700,102512,88650,25983,15866,7694,20805,83425,111893,39758,110389,87258,108999,73787,55890,97873,26224,62387,93455,23064,23551,19462\n",
            "158,45207,99209,92072,5769,85295,27745,95018,78184,115908,84113,91900,81522,90312,105922,107839,58608,97999,113224,110350,33052,25723,79359,15891,5543,46304,107856,58604,71828,95187,25989,86071,90020,22613,108247,9624,6891,9291,99548,70054,48110,7640,49248,55971,26574,54476,3048,50464,82225,27416,34575\n",
            "168,16026,51476,26369,70781,33359,75365,73569,97904,997,90288,87712,27950,2496,79244,56379,57793,15545,31653,83709,4897,74127,82092,41884,68369,73083,13041,11764,34528,79507,76502,38331,101328,85482,89921,87310,91541,36439,80129,64650,38403,5247,45767,15094,69662,25196,29813,56053,26898,7485,81553\n",
            "169,62111,12754,111829,38403,26813,94008,114539,3797,111955,53000,88462,72931,49896,115093,54901,50888,35365,54246,38331,111215,6027,29077,45525,70627,36905,62491,27068,88175,59665,20668,112852,116292,83566,40336,52460,86550,38609,96904,48831,99002,57601,19697,114961,45767,79470,5912,4392,16697,81367,99074\n",
            "174,43155,40494,53050,53767,24167,63042,15744,37145,86134,46693,93996,61982,19635,35845,61989,101254,100614,39721,47091,70732,97260,103011,34821,91556,113426,29740,70314,51031,71466,6159,16616,37750,64736,73876,107495,21156,26368,75228,84373,49757,36847,48320,89340,20405,32041,19045,88040,69727,56995,101601\n",
            "181,87420,47839,108563,13005,4447,83190,46761,42059,106891,88900,52860,87670,90379,10716,57329,27324,40139,45579,87807,77999,52542,8134,47382,99136,47622,24847,88549,37485,93133,28668,37606,37702,103612,77966,34470,25731,93312,9508,10676,20038,108132,94177,78129,25959,25957,50506,26139,78495,72805,39653\n",
            "183,32814,66037,39312,49039,7704,64691,46245,116033,77053,103599,45844,43290,104002,12327,116670,253,30633,116661,101448,69327,54326,28991,829,62530,1413,115014,116224,6936,82384,37886,53786,63836,50561,117354,57412,115566,89594,79828,111093,102772,66624,15171,111610,83525,114085,39788,82360,113845,35569,51438\n",
            "185,26773,15092,70731,3069,102618,90645,62670,34391,8324,64834,89007,47185,70461,24155,42313,109812,99048,73070,31206,12541,63271,110187,48244,42291,60616,110143,105822,50545,56344,45129,25508,59011,77165,110963,83284,58271,77562,7956,56993,35191,31323,48367,61577,110964,55781,48015,68844,37982,95942,107450\n",
            "194,2821,66646,2979,101602,89427,56204,51402,6332,53724,95600,78061,71857,74244,108396,71875,103243,72764,8925,102041,6287,109243,26304,17422,67551,66556,99683,13213,10923,87530,1974,87495,92936,86798,14249,36588,107969,73908,13846,2066,63113,56208,42623,80876,54663,78431,72931,62957,52932,84498,94139\n",
            "195,87897,28354,50078,44063,102265,47278,15822,22307,61935,30561,117106,89905,35678,50543,111261,44213,98698,97439,31623,83014,28571,28785,13474,33335,93955,99691,20733,33466,39562,89350,36294,53891,62512,109506,69094,79262,100478,106054,116135,75516,99661,91231,60131,84865,22120,45074,12173,2281,94844,19904\n",
            "200,19956,44385,32542,23831,37973,28820,57570,94309,109323,53185,27680,79375,18798,94495,14490,106514,110522,31136,102041,57510,59325,49817,100856,94005,31599,2798,14870,51403,85815,43806,114793,36614,87435,82999,40590,112736,13636,26876,111379,32115,10550,19179,36499,40378,39956,55230,20900,35691,88987,72476\n",
            "201,104593,38783,47457,52105,104357,75152,97357,81928,96140,78842,82543,71719,115682,107756,71963,52276,105754,84242,100215,111803,103187,63674,105107,73500,82890,77385,22832,37288,53413,22478,47866,101504,88334,68406,77834,7797,45833,49424,103656,17821,98320,111035,94916,77748,53148,62185,105602,81913,96184,81402\n",
            "205,31431,62435,30104,31715,3308,39474,36870,32751,46718,23681,103830,28448,106225,106794,6575,87056,19423,94050,80016,5579,92434,69917,107970,66081,69638,82383,94792,30200,87801,107764,101888,26611,93681,37376,51727,97569,4779,53241,38647,67863,46534,10405,90808,27428,47008,8303,109589,31449,101334,104384\n",
            "207,47749,74066,102913,83994,218,26898,21396,12934,90976,90997,30153,60,51703,3271,90295,101165,87500,101972,78561,107414,91482,108363,77509,84350,53335,77448,21318,112631,105788,70690,95832,27775,39763,45557,45076,12943,72837,40053,42525,20611,15742,32027,97725,8207,24649,24162,49501,69919,52244,81773\n",
            "210,90449,75420,34511,111492,36997,57166,75322,87446,90191,69430,100915,101626,39966,80054,89344,16493,93960,99100,47544,29113,87077,60507,70895,71517,49988,24068,90945,20388,51830,60616,88464,75882,55012,49441,55533,34339,35966,82043,250,42651,102356,95914,23864,60342,74872,64589,90133,17631,8958,82906\n",
            "212,97721,54694,72565,21122,79533,94750,73667,87701,74050,63533,49357,28640,71467,20505,87930,59884,27064,65675,106591,56763,86544,30830,11969,42398,48377,110497,67064,46959,49172,110437,46643,22040,70655,87106,77523,38549,97678,84013,98631,13030,81553,83646,105989,1125,87155,24374,19752,115061,9753,643\n",
            "226,67028,18296,81926,101345,26396,18529,72142,14576,46534,83696,73014,17484,108480,55605,100303,26645,58365,50870,47556,64080,22870,65780,104171,10249,104690,6115,25314,16213,2034,19822,84057,43716,74949,98414,101185,50325,477,47019,100555,83467,36904,19099,87244,16324,8533,89121,66992,95445,23548,85566\n",
            "230,99233,99210,100622,30179,79116,97017,32551,97906,92958,41366,72100,87159,93341,27887,44563,20461,95403,55607,29054,33233,26325,80620,406,20886,61901,33056,44650,59574,4234,12126,3092,84779,81367,52608,11999,76185,78582,19599,6953,21577,45110,3779,35783,112254,51037,23542,85669,91673,87120,49957\n",
            "231,98969,96565,113885,111093,113168,111733,108201,114914,104026,112599,109973,4120,113752,110665,27563,31981,115198,110271,110935,110083,110768,108176,108055,112563,108866,111684,114934,43332,110624,110604,108066,74636,111682,106917,109530,108823,71474,112560,112434,108796,103697,117378,64283,110932,110487,75006,44865,9058,108068,101197\n",
            "235,72678,99336,86305,91747,70136,53388,90345,59282,88703,27068,83368,29138,31889,30102,74013,91390,54018,13186,13696,99227,76569,19438,70403,1852,9949,73084,99372,55679,15234,61072,74264,50382,44466,81889,69632,81170,48659,73852,11921,90945,110025,615,101115,20128,108388,87553,90284,98586,16608,1258\n",
            "238,59717,81729,70504,7153,42458,7154,19890,61299,110386,41487,19345,106118,7158,41046,27932,45875,42688,46738,9012,39766,101887,96026,73060,34024,5815,51633,80350,12877,39750,24167,79567,55893,64710,84770,44081,99112,6739,36495,36918,45187,5914,18800,114389,30999,26288,33134,80792,113298,21431,8549\n",
            "241,25682,41160,26570,6306,3738,43394,26666,23012,20623,36689,18701,2400,4497,956,74215,10018,60072,23,103614,18426,18836,4032,5962,49603,30538,9753,21370,99015,6403,39432,264,58664,24076,61316,74685,4011,82034,64815,13460,39729,94310,9023,73667,99298,26783,36688,6113,40326,16698,24122\n",
            "258,110988,68425,73088,116756,7350,37781,89907,99539,33381,77348,105378,59991,77999,18488,65872,35152,35493,17513,78129,90202,89517,90663,64035,68793,69717,37121,115018,105356,47622,47839,65936,1082,98687,51530,34401,41740,35445,33160,101024,24689,76022,53849,756,72339,110348,8633,24847,5234,85418,32691\n",
            "268,94957,112615,56271,50773,70282,89262,42890,96349,104771,78308,61772,108792,17092,3217,41071,112959,104026,95387,3239,69947,45374,97004,105240,109121,6855,64053,91624,48690,848,41718,106563,49735,89217,112876,82406,107855,104831,93147,740,11379,71010,111285,37697,107988,90888,43042,94363,72271,112305,59042\n",
            "273,66265,54035,38674,80620,72536,19817,67359,71194,80719,70435,107002,88562,54605,97691,31524,59939,51988,59298,61776,55980,64765,76340,63878,97034,60773,77642,20128,71868,68549,98320,114562,39724,13007,71797,41815,64799,87451,5636,75483,70747,93257,98350,82468,94949,113170,36922,74554,6671,105064,8343\n",
            "278,78684,57226,44876,93802,86218,86755,92518,52626,2676,1428,45818,46323,102301,6027,80799,80781,25301,106352,74445,38771,105610,11104,88954,28110,24054,60149,22819,46184,77168,104483,85694,110994,110005,27331,105117,94824,110942,95219,64538,5099,84912,11718,61342,47865,37029,30677,70538,110412,101376,87894\n",
            "279,101593,61728,23752,25045,109521,104084,108289,103090,104384,70916,50568,54096,106787,41266,104386,57349,102811,25075,44982,107806,42302,102343,107339,99471,31593,109591,78286,109286,42516,97281,106384,31140,58524,107198,79405,104487,90877,72865,101919,72387,64617,58784,46974,115424,53518,106855,49241,51259,1500,102349\n",
            "291,31776,100058,82529,32023,55529,114108,109635,55349,44270,99500,3164,42107,2226,27575,114055,76943,102457,52131,38372,50808,69313,25520,75835,92196,27337,855,111225,29641,11517,22720,7188,85954,105954,53953,115848,95594,80589,13712,81258,37885,18789,14315,112805,105579,20208,94890,67304,58824,19592,89856\n",
            "292,78129,57025,79623,77999,97955,92819,73088,94998,69717,29298,109691,92820,63601,40805,92814,78717,37520,107757,17559,107375,89717,54256,99683,59939,10573,98005,63486,68793,78054,113414,47839,92561,92805,103386,101450,50028,75408,102696,30880,50034,111609,6487,89427,96300,76521,86129,7562,75896,32822,80876\n",
            "301,31687,62211,48931,38343,103775,95240,55433,18265,36789,51913,50819,114201,48989,41590,88605,31054,40468,39939,44143,49305,17933,45747,15147,47109,13763,96456,44470,58756,47562,22420,5629,12845,109125,21233,88831,32801,74105,90145,87263,52753,17491,46775,17925,50082,87254,94229,86558,56906,38154,29707\n",
            "303,64327,65286,33519,51190,31023,109635,10009,89537,2246,31776,30728,114600,91058,43913,82529,23226,100058,73035,32023,114055,27337,55349,11452,855,114108,2226,63861,8890,52131,76943,14239,110386,51524,30778,53300,74636,85448,111225,64449,45465,72419,37885,10562,52081,94069,8300,102457,111114,113298,63802\n",
            "306,67343,63063,35802,98835,83548,72325,60543,60461,11903,93099,105889,57194,57758,45206,19763,63582,32531,80064,61097,37017,63916,77665,58296,91967,23346,66484,78889,99338,10786,89200,94676,50936,84469,65433,15869,61191,46184,56478,25108,40154,41385,71375,18509,75448,82987,37750,111664,68979,77333,114131\n",
            "317,55030,62318,82068,87441,42295,52756,45542,19927,12391,30402,116587,2460,10550,100815,98060,76940,5040,22204,114793,46726,94518,93164,16548,101509,89153,12844,21653,81807,5006,42712,101947,72203,108839,83345,78331,26356,53185,82637,71233,27827,6446,88645,6445,114132,5192,41170,11023,55823,77109,52584\n",
            "323,4379,113449,6801,4472,83343,49329,73893,6776,4455,4798,88791,6684,54592,12572,46393,21399,45198,15102,68148,41667,1763,79086,24917,15904,76244,65623,42302,32867,110872,100777,70916,3654,85292,4829,4453,79868,64553,68286,19326,59665,47245,77095,102702,6676,62438,5346,57601,41305,66657,72237\n",
            "327,105989,22371,44640,115061,28945,105127,9758,73330,12513,53415,60896,104977,52187,36033,17635,70042,80248,63062,106046,34742,57849,29458,73521,106324,60084,78475,49546,88355,111546,52712,28648,56458,18786,24025,6710,23995,78531,56970,13370,81491,24880,90042,87151,21848,112432,612,65393,96471,95509,64884\n",
            "331,111516,97686,84018,57471,96364,102022,113460,117011,78389,38246,103425,106309,116114,24221,51856,63714,78364,108772,1913,109215,72227,66701,109484,109228,34410,64449,75779,86107,97272,73250,116118,34915,240,78569,96670,42243,82348,57153,103730,104653,113465,103995,56546,41866,42528,97704,72915,79209,88703,87281\n",
            "337,85554,34461,50467,25987,19881,96420,32816,86442,12479,10,8347,52030,52601,48765,34879,82989,9858,100065,36428,8593,5723,20425,87393,89018,38115,25691,38969,101575,8841,80124,82886,82621,66318,59505,21988,98831,37347,26859,5732,49905,89495,39653,99498,88963,42879,90978,21543,31981,32971,13063\n",
            "339,4379,6801,4472,113449,89278,57322,8769,44247,108547,76751,4453,57804,104943,32143,98139,6036,84452,15271,4829,59502,37988,57104,92110,510,1414,71681,116101,70989,108124,55051,96587,110635,53815,7853,88791,65147,57738,6207,69918,57601,63979,8343,59665,63519,2494,110487,76376,103313,34301,4971\n",
            "341,18076,39258,59889,79473,67111,25952,89929,86967,103676,92999,1833,28419,77073,88678,20831,42211,102886,35927,21463,72905,73593,52844,3114,108990,50576,109878,93802,105613,72436,82194,113122,14078,109441,112709,50378,44390,70994,24165,10717,25883,42928,84267,28006,6916,32839,40916,23910,24491,1562,111147\n",
            "343,5193,12394,119,91479,44678,53627,12139,7237,63390,15399,15891,59970,90445,23450,93863,3014,67572,48398,67663,16180,13660,61707,18368,8484,39512,3856,63463,78831,67570,101787,15092,92551,111269,51060,2726,28799,63699,11213,87961,8960,77434,110868,29919,37597,23574,40955,23228,70461,106561,35820\n",
            "358,89312,92037,57864,116102,65393,113551,87611,89902,13403,10909,31772,97956,43439,31044,15285,54334,72498,10811,68092,71978,11762,64656,2153,65187,79533,33699,34716,59394,113538,110731,9719,8462,25211,102774,57849,51642,83175,28988,62267,74757,81388,116292,50250,14246,114079,689,93560,2009,43347,86515\n",
            "379,65393,57849,80217,4340,71928,100065,50467,32816,36073,70650,85554,26859,74734,90006,95038,29130,71968,21543,31981,46608,13403,22068,19881,83537,73858,81956,33940,25116,32977,77927,37197,63321,33960,43210,78844,20590,49933,39711,114330,63019,36071,74296,11170,85661,79412,66177,35474,87344,26670,34461\n",
            "383,109407,89783,98060,53929,91913,2844,64006,46673,20227,58621,31792,85369,6646,7797,54688,76050,78650,102200,28057,73543,9677,2954,20267,12643,49367,404,53507,66464,39812,5342,73693,6551,37178,80587,94924,111743,2728,11279,83420,29973,101875,46517,43412,98972,15314,73350,18240,85641,60604,36859\n",
            "384,1395,34217,101328,26092,76871,3637,67535,16321,15484,43471,14655,57907,101517,19545,75797,17345,43159,568,64806,32026,51631,67442,106196,73292,29227,83179,99215,97794,8556,43219,99242,84057,90791,108144,48555,35595,81574,34547,111577,278,29803,37032,44509,83709,80031,95962,93676,43914,27091,83131\n",
            "387,98129,86107,84018,879,603,664,12827,106309,4858,102142,49667,88656,97686,811,617,3483,117011,23140,108994,14662,116778,4493,1188,4556,103063,72782,43205,2977,116111,116114,105157,71581,84194,1927,116118,112718,49286,109955,56411,95902,8845,10682,70607,4412,113980,104258,104653,97116,113467,109228\n",
            "388,86802,24072,113632,7315,42769,107435,40926,105038,113270,7048,27564,114324,36964,99250,21833,112911,109665,82022,112967,46746,90543,4336,21321,116095,113127,105562,68889,112292,110548,106055,76487,8913,34391,19043,62613,108887,65226,115799,8052,96286,82590,65380,57684,72048,21106,49940,50830,60189,10052,21864\n",
            "402,43592,945,2026,31438,3323,961,41037,58600,39293,6105,18472,58627,991,87429,3605,67522,1143,105380,9095,103834,71960,478,110182,26000,3167,9461,4563,110787,6685,55705,258,3632,50614,33265,54618,46446,53547,24181,50958,8787,9582,49287,1470,4690,89542,1131,110,8179,87310,49898\n",
            "403,59717,46738,24981,110386,109906,43135,54261,46100,11518,97499,39574,54113,26756,97203,80293,82286,50728,25514,56092,53959,37068,80994,55520,8708,67431,11270,69991,29478,35938,41397,43157,92576,78891,98312,33791,60183,55166,14386,58114,18009,51796,93988,85912,97035,16253,65012,35461,36208,51885,93436\n",
            "409,43167,235,20158,110804,265,3057,6601,115009,113026,13860,113700,3403,81418,1278,80909,8057,109008,9115,9216,31271,6491,112859,5977,7280,2600,255,113442,37420,9782,62712,39585,106388,7225,113743,91642,269,91206,59644,1260,96634,25136,113482,18324,23444,18750,82055,91276,110382,82192,90603\n",
            "414,33089,6694,65701,100083,6031,25105,48093,6248,8481,39852,78723,13758,70778,4619,864,3907,22677,78887,17133,86891,23097,48221,47164,28545,112469,75805,79414,14760,26168,24862,4452,80679,34223,63321,69561,7217,27074,90415,81795,34104,6651,91426,94634,49297,71226,3201,29126,45578,68592,21309\n",
            "417,91715,108425,71753,45490,85624,4737,85753,105890,7108,107954,53189,9238,83514,10045,73446,101921,10587,6050,44785,109506,93180,48573,89912,65297,93955,91551,18308,78656,78849,57745,51437,115606,27020,15987,46730,81496,24545,97824,113826,20899,6554,22819,1020,74699,80750,40356,51588,46018,91756,117243\n",
            "421,88579,87519,113010,95242,87162,105647,45216,105191,57070,109247,79059,99256,74076,107280,106891,110704,6642,71981,37009,80461,77556,46981,19508,47139,34156,70743,76507,23424,88511,21551,84987,14982,116066,111534,6374,54375,76813,51823,106856,88291,51093,62262,62642,93678,14904,20479,73237,113614,5317,89456\n",
            "423,103448,108056,109845,84717,110066,71419,95071,103737,95069,47301,18524,105809,110068,93203,101449,16181,63815,103197,96854,49655,30396,84760,60870,41436,17028,73679,12453,94407,113975,36688,110073,110048,96845,12096,35446,94394,95077,20029,79507,28459,34649,103047,16157,68138,74799,18368,48340,39477,94396,39016\n",
            "424,35129,73966,37405,50909,79745,48589,47002,68627,1685,967,9851,7066,8346,5130,51404,34630,15524,91597,4643,43421,72398,83044,56261,33193,22082,1482,10160,96056,38845,40224,14264,42205,14640,79412,18239,24043,30030,31362,95459,107083,16543,111579,65181,4395,26912,35174,5532,69040,90093,73864\n",
            "432,60455,73026,41867,104590,50095,11273,16956,15618,6043,28644,92003,32589,60864,3611,2058,53076,1351,27009,114114,58852,47089,4585,69410,24399,10837,60072,7259,113879,110204,112417,41329,26666,6740,3715,28495,7638,50527,88056,8843,18091,6027,106096,11258,11196,9072,85317,41584,52766,111225,4340\n",
            "441,55723,53254,70486,43455,87899,55821,57476,14360,76967,26141,96045,45623,55263,41318,49990,68328,37106,32690,17655,17053,48263,33365,40676,74241,94927,27391,78475,53265,59889,3133,30229,40010,109427,92918,113346,62071,43221,49940,70830,7385,13389,77327,5907,89427,46191,3372,96554,28269,14502,2749\n",
            "445,89881,52199,5194,67789,69903,10675,89034,22137,68120,9066,6973,78195,63099,17370,41483,7061,72382,77831,8954,42955,43622,3506,89677,38650,5062,23466,14347,46323,22429,2131,26556,9030,70502,72486,19856,56638,103317,3076,27044,28667,57911,81578,25703,43980,99500,36285,48236,88813,27941,3380\n",
            "449,27710,31124,25017,967,27117,28135,61930,37886,13722,56984,58512,50752,89243,21477,57722,78652,82816,28110,10757,84470,29730,93795,24545,112294,105883,50774,26598,83402,92064,101591,79632,77384,10494,85537,18821,59909,63750,94417,101060,82393,30164,55828,21161,54013,44523,78889,54004,25946,33270,44407\n",
            "452,54629,51397,18836,8854,6051,72880,12393,897,24756,74020,90192,85658,15348,7346,4197,111494,87422,27659,81697,2371,8767,37576,25772,96911,12117,18233,88419,47164,37552,15410,11669,12238,78851,6012,33633,94405,41340,75897,63705,2460,5463,76644,93379,3127,24290,16335,3914,2905,25463,83003\n",
            "453,105171,28956,97693,34414,91621,45032,71969,91837,109709,106409,96297,101290,84558,21879,30530,59543,7414,86641,92520,73376,48108,47675,103321,85217,115156,62003,94507,29946,15268,64302,67021,28034,95312,55758,81410,43607,112288,27746,92036,80736,24505,54180,100984,53014,105423,56143,88807,106155,27341,39717\n",
            "460,43849,49758,68755,50123,28126,48277,23856,91002,55132,84760,67014,10729,89558,39729,23620,102479,110497,24978,36806,52396,91656,97367,49193,90514,66855,35250,68728,93852,61297,92683,14910,19318,105273,27817,1123,67567,68763,37513,49803,15960,38024,91482,101024,68716,43189,92544,24056,107051,35821,15102\n",
            "461,93554,115095,32968,39678,75882,77678,113672,19091,97776,89518,52229,90151,70339,15658,85181,56687,65017,76886,45372,45437,43665,99449,2159,6255,1080,81611,87032,95740,9910,83978,22911,69578,87324,15959,19703,49530,11706,41892,108216,29871,86670,46334,47307,2242,75441,36704,3073,25930,112697,61220\n",
            "462,26544,88894,63007,63011,55976,89864,81603,113593,22794,3439,75669,108205,9012,110172,62968,34301,85661,37361,103204,75830,86734,39619,79029,32157,97382,38891,97513,18755,68155,42995,92433,56160,87222,64868,94388,81193,36157,86297,109733,25088,23666,36071,61610,87826,7682,68820,76942,69398,28063,37127\n",
            "473,115311,111036,25498,29387,83554,112107,104728,5444,111191,44174,114893,11647,111215,115561,10897,11848,82303,112884,7910,113194,66195,81481,63284,111829,52679,43454,111576,82619,107128,41445,17687,112709,70622,113633,13847,26215,101688,45194,29851,39680,33160,115755,12663,53868,41902,20135,102793,92675,61726,36718\n",
            "475,31819,58970,58269,48075,109740,66408,55938,49860,61748,44758,30292,47180,96231,37177,66017,94190,44044,11917,101429,21085,38663,7294,56198,7927,57751,38569,98374,102143,52166,72587,21048,58469,22045,106893,31889,56936,33188,52773,107403,67835,74254,76979,68678,44879,50645,93626,86689,43849,18984,95535\n",
            "476,40582,97861,35879,45129,63680,28943,17287,68271,54023,73296,8789,98284,21399,92379,110275,53964,64497,112161,116409,5346,35749,110872,56880,20208,59040,4798,54945,36853,33782,19326,77095,45198,61324,47448,109233,57201,6684,79868,3654,65172,112472,88058,8076,19480,37608,111906,98836,1384,3170,26759\n",
            "480,17918,67549,2503,110671,106350,113253,43649,25990,100502,87775,66787,54166,113111,37179,108953,12866,103355,11220,93546,101418,32748,22513,47800,3591,5663,15058,53711,84269,113822,110531,42452,79956,28804,23632,38946,18536,693,33684,11329,84324,104419,99253,101621,31917,50324,76579,12252,89581,97580,41783\n",
            "484,98577,37201,91660,79684,93790,75067,59318,73004,74723,82788,70673,112327,23765,95198,74584,68909,80580,95791,88254,1834,27337,64087,93675,106459,75440,92495,99942,49855,77096,86520,21747,75375,855,85134,75193,44265,111225,13905,55652,111114,81628,91815,76943,27496,47607,67831,104703,55349,94645,50075\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KemkPqL1R2Oo",
        "colab_type": "code",
        "outputId": "585cde43-df25-4d1f-a1e1-0ccabad1ae8b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "item_aware_score = evaluate(submit_fname=output_path + \"/baseline_itemcf_v5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')# 不去重"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588840649\n",
            "date_time: 2020-05-07 08:37:29\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05291778 0.04896829 0.1525     0.13778706]\n",
            "phase_id=1, score=[0.06039484 0.04449424 0.17       0.1264637 ]\n",
            "phase_id=2, score=[0.05856397 0.05227124 0.18       0.14945322]\n",
            "phase_id=3, score=[0.04725555 0.0338024  0.145      0.09665871]\n",
            "phase_id=4, score=[0.05110162 0.04611305 0.143125   0.1134402 ]\n",
            "score=0.27023378014564514,\n",
            "hitrate_50_full=0.7906249761581421,\n",
            "ndcg_50_full=0.27023378014564514,\n",
            "hitrate_50_half=0.623802900314331, \n",
            "ndcg_50_half=0.22564920783042908\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QG0uxx2-Bcql",
        "colab_type": "text"
      },
      "source": [
        "#### co-occur\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DIu5KXcMsxpE",
        "colab_type": "code",
        "outputId": "f2b1b42e-2e96-4ad3-84da-7b79e9c454e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_co_occurrance_v3.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1587893612\n",
            "date_time: 2020-04-26 09:33:32\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.03873044 0.01724062 0.08117859 0.03771552]\n",
            "phase_id=1, score=[0.03949066 0.01582514 0.08516802 0.03756906]\n",
            "phase_id=2, score=[0.0373215  0.01789842 0.08757397 0.04918033]\n",
            "phase_id=3, score=[0.04852902 0.02145529 0.09910448 0.04277457]\n",
            "score=0.16407161951065063,\n",
            "hitrate_50_full=0.35302507877349854,\n",
            "ndcg_50_full=0.16407161951065063,\n",
            "hitrate_50_half=0.1672394722700119, \n",
            "ndcg_50_half=0.07241946458816528\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.16407162"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4T7kV1-aBf2g",
        "colab_type": "text"
      },
      "source": [
        "#### bi-graph"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6ntaGluo1LdV",
        "colab_type": "code",
        "outputId": "912ba976-86fa-4475-f5e9-0adda2ba13c5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_bi_graph_v4.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588164960\n",
            "date_time: 2020-04-29 12:56:00\n",
            "current_phase: 3\n",
            "phase_id=0, score=[0.05315709 0.02752907 0.11846061 0.06896552]\n",
            "phase_id=1, score=[0.05381098 0.02456291 0.12746234 0.07071823]\n",
            "phase_id=2, score=[0.05587012 0.02702447 0.13195266 0.07611241]\n",
            "phase_id=3, score=[0.06339599 0.03041016 0.14149253 0.07745665]\n",
            "score=0.22623418271541595,\n",
            "hitrate_50_full=0.5193681716918945,\n",
            "ndcg_50_full=0.22623418271541595,\n",
            "hitrate_50_half=0.2932528257369995, \n",
            "ndcg_50_half=0.1095266118645668\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.22623418"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lPnKx699x8B6",
        "colab_type": "code",
        "outputId": "35b2a6e5-7786-4125-dec6-504b658e1d73",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_bi_graph_v5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # 考虑content"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588731588\n",
            "date_time: 2020-05-06 02:19:48\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05459733 0.03275488 0.11875    0.07306889]\n",
            "phase_id=1, score=[0.06314693 0.03078487 0.136875   0.07728337]\n",
            "phase_id=2, score=[0.05994375 0.03723851 0.14       0.08869988]\n",
            "phase_id=3, score=[0.05255592 0.02269179 0.120625   0.06563246]\n",
            "phase_id=4, score=[0.06305876 0.04380863 0.1425     0.09617756]\n",
            "score=0.2933026850223541,\n",
            "hitrate_50_full=0.6587499976158142,\n",
            "ndcg_50_full=0.2933026850223541,\n",
            "hitrate_50_half=0.4008621573448181, \n",
            "ndcg_50_half=0.16727867722511292\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.29330269"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wj00vvEHmooF",
        "colab_type": "code",
        "outputId": "94ffd36d-f3d3-4c6e-8c98-37ac02c962da",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 255
        }
      },
      "source": [
        "evaluate(submit_fname=output_path + \"/baseline_bi_graph_v5.csv\", \n",
        "         answer_fname=output_path +'/debias_track_answer.csv') # 考虑双向content"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588846040\n",
            "date_time: 2020-05-07 10:07:20\n",
            "current_phase: 4\n",
            "phase_id=0, score=[0.05523178 0.03502944 0.119375   0.07933194]\n",
            "phase_id=1, score=[0.06434983 0.0344828  0.13875    0.07962529]\n",
            "phase_id=2, score=[0.06017021 0.03861146 0.14125    0.08991495]\n",
            "phase_id=3, score=[0.0535805  0.02503615 0.12625    0.07159904]\n",
            "phase_id=4, score=[0.06406474 0.04624954 0.14625    0.10110974]\n",
            "score=0.29739707708358765,\n",
            "hitrate_50_full=0.671875,\n",
            "ndcg_50_full=0.29739707708358765,\n",
            "hitrate_50_half=0.421580970287323, \n",
            "ndcg_50_half=0.17940938472747803\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.29739708"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NNB-CQ3Iop3D",
        "colab_type": "text"
      },
      "source": [
        "## phase"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "i3hHnsrCi2Fv",
        "colab_type": "code",
        "outputId": "95f5417c-c881-4bb9-86b5-968bf01e2fc0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        }
      },
      "source": [
        "evaluate_target_phase(output_path + \"/baseline_recall_v1_phase_4.csv\", now_phase, \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588675947\n",
            "date_time: 2020-05-05 10:52:27\n",
            "current_phase: 4\n",
            "phase_id=4, score=[0.05611001 0.04737585 0.1325     0.0974106 ]\n",
            "score=0.05611000955104828,\n",
            "hitrate_50_full=0.13249999284744263,\n",
            "ndcg_50_full=0.05611000955104828,\n",
            "hitrate_50_half=0.09741060435771942, \n",
            "ndcg_50_half=0.04737584665417671\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.05611001"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 563
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fOCxP8JWHMmO",
        "colab_type": "code",
        "outputId": "37c7e2db-32a3-41e4-dfa6-d7bd5cf13396",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        }
      },
      "source": [
        "evaluate_target_phase(output_path + \"/baseline_ranking_v1_phase_4.csv\", now_phase, \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588675951\n",
            "date_time: 2020-05-05 10:52:31\n",
            "current_phase: 4\n",
            "phase_id=4, score=[0.02907664 0.0137327  0.076875   0.04685573]\n",
            "score=0.02907663583755493,\n",
            "hitrate_50_full=0.0768750011920929,\n",
            "ndcg_50_full=0.02907663583755493,\n",
            "hitrate_50_half=0.046855732798576355, \n",
            "ndcg_50_half=0.013732696883380413\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.029076636"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 564
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mxdUC2JGfIVh",
        "colab_type": "code",
        "outputId": "2d25ac44-c84d-4a07-8062-b21c6064745f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        }
      },
      "source": [
        "evaluate_target_phase(output_path + \"/baseline_ranking_v1_phase_4.csv\", now_phase, \n",
        "         answer_fname=output_path +'/debias_track_answer.csv')"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "current_time: 1588676301\n",
            "date_time: 2020-05-05 10:58:21\n",
            "current_phase: 4\n",
            "phase_id=4, score=[0.05182825 0.04225082 0.126875   0.09617756]\n",
            "score=0.051828254014253616,\n",
            "hitrate_50_full=0.12687499821186066,\n",
            "ndcg_50_full=0.051828254014253616,\n",
            "hitrate_50_half=0.09617755562067032, \n",
            "ndcg_50_half=0.042250823229551315\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.051828254"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 571
        }
      ]
    }
  ]
}